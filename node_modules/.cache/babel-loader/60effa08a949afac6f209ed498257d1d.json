{"ast":null,"code":"const util = require('../util');\n\nconst nunjucks = require('nunjucks');\n\nconst querystring = require('query-string');\n\nconst ansibleTemplate = require('../templates/ansible.js');\n\nfunction getDataString(request) {\n  const parsedQueryString = querystring.parse(request.data, {\n    sort: false\n  });\n  const keyCount = Object.keys(parsedQueryString).length;\n  const singleKeyOnly = keyCount === 1 && !parsedQueryString[Object.keys(parsedQueryString)[0]];\n  const singularData = request.isDataBinary || singleKeyOnly;\n\n  if (singularData) {\n    return JSON.parse(request.data);\n  } else {\n    return request.data;\n  }\n}\n\nconst toAnsible = curlCommand => {\n  const request = util.parseCurlCommand(curlCommand);\n  var convertedData;\n\n  if (typeof request.data === 'string' || typeof request.data === 'number') {\n    convertedData = getDataString(request);\n  }\n\n  var result = nunjucks.renderString(ansibleTemplate, {\n    request: request,\n    data: convertedData\n  });\n  return result;\n};\n\nmodule.exports = toAnsible;","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/node_modules/curlconverter/generators/ansible.js"],"names":["util","require","nunjucks","querystring","ansibleTemplate","getDataString","request","parsedQueryString","parse","data","sort","keyCount","Object","keys","length","singleKeyOnly","singularData","isDataBinary","JSON","toAnsible","curlCommand","parseCurlCommand","convertedData","result","renderString","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMG,eAAe,GAAGH,OAAO,CAAC,yBAAD,CAA/B;;AACA,SAASI,aAAT,CAAwBC,OAAxB,EAAiC;AAC/B,QAAMC,iBAAiB,GAAGJ,WAAW,CAACK,KAAZ,CAAkBF,OAAO,CAACG,IAA1B,EAAgC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAhC,CAA1B;AACA,QAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,iBAAZ,EAA+BO,MAAhD;AACA,QAAMC,aAAa,GAAGJ,QAAQ,KAAK,CAAb,IAAkB,CAACJ,iBAAiB,CAACK,MAAM,CAACC,IAAP,CAAYN,iBAAZ,EAA+B,CAA/B,CAAD,CAA1D;AACA,QAAMS,YAAY,GAAGV,OAAO,CAACW,YAAR,IAAwBF,aAA7C;;AACA,MAAIC,YAAJ,EAAkB;AAChB,WAAOE,IAAI,CAACV,KAAL,CAAWF,OAAO,CAACG,IAAnB,CAAP;AACD,GAFD,MAEO;AACL,WAAOH,OAAO,CAACG,IAAf;AACD;AACF;;AAED,MAAMU,SAAS,GAAGC,WAAW,IAAI;AAC/B,QAAMd,OAAO,GAAGN,IAAI,CAACqB,gBAAL,CAAsBD,WAAtB,CAAhB;AACA,MAAIE,aAAJ;;AACA,MAAI,OAAOhB,OAAO,CAACG,IAAf,KAAwB,QAAxB,IAAoC,OAAOH,OAAO,CAACG,IAAf,KAAwB,QAAhE,EAA0E;AACxEa,IAAAA,aAAa,GAAGjB,aAAa,CAACC,OAAD,CAA7B;AACD;;AACD,MAAIiB,MAAM,GAAGrB,QAAQ,CAACsB,YAAT,CAAsBpB,eAAtB,EAAuC;AAAEE,IAAAA,OAAO,EAAEA,OAAX;AAAoBG,IAAAA,IAAI,EAAEa;AAA1B,GAAvC,CAAb;AACA,SAAOC,MAAP;AACD,CARD;;AAUAE,MAAM,CAACC,OAAP,GAAiBP,SAAjB","sourcesContent":["const util = require('../util')\nconst nunjucks = require('nunjucks')\nconst querystring = require('query-string')\nconst ansibleTemplate = require('../templates/ansible.js')\nfunction getDataString (request) {\n  const parsedQueryString = querystring.parse(request.data, { sort: false })\n  const keyCount = Object.keys(parsedQueryString).length\n  const singleKeyOnly = keyCount === 1 && !parsedQueryString[Object.keys(parsedQueryString)[0]]\n  const singularData = request.isDataBinary || singleKeyOnly\n  if (singularData) {\n    return JSON.parse(request.data)\n  } else {\n    return request.data\n  }\n}\n\nconst toAnsible = curlCommand => {\n  const request = util.parseCurlCommand(curlCommand)\n  var convertedData\n  if (typeof request.data === 'string' || typeof request.data === 'number') {\n    convertedData = getDataString(request)\n  }\n  var result = nunjucks.renderString(ansibleTemplate, { request: request, data: convertedData })\n  return result\n}\n\nmodule.exports = toAnsible\n"]},"metadata":{},"sourceType":"script"}