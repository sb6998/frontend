{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _YargsInstance_command, _YargsInstance_cwd, _YargsInstance_context, _YargsInstance_completion, _YargsInstance_completionCommand, _YargsInstance_defaultShowHiddenOpt, _YargsInstance_exitError, _YargsInstance_detectLocale, _YargsInstance_emittedWarnings, _YargsInstance_exitProcess, _YargsInstance_frozens, _YargsInstance_globalMiddleware, _YargsInstance_groups, _YargsInstance_hasOutput, _YargsInstance_helpOpt, _YargsInstance_logger, _YargsInstance_output, _YargsInstance_options, _YargsInstance_parentRequire, _YargsInstance_parserConfig, _YargsInstance_parseFn, _YargsInstance_parseContext, _YargsInstance_pkgs, _YargsInstance_preservedGroups, _YargsInstance_processArgs, _YargsInstance_recommendCommands, _YargsInstance_shim, _YargsInstance_strict, _YargsInstance_strictCommands, _YargsInstance_strictOptions, _YargsInstance_usage, _YargsInstance_versionOpt, _YargsInstance_validation;\n\nimport { command as Command } from './command.js';\nimport { assertNotStrictEqual, assertSingleKey, objectKeys } from './typings/common-types.js';\nimport { YError } from './yerror.js';\nimport { usage as Usage } from './usage.js';\nimport { argsert } from './argsert.js';\nimport { completion as Completion } from './completion.js';\nimport { validation as Validation } from './validation.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { applyExtends } from './utils/apply-extends.js';\nimport { applyMiddleware, GlobalMiddleware } from './middleware.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function YargsFactory(_shim) {\n  return function () {\n    let processArgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let cwd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _shim.process.cwd();\n    let parentRequire = arguments.length > 2 ? arguments[2] : undefined;\n    const yargs = new YargsInstance(processArgs, cwd, parentRequire, _shim);\n    Object.defineProperty(yargs, 'argv', {\n      get: () => {\n        return yargs.parse();\n      },\n      enumerable: true\n    });\n    yargs.help();\n    yargs.version();\n    return yargs;\n  };\n}\nconst kCopyDoubleDash = Symbol('copyDoubleDash');\nconst kCreateLogger = Symbol('copyDoubleDash');\nconst kDeleteFromParserHintObject = Symbol('deleteFromParserHintObject');\nconst kEmitWarning = Symbol('emitWarning');\nconst kFreeze = Symbol('freeze');\nconst kGetDollarZero = Symbol('getDollarZero');\nconst kGetParserConfiguration = Symbol('getParserConfiguration');\nconst kGuessLocale = Symbol('guessLocale');\nconst kGuessVersion = Symbol('guessVersion');\nconst kParsePositionalNumbers = Symbol('parsePositionalNumbers');\nconst kPkgUp = Symbol('pkgUp');\nconst kPopulateParserHintArray = Symbol('populateParserHintArray');\nconst kPopulateParserHintSingleValueDictionary = Symbol('populateParserHintSingleValueDictionary');\nconst kPopulateParserHintArrayDictionary = Symbol('populateParserHintArrayDictionary');\nconst kPopulateParserHintDictionary = Symbol('populateParserHintDictionary');\nconst kSanitizeKey = Symbol('sanitizeKey');\nconst kSetKey = Symbol('setKey');\nconst kUnfreeze = Symbol('unfreeze');\nconst kValidateAsync = Symbol('validateAsync');\nconst kGetCommandInstance = Symbol('getCommandInstance');\nconst kGetContext = Symbol('getContext');\nconst kGetHasOutput = Symbol('getHasOutput');\nconst kGetLoggerInstance = Symbol('getLoggerInstance');\nconst kGetParseContext = Symbol('getParseContext');\nconst kGetUsageInstance = Symbol('getUsageInstance');\nconst kGetValidationInstance = Symbol('getValidationInstance');\nconst kHasParseCallback = Symbol('hasParseCallback');\nconst kPostProcess = Symbol('postProcess');\nconst kRebase = Symbol('rebase');\nconst kReset = Symbol('reset');\nconst kRunYargsParserAndExecuteCommands = Symbol('runYargsParserAndExecuteCommands');\nconst kRunValidation = Symbol('runValidation');\nconst kSetHasOutput = Symbol('setHasOutput');\nconst kTrackManuallySetKeys = Symbol('kTrackManuallySetKeys');\nexport class YargsInstance {\n  constructor() {\n    let processArgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let cwd = arguments.length > 1 ? arguments[1] : undefined;\n    let parentRequire = arguments.length > 2 ? arguments[2] : undefined;\n    let shim = arguments.length > 3 ? arguments[3] : undefined;\n    this.customScriptName = false;\n    this.parsed = false;\n\n    _YargsInstance_command.set(this, void 0);\n\n    _YargsInstance_cwd.set(this, void 0);\n\n    _YargsInstance_context.set(this, {\n      commands: [],\n      fullCommands: []\n    });\n\n    _YargsInstance_completion.set(this, null);\n\n    _YargsInstance_completionCommand.set(this, null);\n\n    _YargsInstance_defaultShowHiddenOpt.set(this, 'show-hidden');\n\n    _YargsInstance_exitError.set(this, null);\n\n    _YargsInstance_detectLocale.set(this, true);\n\n    _YargsInstance_emittedWarnings.set(this, {});\n\n    _YargsInstance_exitProcess.set(this, true);\n\n    _YargsInstance_frozens.set(this, []);\n\n    _YargsInstance_globalMiddleware.set(this, void 0);\n\n    _YargsInstance_groups.set(this, {});\n\n    _YargsInstance_hasOutput.set(this, false);\n\n    _YargsInstance_helpOpt.set(this, null);\n\n    _YargsInstance_logger.set(this, void 0);\n\n    _YargsInstance_output.set(this, '');\n\n    _YargsInstance_options.set(this, void 0);\n\n    _YargsInstance_parentRequire.set(this, void 0);\n\n    _YargsInstance_parserConfig.set(this, {});\n\n    _YargsInstance_parseFn.set(this, null);\n\n    _YargsInstance_parseContext.set(this, null);\n\n    _YargsInstance_pkgs.set(this, {});\n\n    _YargsInstance_preservedGroups.set(this, {});\n\n    _YargsInstance_processArgs.set(this, void 0);\n\n    _YargsInstance_recommendCommands.set(this, false);\n\n    _YargsInstance_shim.set(this, void 0);\n\n    _YargsInstance_strict.set(this, false);\n\n    _YargsInstance_strictCommands.set(this, false);\n\n    _YargsInstance_strictOptions.set(this, false);\n\n    _YargsInstance_usage.set(this, void 0);\n\n    _YargsInstance_versionOpt.set(this, null);\n\n    _YargsInstance_validation.set(this, void 0);\n\n    __classPrivateFieldSet(this, _YargsInstance_shim, shim, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_processArgs, processArgs, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_cwd, cwd, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_parentRequire, parentRequire, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_globalMiddleware, new GlobalMiddleware(this), \"f\");\n\n    this.$0 = this[kGetDollarZero]();\n    this[kReset]();\n\n    __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), \"f\");\n\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_logger, this[kCreateLogger](), \"f\");\n  }\n\n  addHelpOpt(opt, msg) {\n    const defaultHelpOpt = 'help';\n    argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n\n    if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n      this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n\n      __classPrivateFieldSet(this, _YargsInstance_helpOpt, null, \"f\");\n    }\n\n    if (opt === false && msg === undefined) return this;\n\n    __classPrivateFieldSet(this, _YargsInstance_helpOpt, typeof opt === 'string' ? opt : defaultHelpOpt, \"f\");\n\n    this.boolean(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n    this.describe(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"), msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show help'));\n    return this;\n  }\n\n  help(opt, msg) {\n    return this.addHelpOpt(opt, msg);\n  }\n\n  addShowHiddenOpt(opt, msg) {\n    argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n    if (opt === false && msg === undefined) return this;\n    const showHiddenOpt = typeof opt === 'string' ? opt : __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n    this.boolean(showHiddenOpt);\n    this.describe(showHiddenOpt, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show hidden options'));\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = showHiddenOpt;\n    return this;\n  }\n\n  showHidden(opt, msg) {\n    return this.addShowHiddenOpt(opt, msg);\n  }\n\n  alias(key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n    this[kPopulateParserHintArrayDictionary](this.alias.bind(this), 'alias', key, value);\n    return this;\n  }\n\n  array(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('array', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n\n  boolean(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('boolean', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n\n  check(f, global) {\n    argsert('<function> [boolean]', [f, global], arguments.length);\n    this.middleware((argv, _yargs) => {\n      return maybeAsyncResult(() => {\n        return f(argv);\n      }, result => {\n        if (!result) {\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__('Argument check failed: %s', f.toString()));\n        } else if (typeof result === 'string' || result instanceof Error) {\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(result.toString(), result);\n        }\n\n        return argv;\n      }, err => {\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message ? err.message : err.toString(), err);\n\n        return argv;\n      });\n    }, false, global);\n    return this;\n  }\n\n  choices(key, value) {\n    argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n    this[kPopulateParserHintArrayDictionary](this.choices.bind(this), 'choices', key, value);\n    return this;\n  }\n\n  coerce(keys, value) {\n    argsert('<object|string|array> [function]', [keys, value], arguments.length);\n\n    if (Array.isArray(keys)) {\n      if (!value) {\n        throw new YError('coerce callback must be provided');\n      }\n\n      for (const key of keys) {\n        this.coerce(key, value);\n      }\n\n      return this;\n    } else if (typeof keys === 'object') {\n      for (const key of Object.keys(keys)) {\n        this.coerce(key, keys[key]);\n      }\n\n      return this;\n    }\n\n    if (!value) {\n      throw new YError('coerce callback must be provided');\n    }\n\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addCoerceMiddleware((argv, yargs) => {\n      let aliases;\n      return maybeAsyncResult(() => {\n        aliases = yargs.getAliases();\n        return value(argv[keys]);\n      }, result => {\n        argv[keys] = result;\n\n        if (aliases[keys]) {\n          for (const alias of aliases[keys]) {\n            argv[alias] = result;\n          }\n        }\n\n        return argv;\n      }, err => {\n        throw new YError(err.message);\n      });\n    }, keys);\n\n    return this;\n  }\n\n  conflicts(key1, key2) {\n    argsert('<string|object> [string|array]', [key1, key2], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicts(key1, key2);\n\n    return this;\n  }\n\n  config() {\n    let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'config';\n    let msg = arguments.length > 1 ? arguments[1] : undefined;\n    let parseFn = arguments.length > 2 ? arguments[2] : undefined;\n    argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length);\n\n    if (typeof key === 'object' && !Array.isArray(key)) {\n      key = applyExtends(key, __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(key);\n      return this;\n    }\n\n    if (typeof msg === 'function') {\n      parseFn = msg;\n      msg = undefined;\n    }\n\n    this.describe(key, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Path to JSON config file'));\n    (Array.isArray(key) ? key : [key]).forEach(k => {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").config[k] = parseFn || true;\n    });\n    return this;\n  }\n\n  completion(cmd, desc, fn) {\n    argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length);\n\n    if (typeof desc === 'function') {\n      fn = desc;\n      desc = undefined;\n    }\n\n    __classPrivateFieldSet(this, _YargsInstance_completionCommand, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion', \"f\");\n\n    if (!desc && desc !== false) {\n      desc = 'generate completion script';\n    }\n\n    this.command(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"), desc);\n    if (fn) __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").registerFunction(fn);\n    return this;\n  }\n\n  command(cmd, description, builder, handler, middlewares, deprecated) {\n    argsert('<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]', [cmd, description, builder, handler, middlewares, deprecated], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addHandler(cmd, description, builder, handler, middlewares, deprecated);\n\n    return this;\n  }\n\n  commands(cmd, description, builder, handler, middlewares, deprecated) {\n    return this.command(cmd, description, builder, handler, middlewares, deprecated);\n  }\n\n  commandDir(dir, opts) {\n    argsert('<string> [object]', [dir, opts], arguments.length);\n\n    const req = __classPrivateFieldGet(this, _YargsInstance_parentRequire, \"f\") || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").require;\n\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addDirectory(dir, req, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getCallerFile(), opts);\n\n    return this;\n  }\n\n  count(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('count', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n\n  default(key, value, defaultDescription) {\n    argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length);\n\n    if (defaultDescription) {\n      assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = defaultDescription;\n    }\n\n    if (typeof value === 'function') {\n      assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key]) __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").functionDescription(value);\n      value = value.call();\n    }\n\n    this[kPopulateParserHintSingleValueDictionary](this.default.bind(this), 'default', key, value);\n    return this;\n  }\n\n  defaults(key, value, defaultDescription) {\n    return this.default(key, value, defaultDescription);\n  }\n\n  demandCommand() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let max = arguments.length > 1 ? arguments[1] : undefined;\n    let minMsg = arguments.length > 2 ? arguments[2] : undefined;\n    let maxMsg = arguments.length > 3 ? arguments[3] : undefined;\n    argsert('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length);\n\n    if (typeof max !== 'number') {\n      minMsg = max;\n      max = Infinity;\n    }\n\n    this.global('_', false);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands._ = {\n      min,\n      max,\n      minMsg,\n      maxMsg\n    };\n    return this;\n  }\n\n  demand(keys, max, msg) {\n    if (Array.isArray(max)) {\n      max.forEach(key => {\n        assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        this.demandOption(key, msg);\n      });\n      max = Infinity;\n    } else if (typeof max !== 'number') {\n      msg = max;\n      max = Infinity;\n    }\n\n    if (typeof keys === 'number') {\n      assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      this.demandCommand(keys, max, msg, msg);\n    } else if (Array.isArray(keys)) {\n      keys.forEach(key => {\n        assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        this.demandOption(key, msg);\n      });\n    } else {\n      if (typeof msg === 'string') {\n        this.demandOption(keys, msg);\n      } else if (msg === true || typeof msg === 'undefined') {\n        this.demandOption(keys);\n      }\n    }\n\n    return this;\n  }\n\n  demandOption(keys, msg) {\n    argsert('<object|string|array> [string]', [keys, msg], arguments.length);\n    this[kPopulateParserHintSingleValueDictionary](this.demandOption.bind(this), 'demandedOptions', keys, msg);\n    return this;\n  }\n\n  deprecateOption(option, message) {\n    argsert('<string> [string|boolean]', [option, message], arguments.length);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions[option] = message;\n    return this;\n  }\n\n  describe(keys, description) {\n    argsert('<object|string|array> [string]', [keys, description], arguments.length);\n    this[kSetKey](keys, true);\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").describe(keys, description);\n\n    return this;\n  }\n\n  detectLocale(detect) {\n    argsert('<boolean>', [detect], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_detectLocale, detect, \"f\");\n\n    return this;\n  }\n\n  env(prefix) {\n    argsert('[string|boolean]', [prefix], arguments.length);\n    if (prefix === false) delete __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;else __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix = prefix || '';\n    return this;\n  }\n\n  epilogue(msg) {\n    argsert('<string>', [msg], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").epilog(msg);\n\n    return this;\n  }\n\n  epilog(msg) {\n    return this.epilogue(msg);\n  }\n\n  example(cmd, description) {\n    argsert('<string|array> [string]', [cmd, description], arguments.length);\n\n    if (Array.isArray(cmd)) {\n      cmd.forEach(exampleParams => this.example(...exampleParams));\n    } else {\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").example(cmd, description);\n    }\n\n    return this;\n  }\n\n  exit(code, err) {\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_exitError, err, \"f\");\n\n    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.exit(code);\n  }\n\n  exitProcess() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    argsert('[boolean]', [enabled], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_exitProcess, enabled, \"f\");\n\n    return this;\n  }\n\n  fail(f) {\n    argsert('<function|boolean>', [f], arguments.length);\n\n    if (typeof f === 'boolean' && f !== false) {\n      throw new YError(\"Invalid first argument. Expected function or boolean 'false'\");\n    }\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").failFn(f);\n\n    return this;\n  }\n\n  getAliases() {\n    return this.parsed ? this.parsed.aliases : {};\n  }\n\n  async getCompletion(args, done) {\n    argsert('<array> [function]', [args, done], arguments.length);\n\n    if (!done) {\n      return new Promise((resolve, reject) => {\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, (err, completions) => {\n          if (err) reject(err);else resolve(completions);\n        });\n      });\n    } else {\n      return __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, done);\n    }\n  }\n\n  getDemandedOptions() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedOptions;\n  }\n\n  getDemandedCommands() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands;\n  }\n\n  getDeprecatedOptions() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions;\n  }\n\n  getDetectLocale() {\n    return __classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\");\n  }\n\n  getExitProcess() {\n    return __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\");\n  }\n\n  getGroups() {\n    return Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"), __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"));\n  }\n\n  getHelp() {\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n\n    if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n      if (!this.parsed) {\n        const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n\n        if (isPromise(parse)) {\n          return parse.then(() => {\n            return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n          });\n        }\n      }\n\n      const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n\n      if (isPromise(builderResponse)) {\n        return builderResponse.then(() => {\n          return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n        });\n      }\n    }\n\n    return Promise.resolve(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help());\n  }\n\n  getOptions() {\n    return __classPrivateFieldGet(this, _YargsInstance_options, \"f\");\n  }\n\n  getStrict() {\n    return __classPrivateFieldGet(this, _YargsInstance_strict, \"f\");\n  }\n\n  getStrictCommands() {\n    return __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\");\n  }\n\n  getStrictOptions() {\n    return __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\");\n  }\n\n  global(globals, global) {\n    argsert('<string|array> [boolean]', [globals, global], arguments.length);\n    globals = [].concat(globals);\n\n    if (global !== false) {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.filter(l => globals.indexOf(l) === -1);\n    } else {\n      globals.forEach(g => {\n        if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.includes(g)) __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.push(g);\n      });\n    }\n\n    return this;\n  }\n\n  group(opts, groupName) {\n    argsert('<string|array> <string>', [opts, groupName], arguments.length);\n\n    const existing = __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName] || __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName];\n\n    if (__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName]) {\n      delete __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName];\n    }\n\n    const seen = {};\n    __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName] = (existing || []).concat(opts).filter(key => {\n      if (seen[key]) return false;\n      return seen[key] = true;\n    });\n    return this;\n  }\n\n  hide(key) {\n    argsert('<string>', [key], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").hiddenOptions.push(key);\n\n    return this;\n  }\n\n  implies(key, value) {\n    argsert('<string|object> [number|string|array]', [key, value], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implies(key, value);\n\n    return this;\n  }\n\n  locale(locale) {\n    argsert('[string]', [locale], arguments.length);\n\n    if (!locale) {\n      this[kGuessLocale]();\n      return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.getLocale();\n    }\n\n    __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n\n    __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.setLocale(locale);\n\n    return this;\n  }\n\n  middleware(callback, applyBeforeValidation, global) {\n    return __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addMiddleware(callback, !!applyBeforeValidation, global);\n  }\n\n  nargs(key, value) {\n    argsert('<string|object|array> [number]', [key, value], arguments.length);\n    this[kPopulateParserHintSingleValueDictionary](this.nargs.bind(this), 'narg', key, value);\n    return this;\n  }\n\n  normalize(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('normalize', keys);\n    return this;\n  }\n\n  number(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('number', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n\n  option(key, opt) {\n    argsert('<string|object> [object]', [key, opt], arguments.length);\n\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(k => {\n        this.options(k, key[k]);\n      });\n    } else {\n      if (typeof opt !== 'object') {\n        opt = {};\n      }\n\n      this[kTrackManuallySetKeys](key);\n\n      if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && (key === 'version' || (opt === null || opt === void 0 ? void 0 : opt.alias) === 'version')) {\n        this[kEmitWarning](['\"version\" is a reserved word.', 'Please do one of the following:', '- Disable version with `yargs.version(false)` if using \"version\" as an option', '- Use the built-in `yargs.version` method instead (if applicable)', '- Use a different option key', 'https://yargs.js.org/docs/#api-reference-version'].join('\\n'), undefined, 'versionWarning');\n      }\n\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[key] = true;\n      if (opt.alias) this.alias(key, opt.alias);\n      const deprecate = opt.deprecate || opt.deprecated;\n\n      if (deprecate) {\n        this.deprecateOption(key, deprecate);\n      }\n\n      const demand = opt.demand || opt.required || opt.require;\n\n      if (demand) {\n        this.demand(key, demand);\n      }\n\n      if (opt.demandOption) {\n        this.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined);\n      }\n\n      if (opt.conflicts) {\n        this.conflicts(key, opt.conflicts);\n      }\n\n      if ('default' in opt) {\n        this.default(key, opt.default);\n      }\n\n      if (opt.implies !== undefined) {\n        this.implies(key, opt.implies);\n      }\n\n      if (opt.nargs !== undefined) {\n        this.nargs(key, opt.nargs);\n      }\n\n      if (opt.config) {\n        this.config(key, opt.configParser);\n      }\n\n      if (opt.normalize) {\n        this.normalize(key);\n      }\n\n      if (opt.choices) {\n        this.choices(key, opt.choices);\n      }\n\n      if (opt.coerce) {\n        this.coerce(key, opt.coerce);\n      }\n\n      if (opt.group) {\n        this.group(key, opt.group);\n      }\n\n      if (opt.boolean || opt.type === 'boolean') {\n        this.boolean(key);\n        if (opt.alias) this.boolean(opt.alias);\n      }\n\n      if (opt.array || opt.type === 'array') {\n        this.array(key);\n        if (opt.alias) this.array(opt.alias);\n      }\n\n      if (opt.number || opt.type === 'number') {\n        this.number(key);\n        if (opt.alias) this.number(opt.alias);\n      }\n\n      if (opt.string || opt.type === 'string') {\n        this.string(key);\n        if (opt.alias) this.string(opt.alias);\n      }\n\n      if (opt.count || opt.type === 'count') {\n        this.count(key);\n      }\n\n      if (typeof opt.global === 'boolean') {\n        this.global(key, opt.global);\n      }\n\n      if (opt.defaultDescription) {\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = opt.defaultDescription;\n      }\n\n      if (opt.skipValidation) {\n        this.skipValidation(key);\n      }\n\n      const desc = opt.describe || opt.description || opt.desc;\n      this.describe(key, desc);\n\n      if (opt.hidden) {\n        this.hide(key);\n      }\n\n      if (opt.requiresArg) {\n        this.requiresArg(key);\n      }\n    }\n\n    return this;\n  }\n\n  options(key, opt) {\n    return this.option(key, opt);\n  }\n\n  parse(args, shortCircuit, _parseFn) {\n    argsert('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length);\n    this[kFreeze]();\n\n    if (typeof args === 'undefined') {\n      args = __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n    }\n\n    if (typeof shortCircuit === 'object') {\n      __classPrivateFieldSet(this, _YargsInstance_parseContext, shortCircuit, \"f\");\n\n      shortCircuit = _parseFn;\n    }\n\n    if (typeof shortCircuit === 'function') {\n      __classPrivateFieldSet(this, _YargsInstance_parseFn, shortCircuit, \"f\");\n\n      shortCircuit = false;\n    }\n\n    if (!shortCircuit) __classPrivateFieldSet(this, _YargsInstance_processArgs, args, \"f\");\n    if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) __classPrivateFieldSet(this, _YargsInstance_exitProcess, false, \"f\");\n    const parsed = this[kRunYargsParserAndExecuteCommands](args, !!shortCircuit);\n    const tmpParsed = this.parsed;\n\n    __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").setParsed(this.parsed);\n\n    if (isPromise(parsed)) {\n      return parsed.then(argv => {\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n        return argv;\n      }).catch(err => {\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) {\n          __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")(err, this.parsed.argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n        }\n\n        throw err;\n      }).finally(() => {\n        this[kUnfreeze]();\n        this.parsed = tmpParsed;\n      });\n    } else {\n      if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), parsed, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n      this[kUnfreeze]();\n      this.parsed = tmpParsed;\n    }\n\n    return parsed;\n  }\n\n  parseAsync(args, shortCircuit, _parseFn) {\n    const maybePromise = this.parse(args, shortCircuit, _parseFn);\n    return !isPromise(maybePromise) ? Promise.resolve(maybePromise) : maybePromise;\n  }\n\n  parseSync(args, shortCircuit, _parseFn) {\n    const maybePromise = this.parse(args, shortCircuit, _parseFn);\n\n    if (isPromise(maybePromise)) {\n      throw new YError('.parseSync() must not be used with asynchronous builders, handlers, or middleware');\n    }\n\n    return maybePromise;\n  }\n\n  parserConfiguration(config) {\n    argsert('<object>', [config], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_parserConfig, config, \"f\");\n\n    return this;\n  }\n\n  pkgConf(key, rootPath) {\n    argsert('<string> [string]', [key, rootPath], arguments.length);\n    let conf = null;\n    const obj = this[kPkgUp](rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"));\n\n    if (obj[key] && typeof obj[key] === 'object') {\n      conf = applyExtends(obj[key], rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(conf);\n    }\n\n    return this;\n  }\n\n  positional(key, opts) {\n    argsert('<string> <object>', [key, opts], arguments.length);\n    const supportedOpts = ['default', 'defaultDescription', 'implies', 'normalize', 'choices', 'conflicts', 'coerce', 'type', 'describe', 'desc', 'description', 'alias'];\n    opts = objFilter(opts, (k, v) => {\n      if (k === 'type' && !['string', 'number', 'boolean'].includes(v)) return false;\n      return supportedOpts.includes(k);\n    });\n\n    const fullCommand = __classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands[__classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands.length - 1];\n\n    const parseOptions = fullCommand ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").cmdToParseOptions(fullCommand) : {\n      array: [],\n      alias: {},\n      default: {},\n      demand: {}\n    };\n    objectKeys(parseOptions).forEach(pk => {\n      const parseOption = parseOptions[pk];\n\n      if (Array.isArray(parseOption)) {\n        if (parseOption.indexOf(key) !== -1) opts[pk] = true;\n      } else {\n        if (parseOption[key] && !(pk in opts)) opts[pk] = parseOption[key];\n      }\n    });\n    this.group(key, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getPositionalGroupName());\n    return this.option(key, opts);\n  }\n\n  recommendCommands() {\n    let recommend = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    argsert('[boolean]', [recommend], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_recommendCommands, recommend, \"f\");\n\n    return this;\n  }\n\n  required(keys, max, msg) {\n    return this.demand(keys, max, msg);\n  }\n\n  require(keys, max, msg) {\n    return this.demand(keys, max, msg);\n  }\n\n  requiresArg(keys) {\n    argsert('<array|string|object> [number]', [keys], arguments.length);\n\n    if (typeof keys === 'string' && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").narg[keys]) {\n      return this;\n    } else {\n      this[kPopulateParserHintSingleValueDictionary](this.requiresArg.bind(this), 'narg', keys, NaN);\n    }\n\n    return this;\n  }\n\n  showCompletionScript($0, cmd) {\n    argsert('[string] [string]', [$0, cmd], arguments.length);\n    $0 = $0 || this.$0;\n\n    __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").generateCompletionScript($0, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion'));\n\n    return this;\n  }\n\n  showHelp(level) {\n    argsert('[string|function]', [level], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n\n    if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n      if (!this.parsed) {\n        const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n\n        if (isPromise(parse)) {\n          parse.then(() => {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n          });\n          return this;\n        }\n      }\n\n      const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n\n      if (isPromise(builderResponse)) {\n        builderResponse.then(() => {\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n        });\n        return this;\n      }\n    }\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n\n    return this;\n  }\n\n  scriptName(scriptName) {\n    this.customScriptName = true;\n    this.$0 = scriptName;\n    return this;\n  }\n\n  showHelpOnFail(enabled, message) {\n    argsert('[boolean|string] [string]', [enabled, message], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelpOnFail(enabled, message);\n\n    return this;\n  }\n\n  showVersion(level) {\n    argsert('[string|function]', [level], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion(level);\n\n    return this;\n  }\n\n  skipValidation(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('skipValidation', keys);\n    return this;\n  }\n\n  strict(enabled) {\n    argsert('[boolean]', [enabled], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_strict, enabled !== false, \"f\");\n\n    return this;\n  }\n\n  strictCommands(enabled) {\n    argsert('[boolean]', [enabled], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_strictCommands, enabled !== false, \"f\");\n\n    return this;\n  }\n\n  strictOptions(enabled) {\n    argsert('[boolean]', [enabled], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_strictOptions, enabled !== false, \"f\");\n\n    return this;\n  }\n\n  string(keys) {\n    argsert('<array|string>', [keys], arguments.length);\n    this[kPopulateParserHintArray]('string', keys);\n    this[kTrackManuallySetKeys](keys);\n    return this;\n  }\n\n  terminalWidth() {\n    argsert([], 0);\n    return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.stdColumns;\n  }\n\n  updateLocale(obj) {\n    return this.updateStrings(obj);\n  }\n\n  updateStrings(obj) {\n    argsert('<object>', [obj], arguments.length);\n\n    __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n\n    __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.updateLocale(obj);\n\n    return this;\n  }\n\n  usage(msg, description, builder, handler) {\n    argsert('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length);\n\n    if (description !== undefined) {\n      assertNotStrictEqual(msg, null, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n\n      if ((msg || '').match(/^\\$0( |$)/)) {\n        return this.command(msg, description, builder, handler);\n      } else {\n        throw new YError('.usage() description must start with $0 if being used as alias for .command()');\n      }\n    } else {\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").usage(msg);\n\n      return this;\n    }\n  }\n\n  version(opt, msg, ver) {\n    const defaultVersionOpt = 'version';\n    argsert('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length);\n\n    if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\")) {\n      this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(undefined);\n\n      __classPrivateFieldSet(this, _YargsInstance_versionOpt, null, \"f\");\n    }\n\n    if (arguments.length === 0) {\n      ver = this[kGuessVersion]();\n      opt = defaultVersionOpt;\n    } else if (arguments.length === 1) {\n      if (opt === false) {\n        return this;\n      }\n\n      ver = opt;\n      opt = defaultVersionOpt;\n    } else if (arguments.length === 2) {\n      ver = msg;\n      msg = undefined;\n    }\n\n    __classPrivateFieldSet(this, _YargsInstance_versionOpt, typeof opt === 'string' ? opt : defaultVersionOpt, \"f\");\n\n    msg = msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show version number');\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(ver || undefined);\n\n    this.boolean(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n    this.describe(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"), msg);\n    return this;\n  }\n\n  wrap(cols) {\n    argsert('<number|null|undefined>', [cols], arguments.length);\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").wrap(cols);\n\n    return this;\n  }\n\n  [(_YargsInstance_command = new WeakMap(), _YargsInstance_cwd = new WeakMap(), _YargsInstance_context = new WeakMap(), _YargsInstance_completion = new WeakMap(), _YargsInstance_completionCommand = new WeakMap(), _YargsInstance_defaultShowHiddenOpt = new WeakMap(), _YargsInstance_exitError = new WeakMap(), _YargsInstance_detectLocale = new WeakMap(), _YargsInstance_emittedWarnings = new WeakMap(), _YargsInstance_exitProcess = new WeakMap(), _YargsInstance_frozens = new WeakMap(), _YargsInstance_globalMiddleware = new WeakMap(), _YargsInstance_groups = new WeakMap(), _YargsInstance_hasOutput = new WeakMap(), _YargsInstance_helpOpt = new WeakMap(), _YargsInstance_logger = new WeakMap(), _YargsInstance_output = new WeakMap(), _YargsInstance_options = new WeakMap(), _YargsInstance_parentRequire = new WeakMap(), _YargsInstance_parserConfig = new WeakMap(), _YargsInstance_parseFn = new WeakMap(), _YargsInstance_parseContext = new WeakMap(), _YargsInstance_pkgs = new WeakMap(), _YargsInstance_preservedGroups = new WeakMap(), _YargsInstance_processArgs = new WeakMap(), _YargsInstance_recommendCommands = new WeakMap(), _YargsInstance_shim = new WeakMap(), _YargsInstance_strict = new WeakMap(), _YargsInstance_strictCommands = new WeakMap(), _YargsInstance_strictOptions = new WeakMap(), _YargsInstance_usage = new WeakMap(), _YargsInstance_versionOpt = new WeakMap(), _YargsInstance_validation = new WeakMap(), kCopyDoubleDash)](argv) {\n    if (!argv._ || !argv['--']) return argv;\n\n    argv._.push.apply(argv._, argv['--']);\n\n    try {\n      delete argv['--'];\n    } catch (_err) {}\n\n    return argv;\n  }\n\n  [kCreateLogger]() {\n    var _this = this;\n\n    return {\n      log: function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (!_this[kHasParseCallback]()) console.log(...args);\n\n        __classPrivateFieldSet(_this, _YargsInstance_hasOutput, true, \"f\");\n\n        if (__classPrivateFieldGet(_this, _YargsInstance_output, \"f\").length) __classPrivateFieldSet(_this, _YargsInstance_output, __classPrivateFieldGet(_this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n\n        __classPrivateFieldSet(_this, _YargsInstance_output, __classPrivateFieldGet(_this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n      },\n      error: function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        if (!_this[kHasParseCallback]()) console.error(...args);\n\n        __classPrivateFieldSet(_this, _YargsInstance_hasOutput, true, \"f\");\n\n        if (__classPrivateFieldGet(_this, _YargsInstance_output, \"f\").length) __classPrivateFieldSet(_this, _YargsInstance_output, __classPrivateFieldGet(_this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n\n        __classPrivateFieldSet(_this, _YargsInstance_output, __classPrivateFieldGet(_this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n      }\n    };\n  }\n\n  [kDeleteFromParserHintObject](optionKey) {\n    objectKeys(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")).forEach(hintKey => {\n      if ((key => key === 'configObjects')(hintKey)) return;\n\n      const hint = __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[hintKey];\n\n      if (Array.isArray(hint)) {\n        if (hint.includes(optionKey)) hint.splice(hint.indexOf(optionKey), 1);\n      } else if (typeof hint === 'object') {\n        delete hint[optionKey];\n      }\n    });\n    delete __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions()[optionKey];\n  }\n\n  [kEmitWarning](warning, type, deduplicationId) {\n    if (!__classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId]) {\n      __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.emitWarning(warning, type);\n\n      __classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId] = true;\n    }\n  }\n\n  [kFreeze]() {\n    __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").push({\n      options: __classPrivateFieldGet(this, _YargsInstance_options, \"f\"),\n      configObjects: __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects.slice(0),\n      exitProcess: __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"),\n      groups: __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"),\n      strict: __classPrivateFieldGet(this, _YargsInstance_strict, \"f\"),\n      strictCommands: __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\"),\n      strictOptions: __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\"),\n      completionCommand: __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"),\n      output: __classPrivateFieldGet(this, _YargsInstance_output, \"f\"),\n      exitError: __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"),\n      hasOutput: __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\"),\n      parsed: this.parsed,\n      parseFn: __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"),\n      parseContext: __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\")\n    });\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").freeze();\n\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").freeze();\n\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").freeze();\n\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").freeze();\n  }\n\n  [kGetDollarZero]() {\n    let $0 = '';\n    let default$0;\n\n    if (/\\b(node|iojs|electron)(\\.exe)?$/.test(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv()[0])) {\n      default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(1, 2);\n    } else {\n      default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(0, 1);\n    }\n\n    $0 = default$0.map(x => {\n      const b = this[kRebase](__classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), x);\n      return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x;\n    }).join(' ').trim();\n\n    if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_') && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getProcessArgvBin() === __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_')) {\n      $0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_').replace(`${__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.execPath())}/`, '');\n    }\n\n    return $0;\n  }\n\n  [kGetParserConfiguration]() {\n    return __classPrivateFieldGet(this, _YargsInstance_parserConfig, \"f\");\n  }\n\n  [kGuessLocale]() {\n    if (!__classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\")) return;\n    const locale = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_ALL') || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_MESSAGES') || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANG') || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANGUAGE') || 'en_US';\n    this.locale(locale.replace(/[.:].*/, ''));\n  }\n\n  [kGuessVersion]() {\n    const obj = this[kPkgUp]();\n    return obj.version || 'unknown';\n  }\n\n  [kParsePositionalNumbers](argv) {\n    const args = argv['--'] ? argv['--'] : argv._;\n\n    for (let i = 0, arg; (arg = args[i]) !== undefined; i++) {\n      if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.looksLikeNumber(arg) && Number.isSafeInteger(Math.floor(parseFloat(`${arg}`)))) {\n        args[i] = Number(arg);\n      }\n    }\n\n    return argv;\n  }\n\n  [kPkgUp](rootPath) {\n    const npath = rootPath || '*';\n    if (__classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath]) return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n    let obj = {};\n\n    try {\n      let startDir = rootPath || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").mainFilename;\n\n      if (!rootPath && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.extname(startDir)) {\n        startDir = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(startDir);\n      }\n\n      const pkgJsonPath = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").findUp(startDir, (dir, names) => {\n        if (names.includes('package.json')) {\n          return 'package.json';\n        } else {\n          return undefined;\n        }\n      });\n\n      assertNotStrictEqual(pkgJsonPath, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n      obj = JSON.parse(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").readFileSync(pkgJsonPath, 'utf8'));\n    } catch (_noop) {}\n\n    __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath] = obj || {};\n    return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n  }\n\n  [kPopulateParserHintArray](type, keys) {\n    keys = [].concat(keys);\n    keys.forEach(key => {\n      key = this[kSanitizeKey](key);\n\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type].push(key);\n    });\n  }\n\n  [kPopulateParserHintSingleValueDictionary](builder, type, key, value) {\n    this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = value;\n    });\n  }\n\n  [kPopulateParserHintArrayDictionary](builder, type, key, value) {\n    this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] || []).concat(value);\n    });\n  }\n\n  [kPopulateParserHintDictionary](builder, type, key, value, singleKeyHandler) {\n    if (Array.isArray(key)) {\n      key.forEach(k => {\n        builder(k, value);\n      });\n    } else if ((key => typeof key === 'object')(key)) {\n      for (const k of objectKeys(key)) {\n        builder(k, key[k]);\n      }\n    } else {\n      singleKeyHandler(type, this[kSanitizeKey](key), value);\n    }\n  }\n\n  [kSanitizeKey](key) {\n    if (key === '__proto__') return '___proto___';\n    return key;\n  }\n\n  [kSetKey](key, set) {\n    this[kPopulateParserHintSingleValueDictionary](this[kSetKey].bind(this), 'key', key, set);\n    return this;\n  }\n\n  [kUnfreeze]() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n    const frozen = __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").pop();\n\n    assertNotStrictEqual(frozen, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n    let configObjects;\n    _a = this, _b = this, _c = this, _d = this, _e = this, _f = this, _g = this, _h = this, _j = this, _k = this, _l = this, _m = this, ({\n      options: {\n        set value(_o) {\n          __classPrivateFieldSet(_a, _YargsInstance_options, _o, \"f\");\n        }\n\n      }.value,\n      configObjects,\n      exitProcess: {\n        set value(_o) {\n          __classPrivateFieldSet(_b, _YargsInstance_exitProcess, _o, \"f\");\n        }\n\n      }.value,\n      groups: {\n        set value(_o) {\n          __classPrivateFieldSet(_c, _YargsInstance_groups, _o, \"f\");\n        }\n\n      }.value,\n      output: {\n        set value(_o) {\n          __classPrivateFieldSet(_d, _YargsInstance_output, _o, \"f\");\n        }\n\n      }.value,\n      exitError: {\n        set value(_o) {\n          __classPrivateFieldSet(_e, _YargsInstance_exitError, _o, \"f\");\n        }\n\n      }.value,\n      hasOutput: {\n        set value(_o) {\n          __classPrivateFieldSet(_f, _YargsInstance_hasOutput, _o, \"f\");\n        }\n\n      }.value,\n      parsed: this.parsed,\n      strict: {\n        set value(_o) {\n          __classPrivateFieldSet(_g, _YargsInstance_strict, _o, \"f\");\n        }\n\n      }.value,\n      strictCommands: {\n        set value(_o) {\n          __classPrivateFieldSet(_h, _YargsInstance_strictCommands, _o, \"f\");\n        }\n\n      }.value,\n      strictOptions: {\n        set value(_o) {\n          __classPrivateFieldSet(_j, _YargsInstance_strictOptions, _o, \"f\");\n        }\n\n      }.value,\n      completionCommand: {\n        set value(_o) {\n          __classPrivateFieldSet(_k, _YargsInstance_completionCommand, _o, \"f\");\n        }\n\n      }.value,\n      parseFn: {\n        set value(_o) {\n          __classPrivateFieldSet(_l, _YargsInstance_parseFn, _o, \"f\");\n        }\n\n      }.value,\n      parseContext: {\n        set value(_o) {\n          __classPrivateFieldSet(_m, _YargsInstance_parseContext, _o, \"f\");\n        }\n\n      }.value\n    } = frozen);\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = configObjects;\n\n    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").unfreeze();\n\n    __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unfreeze();\n\n    __classPrivateFieldGet(this, _YargsInstance_command, \"f\").unfreeze();\n\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").unfreeze();\n  }\n\n  [kValidateAsync](validation, argv) {\n    return maybeAsyncResult(argv, result => {\n      validation(result);\n      return result;\n    });\n  }\n\n  getInternalMethods() {\n    return {\n      getCommandInstance: this[kGetCommandInstance].bind(this),\n      getContext: this[kGetContext].bind(this),\n      getHasOutput: this[kGetHasOutput].bind(this),\n      getLoggerInstance: this[kGetLoggerInstance].bind(this),\n      getParseContext: this[kGetParseContext].bind(this),\n      getParserConfiguration: this[kGetParserConfiguration].bind(this),\n      getUsageInstance: this[kGetUsageInstance].bind(this),\n      getValidationInstance: this[kGetValidationInstance].bind(this),\n      hasParseCallback: this[kHasParseCallback].bind(this),\n      postProcess: this[kPostProcess].bind(this),\n      reset: this[kReset].bind(this),\n      runValidation: this[kRunValidation].bind(this),\n      runYargsParserAndExecuteCommands: this[kRunYargsParserAndExecuteCommands].bind(this),\n      setHasOutput: this[kSetHasOutput].bind(this)\n    };\n  }\n\n  [kGetCommandInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_command, \"f\");\n  }\n\n  [kGetContext]() {\n    return __classPrivateFieldGet(this, _YargsInstance_context, \"f\");\n  }\n\n  [kGetHasOutput]() {\n    return __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\");\n  }\n\n  [kGetLoggerInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_logger, \"f\");\n  }\n\n  [kGetParseContext]() {\n    return __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\") || {};\n  }\n\n  [kGetUsageInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\");\n  }\n\n  [kGetValidationInstance]() {\n    return __classPrivateFieldGet(this, _YargsInstance_validation, \"f\");\n  }\n\n  [kHasParseCallback]() {\n    return !!__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\");\n  }\n\n  [kPostProcess](argv, populateDoubleDash, calledFromCommand, runGlobalMiddleware) {\n    if (calledFromCommand) return argv;\n    if (isPromise(argv)) return argv;\n\n    if (!populateDoubleDash) {\n      argv = this[kCopyDoubleDash](argv);\n    }\n\n    const parsePositionalNumbers = this[kGetParserConfiguration]()['parse-positional-numbers'] || this[kGetParserConfiguration]()['parse-positional-numbers'] === undefined;\n\n    if (parsePositionalNumbers) {\n      argv = this[kParsePositionalNumbers](argv);\n    }\n\n    if (runGlobalMiddleware) {\n      argv = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n    }\n\n    return argv;\n  }\n\n  [kReset]() {\n    let aliases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\") || {}, \"f\");\n\n    const tmpOptions = {};\n    tmpOptions.local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local || [];\n    tmpOptions.configObjects = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || [];\n    const localLookup = {};\n    tmpOptions.local.forEach(l => {\n      localLookup[l] = true;\n      (aliases[l] || []).forEach(a => {\n        localLookup[a] = true;\n      });\n    });\n    Object.assign(__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"), Object.keys(__classPrivateFieldGet(this, _YargsInstance_groups, \"f\")).reduce((acc, groupName) => {\n      const keys = __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName].filter(key => !(key in localLookup));\n\n      if (keys.length > 0) {\n        acc[groupName] = keys;\n      }\n\n      return acc;\n    }, {}));\n\n    __classPrivateFieldSet(this, _YargsInstance_groups, {}, \"f\");\n\n    const arrayOptions = ['array', 'boolean', 'string', 'skipValidation', 'count', 'normalize', 'number', 'hiddenOptions'];\n    const objectOptions = ['narg', 'key', 'alias', 'default', 'defaultDescription', 'config', 'choices', 'demandedOptions', 'demandedCommands', 'deprecatedOptions'];\n    arrayOptions.forEach(k => {\n      tmpOptions[k] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k] || []).filter(k => !localLookup[k]);\n    });\n    objectOptions.forEach(k => {\n      tmpOptions[k] = objFilter(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k], k => !localLookup[k]);\n    });\n    tmpOptions.envPrefix = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n\n    __classPrivateFieldSet(this, _YargsInstance_options, tmpOptions, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\") ? __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").reset(localLookup) : Usage(this, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\") ? __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").reset(localLookup) : Validation(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\") ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").reset() : Command(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n\n    if (!__classPrivateFieldGet(this, _YargsInstance_completion, \"f\")) __classPrivateFieldSet(this, _YargsInstance_completion, Completion(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n\n    __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").reset();\n\n    __classPrivateFieldSet(this, _YargsInstance_completionCommand, null, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_output, '', \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_exitError, null, \"f\");\n\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, false, \"f\");\n\n    this.parsed = false;\n    return this;\n  }\n\n  [kRebase](base, dir) {\n    return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.relative(base, dir);\n  }\n\n  [kRunYargsParserAndExecuteCommands](args, shortCircuit, calledFromCommand) {\n    let commandIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let helpOnly = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let skipValidation = !!calledFromCommand || helpOnly;\n    args = args || __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").__ = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__;\n    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration = this[kGetParserConfiguration]();\n    const populateDoubleDash = !!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration['populate--'];\n    const config = Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration, {\n      'populate--': true\n    });\n\n    const parsed = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.detailed(args, Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), {\n      configuration: {\n        'parse-positional-numbers': false,\n        ...config\n      }\n    }));\n\n    const argv = Object.assign(parsed.argv, __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"));\n    let argvPromise = undefined;\n    const aliases = parsed.aliases;\n    let helpOptSet = false;\n    let versionOptSet = false;\n    Object.keys(argv).forEach(key => {\n      if (key === __classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\") && argv[key]) {\n        helpOptSet = true;\n      } else if (key === __classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && argv[key]) {\n        versionOptSet = true;\n      }\n    });\n    argv.$0 = this.$0;\n    this.parsed = parsed;\n\n    if (commandIndex === 0) {\n      __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").clearCachedHelpMessage();\n    }\n\n    try {\n      this[kGuessLocale]();\n\n      if (shortCircuit) {\n        return this[kPostProcess](argv, populateDoubleDash, !!calledFromCommand, false);\n      }\n\n      if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n        const helpCmds = [__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")].concat(aliases[__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")] || []).filter(k => k.length > 1);\n\n        if (helpCmds.includes('' + argv._[argv._.length - 1])) {\n          argv._.pop();\n\n          helpOptSet = true;\n        }\n      }\n\n      const handlerKeys = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").getCommands();\n\n      const requestCompletions = (__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey in argv);\n      const skipRecommendation = helpOptSet || requestCompletions || helpOnly;\n\n      if (argv._.length) {\n        if (handlerKeys.length) {\n          let firstUnknownCommand;\n\n          for (let i = commandIndex || 0, cmd; argv._[i] !== undefined; i++) {\n            cmd = String(argv._[i]);\n\n            if (handlerKeys.includes(cmd) && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n              const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(cmd, this, parsed, i + 1, helpOnly, helpOptSet || versionOptSet || helpOnly);\n\n              return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n            } else if (!firstUnknownCommand && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n              firstUnknownCommand = cmd;\n              break;\n            }\n          }\n\n          if (!__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && __classPrivateFieldGet(this, _YargsInstance_recommendCommands, \"f\") && firstUnknownCommand && !skipRecommendation) {\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").recommendCommands(firstUnknownCommand, handlerKeys);\n          }\n        }\n\n        if (__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") && argv._.includes(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) && !requestCompletions) {\n          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n          this.showCompletionScript();\n          this.exit(0);\n        }\n      }\n\n      if (__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && !skipRecommendation) {\n        const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(null, this, parsed, 0, helpOnly, helpOptSet || versionOptSet || helpOnly);\n\n        return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n      }\n\n      if (requestCompletions) {\n        if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n        args = [].concat(args);\n        const completionArgs = args.slice(args.indexOf(`--${__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey}`) + 1);\n\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(completionArgs, (err, completions) => {\n          if (err) throw new YError(err.message);\n          (completions || []).forEach(completion => {\n            __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(completion);\n          });\n          this.exit(0);\n        });\n\n        return this[kPostProcess](argv, !populateDoubleDash, !!calledFromCommand, false);\n      }\n\n      if (!__classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\")) {\n        if (helpOptSet) {\n          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n          skipValidation = true;\n          this.showHelp('log');\n          this.exit(0);\n        } else if (versionOptSet) {\n          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\")) setBlocking(true);\n          skipValidation = true;\n\n          __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion('log');\n\n          this.exit(0);\n        }\n      }\n\n      if (!skipValidation && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.length > 0) {\n        skipValidation = Object.keys(argv).some(key => __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.indexOf(key) >= 0 && argv[key] === true);\n      }\n\n      if (!skipValidation) {\n        if (parsed.error) throw new YError(parsed.error.message);\n\n        if (!requestCompletions) {\n          const validation = this[kRunValidation](aliases, {}, parsed.error);\n\n          if (!calledFromCommand) {\n            argvPromise = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), true);\n          }\n\n          argvPromise = this[kValidateAsync](validation, argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv);\n\n          if (isPromise(argvPromise) && !calledFromCommand) {\n            argvPromise = argvPromise.then(() => {\n              return applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n            });\n          }\n        }\n      }\n    } catch (err) {\n      if (err instanceof YError) __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message, err);else throw err;\n    }\n\n    return this[kPostProcess](argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv, populateDoubleDash, !!calledFromCommand, true);\n  }\n\n  [kRunValidation](aliases, positionalMap, parseErrors, isDefaultCommand) {\n    const demandedOptions = { ...this.getDemandedOptions()\n    };\n    return argv => {\n      if (parseErrors) throw new YError(parseErrors.message);\n\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").nonOptionCount(argv);\n\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").requiredArguments(argv, demandedOptions);\n\n      let failedStrictCommands = false;\n\n      if (__classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\")) {\n        failedStrictCommands = __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownCommands(argv);\n      }\n\n      if (__classPrivateFieldGet(this, _YargsInstance_strict, \"f\") && !failedStrictCommands) {\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, positionalMap, !!isDefaultCommand);\n      } else if (__classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\")) {\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, {}, false, false);\n      }\n\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").limitedChoices(argv);\n\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implications(argv);\n\n      __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicting(argv);\n    };\n  }\n\n  [kSetHasOutput]() {\n    __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n  }\n\n  [kTrackManuallySetKeys](keys) {\n    if (typeof keys === 'string') {\n      __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n    } else {\n      for (const k of keys) {\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[k] = true;\n      }\n    }\n  }\n\n}\nexport function isYargsInstance(y) {\n  return !!y && typeof y.getInternalMethods === 'function';\n}","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/node_modules/@curlconverter/yargs/build/lib/yargs-factory.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_YargsInstance_command","_YargsInstance_cwd","_YargsInstance_context","_YargsInstance_completion","_YargsInstance_completionCommand","_YargsInstance_defaultShowHiddenOpt","_YargsInstance_exitError","_YargsInstance_detectLocale","_YargsInstance_emittedWarnings","_YargsInstance_exitProcess","_YargsInstance_frozens","_YargsInstance_globalMiddleware","_YargsInstance_groups","_YargsInstance_hasOutput","_YargsInstance_helpOpt","_YargsInstance_logger","_YargsInstance_output","_YargsInstance_options","_YargsInstance_parentRequire","_YargsInstance_parserConfig","_YargsInstance_parseFn","_YargsInstance_parseContext","_YargsInstance_pkgs","_YargsInstance_preservedGroups","_YargsInstance_processArgs","_YargsInstance_recommendCommands","_YargsInstance_shim","_YargsInstance_strict","_YargsInstance_strictCommands","_YargsInstance_strictOptions","_YargsInstance_usage","_YargsInstance_versionOpt","_YargsInstance_validation","command","Command","assertNotStrictEqual","assertSingleKey","objectKeys","YError","usage","Usage","argsert","completion","Completion","validation","Validation","objFilter","applyExtends","applyMiddleware","GlobalMiddleware","isPromise","maybeAsyncResult","setBlocking","YargsFactory","_shim","processArgs","cwd","process","parentRequire","yargs","YargsInstance","Object","defineProperty","parse","enumerable","help","version","kCopyDoubleDash","Symbol","kCreateLogger","kDeleteFromParserHintObject","kEmitWarning","kFreeze","kGetDollarZero","kGetParserConfiguration","kGuessLocale","kGuessVersion","kParsePositionalNumbers","kPkgUp","kPopulateParserHintArray","kPopulateParserHintSingleValueDictionary","kPopulateParserHintArrayDictionary","kPopulateParserHintDictionary","kSanitizeKey","kSetKey","kUnfreeze","kValidateAsync","kGetCommandInstance","kGetContext","kGetHasOutput","kGetLoggerInstance","kGetParseContext","kGetUsageInstance","kGetValidationInstance","kHasParseCallback","kPostProcess","kRebase","kReset","kRunYargsParserAndExecuteCommands","kRunValidation","kSetHasOutput","kTrackManuallySetKeys","constructor","shim","customScriptName","parsed","commands","fullCommands","$0","showHiddenOpt","addHelpOpt","opt","msg","defaultHelpOpt","arguments","length","undefined","boolean","describe","deferY18nLookup","addShowHiddenOpt","showHidden","alias","key","bind","array","keys","check","global","middleware","argv","_yargs","result","fail","y18n","__","toString","Error","err","message","choices","coerce","Array","isArray","addCoerceMiddleware","aliases","getAliases","conflicts","key1","key2","config","parseFn","configObjects","concat","forEach","k","cmd","desc","fn","registerFunction","description","builder","handler","middlewares","deprecated","addHandler","commandDir","dir","opts","req","require","addDirectory","getCallerFile","count","default","defaultDescription","functionDescription","defaults","demandCommand","min","max","minMsg","maxMsg","Infinity","demandedCommands","_","demand","demandOption","deprecateOption","option","deprecatedOptions","detectLocale","detect","env","prefix","envPrefix","epilogue","epilog","example","exampleParams","exit","code","exitProcess","enabled","failFn","getCompletion","args","done","Promise","resolve","reject","completions","getDemandedOptions","demandedOptions","getDemandedCommands","getDeprecatedOptions","getDetectLocale","getExitProcess","getGroups","assign","getHelp","hasCachedHelpMessage","then","builderResponse","runDefaultBuilderOn","getOptions","getStrict","getStrictCommands","getStrictOptions","globals","local","filter","l","indexOf","g","includes","push","group","groupName","existing","seen","hide","hiddenOptions","implies","locale","getLocale","setLocale","callback","applyBeforeValidation","addMiddleware","nargs","normalize","number","options","join","deprecate","required","configParser","type","string","skipValidation","hidden","requiresArg","shortCircuit","_parseFn","tmpParsed","setParsed","catch","finally","parseAsync","maybePromise","parseSync","parserConfiguration","pkgConf","rootPath","conf","obj","positional","supportedOpts","v","fullCommand","parseOptions","cmdToParseOptions","pk","parseOption","getPositionalGroupName","recommendCommands","recommend","narg","NaN","showCompletionScript","log","generateCompletionScript","showHelp","level","scriptName","showHelpOnFail","showVersion","strict","strictCommands","strictOptions","terminalWidth","stdColumns","updateLocale","updateStrings","match","ver","defaultVersionOpt","wrap","cols","WeakMap","apply","_err","console","error","optionKey","hintKey","hint","splice","getDescriptions","warning","deduplicationId","emitWarning","slice","groups","completionCommand","output","exitError","hasOutput","parseContext","freeze","default$0","test","map","x","b","trim","getEnv","getProcessArgvBin","replace","path","dirname","execPath","i","arg","Parser","looksLikeNumber","Number","isSafeInteger","Math","floor","parseFloat","npath","startDir","mainFilename","extname","pkgJsonPath","findUp","names","JSON","readFileSync","_noop","singleKeyHandler","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","frozen","pop","_o","unfreeze","getInternalMethods","getCommandInstance","getContext","getHasOutput","getLoggerInstance","getParseContext","getParserConfiguration","getUsageInstance","getValidationInstance","hasParseCallback","postProcess","reset","runValidation","runYargsParserAndExecuteCommands","setHasOutput","populateDoubleDash","calledFromCommand","runGlobalMiddleware","parsePositionalNumbers","getMiddleware","tmpOptions","localLookup","a","reduce","acc","arrayOptions","objectOptions","base","relative","commandIndex","helpOnly","configuration","detailed","argvPromise","helpOptSet","versionOptSet","clearCachedHelpMessage","helpCmds","handlerKeys","getCommands","requestCompletions","completionKey","skipRecommendation","firstUnknownCommand","String","innerArgv","runCommand","hasDefaultCommand","completionArgs","some","positionalMap","parseErrors","isDefaultCommand","nonOptionCount","requiredArguments","failedStrictCommands","unknownCommands","unknownArguments","limitedChoices","implications","conflicting","isYargsInstance","y"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _YargsInstance_command, _YargsInstance_cwd, _YargsInstance_context, _YargsInstance_completion, _YargsInstance_completionCommand, _YargsInstance_defaultShowHiddenOpt, _YargsInstance_exitError, _YargsInstance_detectLocale, _YargsInstance_emittedWarnings, _YargsInstance_exitProcess, _YargsInstance_frozens, _YargsInstance_globalMiddleware, _YargsInstance_groups, _YargsInstance_hasOutput, _YargsInstance_helpOpt, _YargsInstance_logger, _YargsInstance_output, _YargsInstance_options, _YargsInstance_parentRequire, _YargsInstance_parserConfig, _YargsInstance_parseFn, _YargsInstance_parseContext, _YargsInstance_pkgs, _YargsInstance_preservedGroups, _YargsInstance_processArgs, _YargsInstance_recommendCommands, _YargsInstance_shim, _YargsInstance_strict, _YargsInstance_strictCommands, _YargsInstance_strictOptions, _YargsInstance_usage, _YargsInstance_versionOpt, _YargsInstance_validation;\nimport { command as Command, } from './command.js';\nimport { assertNotStrictEqual, assertSingleKey, objectKeys, } from './typings/common-types.js';\nimport { YError } from './yerror.js';\nimport { usage as Usage } from './usage.js';\nimport { argsert } from './argsert.js';\nimport { completion as Completion, } from './completion.js';\nimport { validation as Validation, } from './validation.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { applyExtends } from './utils/apply-extends.js';\nimport { applyMiddleware, GlobalMiddleware, } from './middleware.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function YargsFactory(_shim) {\n    return (processArgs = [], cwd = _shim.process.cwd(), parentRequire) => {\n        const yargs = new YargsInstance(processArgs, cwd, parentRequire, _shim);\n        Object.defineProperty(yargs, 'argv', {\n            get: () => {\n                return yargs.parse();\n            },\n            enumerable: true,\n        });\n        yargs.help();\n        yargs.version();\n        return yargs;\n    };\n}\nconst kCopyDoubleDash = Symbol('copyDoubleDash');\nconst kCreateLogger = Symbol('copyDoubleDash');\nconst kDeleteFromParserHintObject = Symbol('deleteFromParserHintObject');\nconst kEmitWarning = Symbol('emitWarning');\nconst kFreeze = Symbol('freeze');\nconst kGetDollarZero = Symbol('getDollarZero');\nconst kGetParserConfiguration = Symbol('getParserConfiguration');\nconst kGuessLocale = Symbol('guessLocale');\nconst kGuessVersion = Symbol('guessVersion');\nconst kParsePositionalNumbers = Symbol('parsePositionalNumbers');\nconst kPkgUp = Symbol('pkgUp');\nconst kPopulateParserHintArray = Symbol('populateParserHintArray');\nconst kPopulateParserHintSingleValueDictionary = Symbol('populateParserHintSingleValueDictionary');\nconst kPopulateParserHintArrayDictionary = Symbol('populateParserHintArrayDictionary');\nconst kPopulateParserHintDictionary = Symbol('populateParserHintDictionary');\nconst kSanitizeKey = Symbol('sanitizeKey');\nconst kSetKey = Symbol('setKey');\nconst kUnfreeze = Symbol('unfreeze');\nconst kValidateAsync = Symbol('validateAsync');\nconst kGetCommandInstance = Symbol('getCommandInstance');\nconst kGetContext = Symbol('getContext');\nconst kGetHasOutput = Symbol('getHasOutput');\nconst kGetLoggerInstance = Symbol('getLoggerInstance');\nconst kGetParseContext = Symbol('getParseContext');\nconst kGetUsageInstance = Symbol('getUsageInstance');\nconst kGetValidationInstance = Symbol('getValidationInstance');\nconst kHasParseCallback = Symbol('hasParseCallback');\nconst kPostProcess = Symbol('postProcess');\nconst kRebase = Symbol('rebase');\nconst kReset = Symbol('reset');\nconst kRunYargsParserAndExecuteCommands = Symbol('runYargsParserAndExecuteCommands');\nconst kRunValidation = Symbol('runValidation');\nconst kSetHasOutput = Symbol('setHasOutput');\nconst kTrackManuallySetKeys = Symbol('kTrackManuallySetKeys');\nexport class YargsInstance {\n    constructor(processArgs = [], cwd, parentRequire, shim) {\n        this.customScriptName = false;\n        this.parsed = false;\n        _YargsInstance_command.set(this, void 0);\n        _YargsInstance_cwd.set(this, void 0);\n        _YargsInstance_context.set(this, { commands: [], fullCommands: [] });\n        _YargsInstance_completion.set(this, null);\n        _YargsInstance_completionCommand.set(this, null);\n        _YargsInstance_defaultShowHiddenOpt.set(this, 'show-hidden');\n        _YargsInstance_exitError.set(this, null);\n        _YargsInstance_detectLocale.set(this, true);\n        _YargsInstance_emittedWarnings.set(this, {});\n        _YargsInstance_exitProcess.set(this, true);\n        _YargsInstance_frozens.set(this, []);\n        _YargsInstance_globalMiddleware.set(this, void 0);\n        _YargsInstance_groups.set(this, {});\n        _YargsInstance_hasOutput.set(this, false);\n        _YargsInstance_helpOpt.set(this, null);\n        _YargsInstance_logger.set(this, void 0);\n        _YargsInstance_output.set(this, '');\n        _YargsInstance_options.set(this, void 0);\n        _YargsInstance_parentRequire.set(this, void 0);\n        _YargsInstance_parserConfig.set(this, {});\n        _YargsInstance_parseFn.set(this, null);\n        _YargsInstance_parseContext.set(this, null);\n        _YargsInstance_pkgs.set(this, {});\n        _YargsInstance_preservedGroups.set(this, {});\n        _YargsInstance_processArgs.set(this, void 0);\n        _YargsInstance_recommendCommands.set(this, false);\n        _YargsInstance_shim.set(this, void 0);\n        _YargsInstance_strict.set(this, false);\n        _YargsInstance_strictCommands.set(this, false);\n        _YargsInstance_strictOptions.set(this, false);\n        _YargsInstance_usage.set(this, void 0);\n        _YargsInstance_versionOpt.set(this, null);\n        _YargsInstance_validation.set(this, void 0);\n        __classPrivateFieldSet(this, _YargsInstance_shim, shim, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_processArgs, processArgs, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_cwd, cwd, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_parentRequire, parentRequire, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_globalMiddleware, new GlobalMiddleware(this), \"f\");\n        this.$0 = this[kGetDollarZero]();\n        this[kReset]();\n        __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_logger, this[kCreateLogger](), \"f\");\n    }\n    addHelpOpt(opt, msg) {\n        const defaultHelpOpt = 'help';\n        argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n        if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n            this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n            __classPrivateFieldSet(this, _YargsInstance_helpOpt, null, \"f\");\n        }\n        if (opt === false && msg === undefined)\n            return this;\n        __classPrivateFieldSet(this, _YargsInstance_helpOpt, typeof opt === 'string' ? opt : defaultHelpOpt, \"f\");\n        this.boolean(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n        this.describe(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"), msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show help'));\n        return this;\n    }\n    help(opt, msg) {\n        return this.addHelpOpt(opt, msg);\n    }\n    addShowHiddenOpt(opt, msg) {\n        argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n        if (opt === false && msg === undefined)\n            return this;\n        const showHiddenOpt = typeof opt === 'string' ? opt : __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n        this.boolean(showHiddenOpt);\n        this.describe(showHiddenOpt, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show hidden options'));\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = showHiddenOpt;\n        return this;\n    }\n    showHidden(opt, msg) {\n        return this.addShowHiddenOpt(opt, msg);\n    }\n    alias(key, value) {\n        argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n        this[kPopulateParserHintArrayDictionary](this.alias.bind(this), 'alias', key, value);\n        return this;\n    }\n    array(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('array', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    boolean(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('boolean', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    check(f, global) {\n        argsert('<function> [boolean]', [f, global], arguments.length);\n        this.middleware((argv, _yargs) => {\n            return maybeAsyncResult(() => {\n                return f(argv);\n            }, (result) => {\n                if (!result) {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__('Argument check failed: %s', f.toString()));\n                }\n                else if (typeof result === 'string' || result instanceof Error) {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(result.toString(), result);\n                }\n                return argv;\n            }, (err) => {\n                __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message ? err.message : err.toString(), err);\n                return argv;\n            });\n        }, false, global);\n        return this;\n    }\n    choices(key, value) {\n        argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n        this[kPopulateParserHintArrayDictionary](this.choices.bind(this), 'choices', key, value);\n        return this;\n    }\n    coerce(keys, value) {\n        argsert('<object|string|array> [function]', [keys, value], arguments.length);\n        if (Array.isArray(keys)) {\n            if (!value) {\n                throw new YError('coerce callback must be provided');\n            }\n            for (const key of keys) {\n                this.coerce(key, value);\n            }\n            return this;\n        }\n        else if (typeof keys === 'object') {\n            for (const key of Object.keys(keys)) {\n                this.coerce(key, keys[key]);\n            }\n            return this;\n        }\n        if (!value) {\n            throw new YError('coerce callback must be provided');\n        }\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addCoerceMiddleware((argv, yargs) => {\n            let aliases;\n            return maybeAsyncResult(() => {\n                aliases = yargs.getAliases();\n                return value(argv[keys]);\n            }, (result) => {\n                argv[keys] = result;\n                if (aliases[keys]) {\n                    for (const alias of aliases[keys]) {\n                        argv[alias] = result;\n                    }\n                }\n                return argv;\n            }, (err) => {\n                throw new YError(err.message);\n            });\n        }, keys);\n        return this;\n    }\n    conflicts(key1, key2) {\n        argsert('<string|object> [string|array]', [key1, key2], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicts(key1, key2);\n        return this;\n    }\n    config(key = 'config', msg, parseFn) {\n        argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length);\n        if (typeof key === 'object' && !Array.isArray(key)) {\n            key = applyExtends(key, __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(key);\n            return this;\n        }\n        if (typeof msg === 'function') {\n            parseFn = msg;\n            msg = undefined;\n        }\n        this.describe(key, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Path to JSON config file'));\n        (Array.isArray(key) ? key : [key]).forEach(k => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").config[k] = parseFn || true;\n        });\n        return this;\n    }\n    completion(cmd, desc, fn) {\n        argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length);\n        if (typeof desc === 'function') {\n            fn = desc;\n            desc = undefined;\n        }\n        __classPrivateFieldSet(this, _YargsInstance_completionCommand, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion', \"f\");\n        if (!desc && desc !== false) {\n            desc = 'generate completion script';\n        }\n        this.command(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"), desc);\n        if (fn)\n            __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").registerFunction(fn);\n        return this;\n    }\n    command(cmd, description, builder, handler, middlewares, deprecated) {\n        argsert('<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]', [cmd, description, builder, handler, middlewares, deprecated], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addHandler(cmd, description, builder, handler, middlewares, deprecated);\n        return this;\n    }\n    commands(cmd, description, builder, handler, middlewares, deprecated) {\n        return this.command(cmd, description, builder, handler, middlewares, deprecated);\n    }\n    commandDir(dir, opts) {\n        argsert('<string> [object]', [dir, opts], arguments.length);\n        const req = __classPrivateFieldGet(this, _YargsInstance_parentRequire, \"f\") || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").require;\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addDirectory(dir, req, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getCallerFile(), opts);\n        return this;\n    }\n    count(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('count', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    default(key, value, defaultDescription) {\n        argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length);\n        if (defaultDescription) {\n            assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = defaultDescription;\n        }\n        if (typeof value === 'function') {\n            assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key])\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] =\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").functionDescription(value);\n            value = value.call();\n        }\n        this[kPopulateParserHintSingleValueDictionary](this.default.bind(this), 'default', key, value);\n        return this;\n    }\n    defaults(key, value, defaultDescription) {\n        return this.default(key, value, defaultDescription);\n    }\n    demandCommand(min = 1, max, minMsg, maxMsg) {\n        argsert('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length);\n        if (typeof max !== 'number') {\n            minMsg = max;\n            max = Infinity;\n        }\n        this.global('_', false);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands._ = {\n            min,\n            max,\n            minMsg,\n            maxMsg,\n        };\n        return this;\n    }\n    demand(keys, max, msg) {\n        if (Array.isArray(max)) {\n            max.forEach(key => {\n                assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n                this.demandOption(key, msg);\n            });\n            max = Infinity;\n        }\n        else if (typeof max !== 'number') {\n            msg = max;\n            max = Infinity;\n        }\n        if (typeof keys === 'number') {\n            assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            this.demandCommand(keys, max, msg, msg);\n        }\n        else if (Array.isArray(keys)) {\n            keys.forEach(key => {\n                assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n                this.demandOption(key, msg);\n            });\n        }\n        else {\n            if (typeof msg === 'string') {\n                this.demandOption(keys, msg);\n            }\n            else if (msg === true || typeof msg === 'undefined') {\n                this.demandOption(keys);\n            }\n        }\n        return this;\n    }\n    demandOption(keys, msg) {\n        argsert('<object|string|array> [string]', [keys, msg], arguments.length);\n        this[kPopulateParserHintSingleValueDictionary](this.demandOption.bind(this), 'demandedOptions', keys, msg);\n        return this;\n    }\n    deprecateOption(option, message) {\n        argsert('<string> [string|boolean]', [option, message], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions[option] = message;\n        return this;\n    }\n    describe(keys, description) {\n        argsert('<object|string|array> [string]', [keys, description], arguments.length);\n        this[kSetKey](keys, true);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").describe(keys, description);\n        return this;\n    }\n    detectLocale(detect) {\n        argsert('<boolean>', [detect], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, detect, \"f\");\n        return this;\n    }\n    env(prefix) {\n        argsert('[string|boolean]', [prefix], arguments.length);\n        if (prefix === false)\n            delete __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n        else\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix = prefix || '';\n        return this;\n    }\n    epilogue(msg) {\n        argsert('<string>', [msg], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").epilog(msg);\n        return this;\n    }\n    epilog(msg) {\n        return this.epilogue(msg);\n    }\n    example(cmd, description) {\n        argsert('<string|array> [string]', [cmd, description], arguments.length);\n        if (Array.isArray(cmd)) {\n            cmd.forEach(exampleParams => this.example(...exampleParams));\n        }\n        else {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").example(cmd, description);\n        }\n        return this;\n    }\n    exit(code, err) {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_exitError, err, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.exit(code);\n    }\n    exitProcess(enabled = true) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_exitProcess, enabled, \"f\");\n        return this;\n    }\n    fail(f) {\n        argsert('<function|boolean>', [f], arguments.length);\n        if (typeof f === 'boolean' && f !== false) {\n            throw new YError(\"Invalid first argument. Expected function or boolean 'false'\");\n        }\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").failFn(f);\n        return this;\n    }\n    getAliases() {\n        return this.parsed ? this.parsed.aliases : {};\n    }\n    async getCompletion(args, done) {\n        argsert('<array> [function]', [args, done], arguments.length);\n        if (!done) {\n            return new Promise((resolve, reject) => {\n                __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, (err, completions) => {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(completions);\n                });\n            });\n        }\n        else {\n            return __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, done);\n        }\n    }\n    getDemandedOptions() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedOptions;\n    }\n    getDemandedCommands() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands;\n    }\n    getDeprecatedOptions() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions;\n    }\n    getDetectLocale() {\n        return __classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\");\n    }\n    getExitProcess() {\n        return __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\");\n    }\n    getGroups() {\n        return Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"), __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"));\n    }\n    getHelp() {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n            if (!this.parsed) {\n                const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n                if (isPromise(parse)) {\n                    return parse.then(() => {\n                        return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n                    });\n                }\n            }\n            const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n            if (isPromise(builderResponse)) {\n                return builderResponse.then(() => {\n                    return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n                });\n            }\n        }\n        return Promise.resolve(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help());\n    }\n    getOptions() {\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\");\n    }\n    getStrict() {\n        return __classPrivateFieldGet(this, _YargsInstance_strict, \"f\");\n    }\n    getStrictCommands() {\n        return __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\");\n    }\n    getStrictOptions() {\n        return __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\");\n    }\n    global(globals, global) {\n        argsert('<string|array> [boolean]', [globals, global], arguments.length);\n        globals = [].concat(globals);\n        if (global !== false) {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.filter(l => globals.indexOf(l) === -1);\n        }\n        else {\n            globals.forEach(g => {\n                if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.includes(g))\n                    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.push(g);\n            });\n        }\n        return this;\n    }\n    group(opts, groupName) {\n        argsert('<string|array> <string>', [opts, groupName], arguments.length);\n        const existing = __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName] || __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName];\n        if (__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName]) {\n            delete __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName];\n        }\n        const seen = {};\n        __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName] = (existing || []).concat(opts).filter(key => {\n            if (seen[key])\n                return false;\n            return (seen[key] = true);\n        });\n        return this;\n    }\n    hide(key) {\n        argsert('<string>', [key], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").hiddenOptions.push(key);\n        return this;\n    }\n    implies(key, value) {\n        argsert('<string|object> [number|string|array]', [key, value], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implies(key, value);\n        return this;\n    }\n    locale(locale) {\n        argsert('[string]', [locale], arguments.length);\n        if (!locale) {\n            this[kGuessLocale]();\n            return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.getLocale();\n        }\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.setLocale(locale);\n        return this;\n    }\n    middleware(callback, applyBeforeValidation, global) {\n        return __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addMiddleware(callback, !!applyBeforeValidation, global);\n    }\n    nargs(key, value) {\n        argsert('<string|object|array> [number]', [key, value], arguments.length);\n        this[kPopulateParserHintSingleValueDictionary](this.nargs.bind(this), 'narg', key, value);\n        return this;\n    }\n    normalize(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('normalize', keys);\n        return this;\n    }\n    number(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('number', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    option(key, opt) {\n        argsert('<string|object> [object]', [key, opt], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                this.options(k, key[k]);\n            });\n        }\n        else {\n            if (typeof opt !== 'object') {\n                opt = {};\n            }\n            this[kTrackManuallySetKeys](key);\n            if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && (key === 'version' || (opt === null || opt === void 0 ? void 0 : opt.alias) === 'version')) {\n                this[kEmitWarning]([\n                    '\"version\" is a reserved word.',\n                    'Please do one of the following:',\n                    '- Disable version with `yargs.version(false)` if using \"version\" as an option',\n                    '- Use the built-in `yargs.version` method instead (if applicable)',\n                    '- Use a different option key',\n                    'https://yargs.js.org/docs/#api-reference-version',\n                ].join('\\n'), undefined, 'versionWarning');\n            }\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[key] = true;\n            if (opt.alias)\n                this.alias(key, opt.alias);\n            const deprecate = opt.deprecate || opt.deprecated;\n            if (deprecate) {\n                this.deprecateOption(key, deprecate);\n            }\n            const demand = opt.demand || opt.required || opt.require;\n            if (demand) {\n                this.demand(key, demand);\n            }\n            if (opt.demandOption) {\n                this.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined);\n            }\n            if (opt.conflicts) {\n                this.conflicts(key, opt.conflicts);\n            }\n            if ('default' in opt) {\n                this.default(key, opt.default);\n            }\n            if (opt.implies !== undefined) {\n                this.implies(key, opt.implies);\n            }\n            if (opt.nargs !== undefined) {\n                this.nargs(key, opt.nargs);\n            }\n            if (opt.config) {\n                this.config(key, opt.configParser);\n            }\n            if (opt.normalize) {\n                this.normalize(key);\n            }\n            if (opt.choices) {\n                this.choices(key, opt.choices);\n            }\n            if (opt.coerce) {\n                this.coerce(key, opt.coerce);\n            }\n            if (opt.group) {\n                this.group(key, opt.group);\n            }\n            if (opt.boolean || opt.type === 'boolean') {\n                this.boolean(key);\n                if (opt.alias)\n                    this.boolean(opt.alias);\n            }\n            if (opt.array || opt.type === 'array') {\n                this.array(key);\n                if (opt.alias)\n                    this.array(opt.alias);\n            }\n            if (opt.number || opt.type === 'number') {\n                this.number(key);\n                if (opt.alias)\n                    this.number(opt.alias);\n            }\n            if (opt.string || opt.type === 'string') {\n                this.string(key);\n                if (opt.alias)\n                    this.string(opt.alias);\n            }\n            if (opt.count || opt.type === 'count') {\n                this.count(key);\n            }\n            if (typeof opt.global === 'boolean') {\n                this.global(key, opt.global);\n            }\n            if (opt.defaultDescription) {\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = opt.defaultDescription;\n            }\n            if (opt.skipValidation) {\n                this.skipValidation(key);\n            }\n            const desc = opt.describe || opt.description || opt.desc;\n            this.describe(key, desc);\n            if (opt.hidden) {\n                this.hide(key);\n            }\n            if (opt.requiresArg) {\n                this.requiresArg(key);\n            }\n        }\n        return this;\n    }\n    options(key, opt) {\n        return this.option(key, opt);\n    }\n    parse(args, shortCircuit, _parseFn) {\n        argsert('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length);\n        this[kFreeze]();\n        if (typeof args === 'undefined') {\n            args = __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n        }\n        if (typeof shortCircuit === 'object') {\n            __classPrivateFieldSet(this, _YargsInstance_parseContext, shortCircuit, \"f\");\n            shortCircuit = _parseFn;\n        }\n        if (typeof shortCircuit === 'function') {\n            __classPrivateFieldSet(this, _YargsInstance_parseFn, shortCircuit, \"f\");\n            shortCircuit = false;\n        }\n        if (!shortCircuit)\n            __classPrivateFieldSet(this, _YargsInstance_processArgs, args, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n            __classPrivateFieldSet(this, _YargsInstance_exitProcess, false, \"f\");\n        const parsed = this[kRunYargsParserAndExecuteCommands](args, !!shortCircuit);\n        const tmpParsed = this.parsed;\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").setParsed(this.parsed);\n        if (isPromise(parsed)) {\n            return parsed\n                .then(argv => {\n                if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n                    __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n                return argv;\n            })\n                .catch(err => {\n                if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) {\n                    __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")(err, this.parsed.argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n                }\n                throw err;\n            })\n                .finally(() => {\n                this[kUnfreeze]();\n                this.parsed = tmpParsed;\n            });\n        }\n        else {\n            if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n                __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), parsed, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n            this[kUnfreeze]();\n            this.parsed = tmpParsed;\n        }\n        return parsed;\n    }\n    parseAsync(args, shortCircuit, _parseFn) {\n        const maybePromise = this.parse(args, shortCircuit, _parseFn);\n        return !isPromise(maybePromise)\n            ? Promise.resolve(maybePromise)\n            : maybePromise;\n    }\n    parseSync(args, shortCircuit, _parseFn) {\n        const maybePromise = this.parse(args, shortCircuit, _parseFn);\n        if (isPromise(maybePromise)) {\n            throw new YError('.parseSync() must not be used with asynchronous builders, handlers, or middleware');\n        }\n        return maybePromise;\n    }\n    parserConfiguration(config) {\n        argsert('<object>', [config], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_parserConfig, config, \"f\");\n        return this;\n    }\n    pkgConf(key, rootPath) {\n        argsert('<string> [string]', [key, rootPath], arguments.length);\n        let conf = null;\n        const obj = this[kPkgUp](rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"));\n        if (obj[key] && typeof obj[key] === 'object') {\n            conf = applyExtends(obj[key], rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(conf);\n        }\n        return this;\n    }\n    positional(key, opts) {\n        argsert('<string> <object>', [key, opts], arguments.length);\n        const supportedOpts = [\n            'default',\n            'defaultDescription',\n            'implies',\n            'normalize',\n            'choices',\n            'conflicts',\n            'coerce',\n            'type',\n            'describe',\n            'desc',\n            'description',\n            'alias',\n        ];\n        opts = objFilter(opts, (k, v) => {\n            if (k === 'type' && !['string', 'number', 'boolean'].includes(v))\n                return false;\n            return supportedOpts.includes(k);\n        });\n        const fullCommand = __classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands[__classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands.length - 1];\n        const parseOptions = fullCommand\n            ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").cmdToParseOptions(fullCommand)\n            : {\n                array: [],\n                alias: {},\n                default: {},\n                demand: {},\n            };\n        objectKeys(parseOptions).forEach(pk => {\n            const parseOption = parseOptions[pk];\n            if (Array.isArray(parseOption)) {\n                if (parseOption.indexOf(key) !== -1)\n                    opts[pk] = true;\n            }\n            else {\n                if (parseOption[key] && !(pk in opts))\n                    opts[pk] = parseOption[key];\n            }\n        });\n        this.group(key, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getPositionalGroupName());\n        return this.option(key, opts);\n    }\n    recommendCommands(recommend = true) {\n        argsert('[boolean]', [recommend], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_recommendCommands, recommend, \"f\");\n        return this;\n    }\n    required(keys, max, msg) {\n        return this.demand(keys, max, msg);\n    }\n    require(keys, max, msg) {\n        return this.demand(keys, max, msg);\n    }\n    requiresArg(keys) {\n        argsert('<array|string|object> [number]', [keys], arguments.length);\n        if (typeof keys === 'string' && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").narg[keys]) {\n            return this;\n        }\n        else {\n            this[kPopulateParserHintSingleValueDictionary](this.requiresArg.bind(this), 'narg', keys, NaN);\n        }\n        return this;\n    }\n    showCompletionScript($0, cmd) {\n        argsert('[string] [string]', [$0, cmd], arguments.length);\n        $0 = $0 || this.$0;\n        __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").generateCompletionScript($0, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion'));\n        return this;\n    }\n    showHelp(level) {\n        argsert('[string|function]', [level], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n            if (!this.parsed) {\n                const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n                if (isPromise(parse)) {\n                    parse.then(() => {\n                        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n                    });\n                    return this;\n                }\n            }\n            const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n            if (isPromise(builderResponse)) {\n                builderResponse.then(() => {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n                });\n                return this;\n            }\n        }\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n        return this;\n    }\n    scriptName(scriptName) {\n        this.customScriptName = true;\n        this.$0 = scriptName;\n        return this;\n    }\n    showHelpOnFail(enabled, message) {\n        argsert('[boolean|string] [string]', [enabled, message], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelpOnFail(enabled, message);\n        return this;\n    }\n    showVersion(level) {\n        argsert('[string|function]', [level], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion(level);\n        return this;\n    }\n    skipValidation(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('skipValidation', keys);\n        return this;\n    }\n    strict(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strict, enabled !== false, \"f\");\n        return this;\n    }\n    strictCommands(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strictCommands, enabled !== false, \"f\");\n        return this;\n    }\n    strictOptions(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strictOptions, enabled !== false, \"f\");\n        return this;\n    }\n    string(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('string', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    terminalWidth() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.stdColumns;\n    }\n    updateLocale(obj) {\n        return this.updateStrings(obj);\n    }\n    updateStrings(obj) {\n        argsert('<object>', [obj], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.updateLocale(obj);\n        return this;\n    }\n    usage(msg, description, builder, handler) {\n        argsert('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length);\n        if (description !== undefined) {\n            assertNotStrictEqual(msg, null, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            if ((msg || '').match(/^\\$0( |$)/)) {\n                return this.command(msg, description, builder, handler);\n            }\n            else {\n                throw new YError('.usage() description must start with $0 if being used as alias for .command()');\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").usage(msg);\n            return this;\n        }\n    }\n    version(opt, msg, ver) {\n        const defaultVersionOpt = 'version';\n        argsert('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length);\n        if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\")) {\n            this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(undefined);\n            __classPrivateFieldSet(this, _YargsInstance_versionOpt, null, \"f\");\n        }\n        if (arguments.length === 0) {\n            ver = this[kGuessVersion]();\n            opt = defaultVersionOpt;\n        }\n        else if (arguments.length === 1) {\n            if (opt === false) {\n                return this;\n            }\n            ver = opt;\n            opt = defaultVersionOpt;\n        }\n        else if (arguments.length === 2) {\n            ver = msg;\n            msg = undefined;\n        }\n        __classPrivateFieldSet(this, _YargsInstance_versionOpt, typeof opt === 'string' ? opt : defaultVersionOpt, \"f\");\n        msg = msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show version number');\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(ver || undefined);\n        this.boolean(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n        this.describe(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"), msg);\n        return this;\n    }\n    wrap(cols) {\n        argsert('<number|null|undefined>', [cols], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").wrap(cols);\n        return this;\n    }\n    [(_YargsInstance_command = new WeakMap(), _YargsInstance_cwd = new WeakMap(), _YargsInstance_context = new WeakMap(), _YargsInstance_completion = new WeakMap(), _YargsInstance_completionCommand = new WeakMap(), _YargsInstance_defaultShowHiddenOpt = new WeakMap(), _YargsInstance_exitError = new WeakMap(), _YargsInstance_detectLocale = new WeakMap(), _YargsInstance_emittedWarnings = new WeakMap(), _YargsInstance_exitProcess = new WeakMap(), _YargsInstance_frozens = new WeakMap(), _YargsInstance_globalMiddleware = new WeakMap(), _YargsInstance_groups = new WeakMap(), _YargsInstance_hasOutput = new WeakMap(), _YargsInstance_helpOpt = new WeakMap(), _YargsInstance_logger = new WeakMap(), _YargsInstance_output = new WeakMap(), _YargsInstance_options = new WeakMap(), _YargsInstance_parentRequire = new WeakMap(), _YargsInstance_parserConfig = new WeakMap(), _YargsInstance_parseFn = new WeakMap(), _YargsInstance_parseContext = new WeakMap(), _YargsInstance_pkgs = new WeakMap(), _YargsInstance_preservedGroups = new WeakMap(), _YargsInstance_processArgs = new WeakMap(), _YargsInstance_recommendCommands = new WeakMap(), _YargsInstance_shim = new WeakMap(), _YargsInstance_strict = new WeakMap(), _YargsInstance_strictCommands = new WeakMap(), _YargsInstance_strictOptions = new WeakMap(), _YargsInstance_usage = new WeakMap(), _YargsInstance_versionOpt = new WeakMap(), _YargsInstance_validation = new WeakMap(), kCopyDoubleDash)](argv) {\n        if (!argv._ || !argv['--'])\n            return argv;\n        argv._.push.apply(argv._, argv['--']);\n        try {\n            delete argv['--'];\n        }\n        catch (_err) { }\n        return argv;\n    }\n    [kCreateLogger]() {\n        return {\n            log: (...args) => {\n                if (!this[kHasParseCallback]())\n                    console.log(...args);\n                __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n                if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length)\n                    __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n                __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n            },\n            error: (...args) => {\n                if (!this[kHasParseCallback]())\n                    console.error(...args);\n                __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n                if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length)\n                    __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n                __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n            },\n        };\n    }\n    [kDeleteFromParserHintObject](optionKey) {\n        objectKeys(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")).forEach((hintKey) => {\n            if (((key) => key === 'configObjects')(hintKey))\n                return;\n            const hint = __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[hintKey];\n            if (Array.isArray(hint)) {\n                if (hint.includes(optionKey))\n                    hint.splice(hint.indexOf(optionKey), 1);\n            }\n            else if (typeof hint === 'object') {\n                delete hint[optionKey];\n            }\n        });\n        delete __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions()[optionKey];\n    }\n    [kEmitWarning](warning, type, deduplicationId) {\n        if (!__classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId]) {\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.emitWarning(warning, type);\n            __classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId] = true;\n        }\n    }\n    [kFreeze]() {\n        __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").push({\n            options: __classPrivateFieldGet(this, _YargsInstance_options, \"f\"),\n            configObjects: __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects.slice(0),\n            exitProcess: __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"),\n            groups: __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"),\n            strict: __classPrivateFieldGet(this, _YargsInstance_strict, \"f\"),\n            strictCommands: __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\"),\n            strictOptions: __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\"),\n            completionCommand: __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"),\n            output: __classPrivateFieldGet(this, _YargsInstance_output, \"f\"),\n            exitError: __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"),\n            hasOutput: __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\"),\n            parsed: this.parsed,\n            parseFn: __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"),\n            parseContext: __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"),\n        });\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").freeze();\n    }\n    [kGetDollarZero]() {\n        let $0 = '';\n        let default$0;\n        if (/\\b(node|iojs|electron)(\\.exe)?$/.test(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv()[0])) {\n            default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(1, 2);\n        }\n        else {\n            default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(0, 1);\n        }\n        $0 = default$0\n            .map(x => {\n            const b = this[kRebase](__classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), x);\n            return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x;\n        })\n            .join(' ')\n            .trim();\n        if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_') &&\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getProcessArgvBin() === __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_')) {\n            $0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")\n                .getEnv('_')\n                .replace(`${__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.execPath())}/`, '');\n        }\n        return $0;\n    }\n    [kGetParserConfiguration]() {\n        return __classPrivateFieldGet(this, _YargsInstance_parserConfig, \"f\");\n    }\n    [kGuessLocale]() {\n        if (!__classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\"))\n            return;\n        const locale = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_ALL') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_MESSAGES') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANG') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANGUAGE') ||\n            'en_US';\n        this.locale(locale.replace(/[.:].*/, ''));\n    }\n    [kGuessVersion]() {\n        const obj = this[kPkgUp]();\n        return obj.version || 'unknown';\n    }\n    [kParsePositionalNumbers](argv) {\n        const args = argv['--'] ? argv['--'] : argv._;\n        for (let i = 0, arg; (arg = args[i]) !== undefined; i++) {\n            if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.looksLikeNumber(arg) &&\n                Number.isSafeInteger(Math.floor(parseFloat(`${arg}`)))) {\n                args[i] = Number(arg);\n            }\n        }\n        return argv;\n    }\n    [kPkgUp](rootPath) {\n        const npath = rootPath || '*';\n        if (__classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath])\n            return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n        let obj = {};\n        try {\n            let startDir = rootPath || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").mainFilename;\n            if (!rootPath && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.extname(startDir)) {\n                startDir = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(startDir);\n            }\n            const pkgJsonPath = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").findUp(startDir, (dir, names) => {\n                if (names.includes('package.json')) {\n                    return 'package.json';\n                }\n                else {\n                    return undefined;\n                }\n            });\n            assertNotStrictEqual(pkgJsonPath, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            obj = JSON.parse(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").readFileSync(pkgJsonPath, 'utf8'));\n        }\n        catch (_noop) { }\n        __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath] = obj || {};\n        return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n    }\n    [kPopulateParserHintArray](type, keys) {\n        keys = [].concat(keys);\n        keys.forEach(key => {\n            key = this[kSanitizeKey](key);\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type].push(key);\n        });\n    }\n    [kPopulateParserHintSingleValueDictionary](builder, type, key, value) {\n        this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = value;\n        });\n    }\n    [kPopulateParserHintArrayDictionary](builder, type, key, value) {\n        this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] || []).concat(value);\n        });\n    }\n    [kPopulateParserHintDictionary](builder, type, key, value, singleKeyHandler) {\n        if (Array.isArray(key)) {\n            key.forEach(k => {\n                builder(k, value);\n            });\n        }\n        else if (((key) => typeof key === 'object')(key)) {\n            for (const k of objectKeys(key)) {\n                builder(k, key[k]);\n            }\n        }\n        else {\n            singleKeyHandler(type, this[kSanitizeKey](key), value);\n        }\n    }\n    [kSanitizeKey](key) {\n        if (key === '__proto__')\n            return '___proto___';\n        return key;\n    }\n    [kSetKey](key, set) {\n        this[kPopulateParserHintSingleValueDictionary](this[kSetKey].bind(this), 'key', key, set);\n        return this;\n    }\n    [kUnfreeze]() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const frozen = __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").pop();\n        assertNotStrictEqual(frozen, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        let configObjects;\n        (_a = this, _b = this, _c = this, _d = this, _e = this, _f = this, _g = this, _h = this, _j = this, _k = this, _l = this, _m = this, {\n            options: ({ set value(_o) { __classPrivateFieldSet(_a, _YargsInstance_options, _o, \"f\"); } }).value,\n            configObjects,\n            exitProcess: ({ set value(_o) { __classPrivateFieldSet(_b, _YargsInstance_exitProcess, _o, \"f\"); } }).value,\n            groups: ({ set value(_o) { __classPrivateFieldSet(_c, _YargsInstance_groups, _o, \"f\"); } }).value,\n            output: ({ set value(_o) { __classPrivateFieldSet(_d, _YargsInstance_output, _o, \"f\"); } }).value,\n            exitError: ({ set value(_o) { __classPrivateFieldSet(_e, _YargsInstance_exitError, _o, \"f\"); } }).value,\n            hasOutput: ({ set value(_o) { __classPrivateFieldSet(_f, _YargsInstance_hasOutput, _o, \"f\"); } }).value,\n            parsed: this.parsed,\n            strict: ({ set value(_o) { __classPrivateFieldSet(_g, _YargsInstance_strict, _o, \"f\"); } }).value,\n            strictCommands: ({ set value(_o) { __classPrivateFieldSet(_h, _YargsInstance_strictCommands, _o, \"f\"); } }).value,\n            strictOptions: ({ set value(_o) { __classPrivateFieldSet(_j, _YargsInstance_strictOptions, _o, \"f\"); } }).value,\n            completionCommand: ({ set value(_o) { __classPrivateFieldSet(_k, _YargsInstance_completionCommand, _o, \"f\"); } }).value,\n            parseFn: ({ set value(_o) { __classPrivateFieldSet(_l, _YargsInstance_parseFn, _o, \"f\"); } }).value,\n            parseContext: ({ set value(_o) { __classPrivateFieldSet(_m, _YargsInstance_parseContext, _o, \"f\"); } }).value,\n        } = frozen);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = configObjects;\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").unfreeze();\n    }\n    [kValidateAsync](validation, argv) {\n        return maybeAsyncResult(argv, result => {\n            validation(result);\n            return result;\n        });\n    }\n    getInternalMethods() {\n        return {\n            getCommandInstance: this[kGetCommandInstance].bind(this),\n            getContext: this[kGetContext].bind(this),\n            getHasOutput: this[kGetHasOutput].bind(this),\n            getLoggerInstance: this[kGetLoggerInstance].bind(this),\n            getParseContext: this[kGetParseContext].bind(this),\n            getParserConfiguration: this[kGetParserConfiguration].bind(this),\n            getUsageInstance: this[kGetUsageInstance].bind(this),\n            getValidationInstance: this[kGetValidationInstance].bind(this),\n            hasParseCallback: this[kHasParseCallback].bind(this),\n            postProcess: this[kPostProcess].bind(this),\n            reset: this[kReset].bind(this),\n            runValidation: this[kRunValidation].bind(this),\n            runYargsParserAndExecuteCommands: this[kRunYargsParserAndExecuteCommands].bind(this),\n            setHasOutput: this[kSetHasOutput].bind(this),\n        };\n    }\n    [kGetCommandInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_command, \"f\");\n    }\n    [kGetContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_context, \"f\");\n    }\n    [kGetHasOutput]() {\n        return __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\");\n    }\n    [kGetLoggerInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_logger, \"f\");\n    }\n    [kGetParseContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\") || {};\n    }\n    [kGetUsageInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\");\n    }\n    [kGetValidationInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_validation, \"f\");\n    }\n    [kHasParseCallback]() {\n        return !!__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\");\n    }\n    [kPostProcess](argv, populateDoubleDash, calledFromCommand, runGlobalMiddleware) {\n        if (calledFromCommand)\n            return argv;\n        if (isPromise(argv))\n            return argv;\n        if (!populateDoubleDash) {\n            argv = this[kCopyDoubleDash](argv);\n        }\n        const parsePositionalNumbers = this[kGetParserConfiguration]()['parse-positional-numbers'] ||\n            this[kGetParserConfiguration]()['parse-positional-numbers'] === undefined;\n        if (parsePositionalNumbers) {\n            argv = this[kParsePositionalNumbers](argv);\n        }\n        if (runGlobalMiddleware) {\n            argv = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n        }\n        return argv;\n    }\n    [kReset](aliases = {}) {\n        __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\") || {}, \"f\");\n        const tmpOptions = {};\n        tmpOptions.local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local || [];\n        tmpOptions.configObjects = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || [];\n        const localLookup = {};\n        tmpOptions.local.forEach(l => {\n            localLookup[l] = true;\n            (aliases[l] || []).forEach(a => {\n                localLookup[a] = true;\n            });\n        });\n        Object.assign(__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"), Object.keys(__classPrivateFieldGet(this, _YargsInstance_groups, \"f\")).reduce((acc, groupName) => {\n            const keys = __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName].filter(key => !(key in localLookup));\n            if (keys.length > 0) {\n                acc[groupName] = keys;\n            }\n            return acc;\n        }, {}));\n        __classPrivateFieldSet(this, _YargsInstance_groups, {}, \"f\");\n        const arrayOptions = [\n            'array',\n            'boolean',\n            'string',\n            'skipValidation',\n            'count',\n            'normalize',\n            'number',\n            'hiddenOptions',\n        ];\n        const objectOptions = [\n            'narg',\n            'key',\n            'alias',\n            'default',\n            'defaultDescription',\n            'config',\n            'choices',\n            'demandedOptions',\n            'demandedCommands',\n            'deprecatedOptions',\n        ];\n        arrayOptions.forEach(k => {\n            tmpOptions[k] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k] || []).filter((k) => !localLookup[k]);\n        });\n        objectOptions.forEach((k) => {\n            tmpOptions[k] = objFilter(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k], k => !localLookup[k]);\n        });\n        tmpOptions.envPrefix = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n        __classPrivateFieldSet(this, _YargsInstance_options, tmpOptions, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").reset(localLookup)\n            : Usage(this, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").reset(localLookup)\n            : Validation(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").reset()\n            : Command(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_completion, \"f\"))\n            __classPrivateFieldSet(this, _YargsInstance_completion, Completion(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").reset();\n        __classPrivateFieldSet(this, _YargsInstance_completionCommand, null, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_output, '', \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_exitError, null, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, false, \"f\");\n        this.parsed = false;\n        return this;\n    }\n    [kRebase](base, dir) {\n        return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.relative(base, dir);\n    }\n    [kRunYargsParserAndExecuteCommands](args, shortCircuit, calledFromCommand, commandIndex = 0, helpOnly = false) {\n        let skipValidation = !!calledFromCommand || helpOnly;\n        args = args || __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").__ = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__;\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration = this[kGetParserConfiguration]();\n        const populateDoubleDash = !!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration['populate--'];\n        const config = Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration, {\n            'populate--': true,\n        });\n        const parsed = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.detailed(args, Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), {\n            configuration: { 'parse-positional-numbers': false, ...config },\n        }));\n        const argv = Object.assign(parsed.argv, __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"));\n        let argvPromise = undefined;\n        const aliases = parsed.aliases;\n        let helpOptSet = false;\n        let versionOptSet = false;\n        Object.keys(argv).forEach(key => {\n            if (key === __classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\") && argv[key]) {\n                helpOptSet = true;\n            }\n            else if (key === __classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && argv[key]) {\n                versionOptSet = true;\n            }\n        });\n        argv.$0 = this.$0;\n        this.parsed = parsed;\n        if (commandIndex === 0) {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").clearCachedHelpMessage();\n        }\n        try {\n            this[kGuessLocale]();\n            if (shortCircuit) {\n                return this[kPostProcess](argv, populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n                const helpCmds = [__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")]\n                    .concat(aliases[__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")] || [])\n                    .filter(k => k.length > 1);\n                if (helpCmds.includes('' + argv._[argv._.length - 1])) {\n                    argv._.pop();\n                    helpOptSet = true;\n                }\n            }\n            const handlerKeys = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").getCommands();\n            const requestCompletions = __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey in argv;\n            const skipRecommendation = helpOptSet || requestCompletions || helpOnly;\n            if (argv._.length) {\n                if (handlerKeys.length) {\n                    let firstUnknownCommand;\n                    for (let i = commandIndex || 0, cmd; argv._[i] !== undefined; i++) {\n                        cmd = String(argv._[i]);\n                        if (handlerKeys.includes(cmd) && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n                            const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(cmd, this, parsed, i + 1, helpOnly, helpOptSet || versionOptSet || helpOnly);\n                            return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n                        }\n                        else if (!firstUnknownCommand &&\n                            cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n                            firstUnknownCommand = cmd;\n                            break;\n                        }\n                    }\n                    if (!__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() &&\n                        __classPrivateFieldGet(this, _YargsInstance_recommendCommands, \"f\") &&\n                        firstUnknownCommand &&\n                        !skipRecommendation) {\n                        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").recommendCommands(firstUnknownCommand, handlerKeys);\n                    }\n                }\n                if (__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") &&\n                    argv._.includes(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) &&\n                    !requestCompletions) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    this.showCompletionScript();\n                    this.exit(0);\n                }\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && !skipRecommendation) {\n                const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(null, this, parsed, 0, helpOnly, helpOptSet || versionOptSet || helpOnly);\n                return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (requestCompletions) {\n                if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                    setBlocking(true);\n                args = [].concat(args);\n                const completionArgs = args.slice(args.indexOf(`--${__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey}`) + 1);\n                __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(completionArgs, (err, completions) => {\n                    if (err)\n                        throw new YError(err.message);\n                    (completions || []).forEach(completion => {\n                        __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(completion);\n                    });\n                    this.exit(0);\n                });\n                return this[kPostProcess](argv, !populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (!__classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\")) {\n                if (helpOptSet) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    skipValidation = true;\n                    this.showHelp('log');\n                    this.exit(0);\n                }\n                else if (versionOptSet) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    skipValidation = true;\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion('log');\n                    this.exit(0);\n                }\n            }\n            if (!skipValidation && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.length > 0) {\n                skipValidation = Object.keys(argv).some(key => __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.indexOf(key) >= 0 && argv[key] === true);\n            }\n            if (!skipValidation) {\n                if (parsed.error)\n                    throw new YError(parsed.error.message);\n                if (!requestCompletions) {\n                    const validation = this[kRunValidation](aliases, {}, parsed.error);\n                    if (!calledFromCommand) {\n                        argvPromise = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), true);\n                    }\n                    argvPromise = this[kValidateAsync](validation, argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv);\n                    if (isPromise(argvPromise) && !calledFromCommand) {\n                        argvPromise = argvPromise.then(() => {\n                            return applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n                        });\n                    }\n                }\n            }\n        }\n        catch (err) {\n            if (err instanceof YError)\n                __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message, err);\n            else\n                throw err;\n        }\n        return this[kPostProcess](argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv, populateDoubleDash, !!calledFromCommand, true);\n    }\n    [kRunValidation](aliases, positionalMap, parseErrors, isDefaultCommand) {\n        const demandedOptions = { ...this.getDemandedOptions() };\n        return (argv) => {\n            if (parseErrors)\n                throw new YError(parseErrors.message);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").nonOptionCount(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").requiredArguments(argv, demandedOptions);\n            let failedStrictCommands = false;\n            if (__classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\")) {\n                failedStrictCommands = __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownCommands(argv);\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_strict, \"f\") && !failedStrictCommands) {\n                __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, positionalMap, !!isDefaultCommand);\n            }\n            else if (__classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\")) {\n                __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, {}, false, false);\n            }\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").limitedChoices(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implications(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicting(argv);\n        };\n    }\n    [kSetHasOutput]() {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n    }\n    [kTrackManuallySetKeys](keys) {\n        if (typeof keys === 'string') {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n        }\n        else {\n            for (const k of keys) {\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[k] = true;\n            }\n        }\n    }\n}\nexport function isYargsInstance(y) {\n    return !!y && typeof y.getInternalMethods === 'function';\n}\n"]},"metadata":{},"sourceType":"module"}