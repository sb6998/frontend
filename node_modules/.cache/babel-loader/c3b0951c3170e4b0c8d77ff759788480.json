{"ast":null,"code":"import { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\n\nfunction isBoolean(fail) {\n  return typeof fail === 'boolean';\n}\n\nexport function usage(yargs, shim) {\n  const __ = shim.y18n.__;\n  const self = {};\n  const fails = [];\n\n  self.failFn = function failFn(f) {\n    fails.push(f);\n  };\n\n  let failMessage = null;\n  let showHelpOnFail = true;\n\n  self.showHelpOnFail = function showHelpOnFailFn() {\n    let arg1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let arg2 = arguments.length > 1 ? arguments[1] : undefined;\n\n    function parseFunctionArgs() {\n      return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n    }\n\n    const [enabled, message] = parseFunctionArgs();\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n\n  let failureOutput = false;\n\n  self.fail = function fail(msg, err) {\n    const logger = yargs.getInternalMethods().getLoggerInstance();\n\n    if (fails.length) {\n      for (let i = fails.length - 1; i >= 0; --i) {\n        const fail = fails[i];\n\n        if (isBoolean(fail)) {\n          if (err) throw err;else if (msg) throw Error(msg);\n        } else {\n          fail(msg, err, self);\n        }\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true);\n\n      if (!failureOutput) {\n        failureOutput = true;\n\n        if (showHelpOnFail) {\n          yargs.showHelp('error');\n          logger.error();\n        }\n\n        if (msg || err) logger.error(msg || err);\n\n        if (failMessage) {\n          if (msg || err) logger.error('');\n          logger.error(failMessage);\n        }\n      }\n\n      err = err || new YError(msg);\n\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs.getInternalMethods().hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  let usages = [];\n  let usageDisabled = false;\n\n  self.usage = (msg, description) => {\n    if (msg === null) {\n      usageDisabled = true;\n      usages = [];\n      return self;\n    }\n\n    usageDisabled = false;\n    usages.push([msg, description || '']);\n    return self;\n  };\n\n  self.getUsage = () => {\n    return usages;\n  };\n\n  self.getUsageDisabled = () => {\n    return usageDisabled;\n  };\n\n  self.getPositionalGroupName = () => {\n    return __('Positionals:');\n  };\n\n  let examples = [];\n\n  self.example = (cmd, description) => {\n    examples.push([cmd, description || '']);\n  };\n\n  let commands = [];\n\n  self.command = function command(cmd, description, isDefault, aliases) {\n    let deprecated = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n    if (isDefault) {\n      commands = commands.map(cmdArray => {\n        cmdArray[2] = false;\n        return cmdArray;\n      });\n    }\n\n    commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n  };\n\n  self.getCommands = () => commands;\n\n  let descriptions = {};\n\n  self.describe = function describe(keyOrKeys, desc) {\n    if (Array.isArray(keyOrKeys)) {\n      keyOrKeys.forEach(k => {\n        self.describe(k, desc);\n      });\n    } else if (typeof keyOrKeys === 'object') {\n      Object.keys(keyOrKeys).forEach(k => {\n        self.describe(k, keyOrKeys[k]);\n      });\n    } else {\n      descriptions[keyOrKeys] = desc;\n    }\n  };\n\n  self.getDescriptions = () => descriptions;\n\n  let epilogs = [];\n\n  self.epilog = msg => {\n    epilogs.push(msg);\n  };\n\n  let wrapSet = false;\n  let wrap;\n\n  self.wrap = cols => {\n    wrapSet = true;\n    wrap = cols;\n  };\n\n  function getWrap() {\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n\n    return wrap;\n  }\n\n  const deferY18nLookupPrefix = '__yargsString__:';\n\n  self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n\n  self.help = function help() {\n    if (cachedHelpMessage) return cachedHelpMessage;\n    normalizeAliases();\n    const base$0 = yargs.customScriptName ? yargs.$0 : shim.path.basename(yargs.$0);\n    const demandedOptions = yargs.getDemandedOptions();\n    const demandedCommands = yargs.getDemandedCommands();\n    const deprecatedOptions = yargs.getDeprecatedOptions();\n    const groups = yargs.getGroups();\n    const options = yargs.getOptions();\n    let keys = [];\n    keys = keys.concat(Object.keys(descriptions));\n    keys = keys.concat(Object.keys(demandedOptions));\n    keys = keys.concat(Object.keys(demandedCommands));\n    keys = keys.concat(Object.keys(options.default));\n    keys = keys.filter(filterHiddenOptions);\n    keys = Object.keys(keys.reduce((acc, key) => {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    const theWrap = getWrap();\n    const ui = shim.cliui({\n      width: theWrap,\n      wrap: !!theWrap\n    });\n\n    if (!usageDisabled) {\n      if (usages.length) {\n        usages.forEach(usage => {\n          ui.div({\n            text: `${usage[0].replace(/\\$0/g, base$0)}`\n          });\n\n          if (usage[1]) {\n            ui.div({\n              text: `${usage[1]}`,\n              padding: [1, 0, 0, 0]\n            });\n          }\n        });\n        ui.div();\n      } else if (commands.length) {\n        let u = null;\n\n        if (demandedCommands._) {\n          u = `${base$0} <${__('command')}>\\n`;\n        } else {\n          u = `${base$0} [${__('command')}]\\n`;\n        }\n\n        ui.div(`${u}`);\n      }\n    }\n\n    if (commands.length > 1 || commands.length === 1 && !commands[0][2]) {\n      ui.div(__('Commands:'));\n      const context = yargs.getInternalMethods().getContext();\n      const parentCommands = context.commands.length ? `${context.commands.join(' ')} ` : '';\n\n      if (yargs.getInternalMethods().getParserConfiguration()['sort-commands'] === true) {\n        commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n      }\n\n      const prefix = base$0 ? `${base$0} ` : '';\n      commands.forEach(command => {\n        const commandString = `${prefix}${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n        ui.span({\n          text: commandString,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4\n        }, {\n          text: command[1]\n        });\n        const hints = [];\n        if (command[2]) hints.push(`[${__('default')}]`);\n\n        if (command[3] && command[3].length) {\n          hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n        }\n\n        if (command[4]) {\n          if (typeof command[4] === 'string') {\n            hints.push(`[${__('deprecated: %s', command[4])}]`);\n          } else {\n            hints.push(`[${__('deprecated')}]`);\n          }\n        }\n\n        if (hints.length) {\n          ui.div({\n            text: hints.join(' '),\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    }\n\n    const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(key => !yargs.parsed.newAliases[key] && aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n\n    const defaultGroup = __('Options:');\n\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n\n    const isLongSwitch = sw => /^--/.test(getText(sw));\n\n    const displayedGroups = Object.keys(groups).filter(groupName => groups[groupName].length > 0).map(groupName => {\n      const normalizedKeys = groups[groupName].filter(filterHiddenOptions).map(key => {\n        if (aliasKeys.includes(key)) return key;\n\n        for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if ((options.alias[aliasKey] || []).includes(key)) return aliasKey;\n        }\n\n        return key;\n      });\n      return {\n        groupName,\n        normalizedKeys\n      };\n    }).filter(_ref => {\n      let {\n        normalizedKeys\n      } = _ref;\n      return normalizedKeys.length > 0;\n    }).map(_ref2 => {\n      let {\n        groupName,\n        normalizedKeys\n      } = _ref2;\n      const switches = normalizedKeys.reduce((acc, key) => {\n        acc[key] = [key].concat(options.alias[key] || []).map(sw => {\n          if (groupName === self.getPositionalGroupName()) return sw;else {\n            return (/^[0-9]$/.test(sw) ? options.boolean.includes(key) ? '-' : '--' : sw.length > 1 ? '--' : '-') + sw;\n          }\n        }).sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2) ? 0 : isLongSwitch(sw1) ? 1 : -1).join(', ');\n        return acc;\n      }, {});\n      return {\n        groupName,\n        normalizedKeys,\n        switches\n      };\n    });\n    const shortSwitchesUsed = displayedGroups.filter(_ref3 => {\n      let {\n        groupName\n      } = _ref3;\n      return groupName !== self.getPositionalGroupName();\n    }).some(_ref4 => {\n      let {\n        normalizedKeys,\n        switches\n      } = _ref4;\n      return !normalizedKeys.every(key => isLongSwitch(switches[key]));\n    });\n\n    if (shortSwitchesUsed) {\n      displayedGroups.filter(_ref5 => {\n        let {\n          groupName\n        } = _ref5;\n        return groupName !== self.getPositionalGroupName();\n      }).forEach(_ref6 => {\n        let {\n          normalizedKeys,\n          switches\n        } = _ref6;\n        normalizedKeys.forEach(key => {\n          if (isLongSwitch(switches[key])) {\n            switches[key] = addIndentation(switches[key], '-x, '.length);\n          }\n        });\n      });\n    }\n\n    displayedGroups.forEach(_ref7 => {\n      let {\n        groupName,\n        normalizedKeys,\n        switches\n      } = _ref7;\n      ui.div(groupName);\n      normalizedKeys.forEach(key => {\n        const kswitch = switches[key];\n        let desc = descriptions[key] || '';\n        let type = null;\n        if (desc.includes(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (options.boolean.includes(key)) type = `[${__('boolean')}]`;\n        if (options.count.includes(key)) type = `[${__('count')}]`;\n        if (options.string.includes(key)) type = `[${__('string')}]`;\n        if (options.normalize.includes(key)) type = `[${__('string')}]`;\n        if (options.array.includes(key)) type = `[${__('array')}]`;\n        if (options.number.includes(key)) type = `[${__('number')}]`;\n\n        const deprecatedExtra = deprecated => typeof deprecated === 'string' ? `[${__('deprecated: %s', deprecated)}]` : `[${__('deprecated')}]`;\n\n        const extra = [key in deprecatedOptions ? deprecatedExtra(deprecatedOptions[key]) : null, type, key in demandedOptions ? `[${__('required')}]` : null, options.choices && options.choices[key] ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]` : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: getText(kswitch),\n          padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    });\n\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(example => {\n        example[0] = example[0].replace(/\\$0/g, base$0);\n      });\n      examples.forEach(example => {\n        if (example[1] === '') {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2]\n          });\n        } else {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2],\n            width: maxWidth(examples, theWrap) + 4\n          }, {\n            text: example[1]\n          });\n        }\n      });\n      ui.div();\n    }\n\n    if (epilogs.length > 0) {\n      const e = epilogs.map(epilog => epilog.replace(/\\$0/g, base$0)).join('\\n');\n      ui.div(`${e}\\n`);\n    }\n\n    return ui.toString().replace(/\\s*$/, '');\n  };\n\n  function maxWidth(table, theWrap, modifier) {\n    let width = 0;\n\n    if (!Array.isArray(table)) {\n      table = Object.values(table).map(v => [v]);\n    }\n\n    table.forEach(v => {\n      width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n    });\n    if (theWrap) width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n    return width;\n  }\n\n  function normalizeAliases() {\n    const demandedOptions = yargs.getDemandedOptions();\n    const options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(key => {\n      options.alias[key].forEach(alias => {\n        if (descriptions[alias]) self.describe(key, descriptions[alias]);\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias]);\n        if (options.boolean.includes(alias)) yargs.boolean(key);\n        if (options.count.includes(alias)) yargs.count(key);\n        if (options.string.includes(alias)) yargs.string(key);\n        if (options.normalize.includes(alias)) yargs.normalize(key);\n        if (options.array.includes(alias)) yargs.array(key);\n        if (options.number.includes(alias)) yargs.number(key);\n      });\n    });\n  }\n\n  let cachedHelpMessage;\n\n  self.cacheHelpMessage = function () {\n    cachedHelpMessage = this.help();\n  };\n\n  self.clearCachedHelpMessage = function () {\n    cachedHelpMessage = undefined;\n  };\n\n  self.hasCachedHelpMessage = function () {\n    return !!cachedHelpMessage;\n  };\n\n  function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n    let groupedKeys = [];\n    let toCheck = null;\n    Object.keys(groups).forEach(group => {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(key => {\n      toCheck = [key].concat(aliases[key]);\n\n      if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n\n  function filterHiddenOptions(key) {\n    return yargs.getOptions().hiddenOptions.indexOf(key) < 0 || yargs.parsed.argv[yargs.getOptions().showHiddenOpt];\n  }\n\n  self.showHelp = level => {\n    const logger = yargs.getInternalMethods().getLoggerInstance();\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n\n  self.functionDescription = fn => {\n    const description = fn.name ? shim.Parser.decamelize(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n\n  self.stringifiedValues = function stringifiedValues(values, separator) {\n    let string = '';\n    const sep = separator || ', ';\n    const array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(value => {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  };\n\n  function defaultString(value, defaultDescription) {\n    let string = `[${__('default:')} `;\n    if (value === undefined && !defaultDescription) return null;\n\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += `\"${value}\"`;\n          break;\n\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n\n        default:\n          string += value;\n      }\n    }\n\n    return `${string}]`;\n  }\n\n  function windowWidth() {\n    const maxWidth = 80;\n\n    if (shim.process.stdColumns) {\n      return Math.min(maxWidth, shim.process.stdColumns);\n    } else {\n      return maxWidth;\n    }\n  }\n\n  let version = null;\n\n  self.version = ver => {\n    version = ver;\n  };\n\n  self.showVersion = level => {\n    const logger = yargs.getInternalMethods().getLoggerInstance();\n    if (!level) level = 'error';\n    const emit = typeof level === 'function' ? level : logger[level];\n    emit(version);\n  };\n\n  self.reset = function reset(localLookup) {\n    failMessage = null;\n    failureOutput = false;\n    usages = [];\n    usageDisabled = false;\n    epilogs = [];\n    examples = [];\n    commands = [];\n    descriptions = objFilter(descriptions, k => !localLookup[k]);\n    return self;\n  };\n\n  const frozens = [];\n\n  self.freeze = function freeze() {\n    frozens.push({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    });\n  };\n\n  self.unfreeze = function unfreeze() {\n    const frozen = frozens.pop();\n    if (!frozen) return;\n    ({\n      failMessage,\n      failureOutput,\n      usages,\n      usageDisabled,\n      epilogs,\n      examples,\n      commands,\n      descriptions\n    } = frozen);\n  };\n\n  return self;\n}\n\nfunction isIndentedText(text) {\n  return typeof text === 'object';\n}\n\nfunction addIndentation(text, indent) {\n  return isIndentedText(text) ? {\n    text: text.text,\n    indentation: text.indentation + indent\n  } : {\n    text,\n    indentation: indent\n  };\n}\n\nfunction getIndentation(text) {\n  return isIndentedText(text) ? text.indentation : 0;\n}\n\nfunction getText(text) {\n  return isIndentedText(text) ? text.text : text;\n}","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/node_modules/@curlconverter/yargs/build/lib/usage.js"],"names":["objFilter","YError","setBlocking","isBoolean","fail","usage","yargs","shim","__","y18n","self","fails","failFn","f","push","failMessage","showHelpOnFail","showHelpOnFailFn","arg1","arg2","parseFunctionArgs","enabled","message","failureOutput","msg","err","logger","getInternalMethods","getLoggerInstance","length","i","Error","getExitProcess","showHelp","error","exit","hasParseCallback","usages","usageDisabled","description","getUsage","getUsageDisabled","getPositionalGroupName","examples","example","cmd","commands","command","isDefault","aliases","deprecated","map","cmdArray","getCommands","descriptions","describe","keyOrKeys","desc","Array","isArray","forEach","k","Object","keys","getDescriptions","epilogs","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","help","cachedHelpMessage","normalizeAliases","base$0","customScriptName","$0","path","basename","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","deprecatedOptions","getDeprecatedOptions","groups","getGroups","options","getOptions","concat","default","filter","filterHiddenOptions","reduce","acc","key","theWrap","ui","cliui","width","div","text","replace","padding","u","_","context","getContext","parentCommands","join","getParserConfiguration","sort","a","b","localeCompare","prefix","commandString","span","maxWidth","hints","align","aliasKeys","alias","parsed","newAliases","every","indexOf","defaultGroup","addUngroupedKeys","isLongSwitch","sw","test","getText","displayedGroups","groupName","normalizedKeys","includes","aliasKey","undefined","switches","boolean","sw1","sw2","shortSwitchesUsed","some","addIndentation","kswitch","type","substring","count","string","normalize","array","number","deprecatedExtra","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","getIndentation","e","toString","table","modifier","values","v","Math","max","stringWidth","min","parseInt","demandOption","cacheHelpMessage","clearCachedHelpMessage","hasCachedHelpMessage","groupedKeys","toCheck","group","hiddenOptions","argv","showHiddenOpt","level","emit","functionDescription","fn","name","Parser","decamelize","separator","sep","value","JSON","stringify","process","stdColumns","version","ver","showVersion","reset","localLookup","frozens","freeze","unfreeze","frozen","pop","isIndentedText","indent","indentation"],"mappings":"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","sourcesContent":["import { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nfunction isBoolean(fail) {\n    return typeof fail === 'boolean';\n}\nexport function usage(yargs, shim) {\n    const __ = shim.y18n.__;\n    const self = {};\n    const fails = [];\n    self.failFn = function failFn(f) {\n        fails.push(f);\n    };\n    let failMessage = null;\n    let showHelpOnFail = true;\n    self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n        function parseFunctionArgs() {\n            return typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n        }\n        const [enabled, message] = parseFunctionArgs();\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n    let failureOutput = false;\n    self.fail = function fail(msg, err) {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (fails.length) {\n            for (let i = fails.length - 1; i >= 0; --i) {\n                const fail = fails[i];\n                if (isBoolean(fail)) {\n                    if (err)\n                        throw err;\n                    else if (msg)\n                        throw Error(msg);\n                }\n                else {\n                    fail(msg, err, self);\n                }\n            }\n        }\n        else {\n            if (yargs.getExitProcess())\n                setBlocking(true);\n            if (!failureOutput) {\n                failureOutput = true;\n                if (showHelpOnFail) {\n                    yargs.showHelp('error');\n                    logger.error();\n                }\n                if (msg || err)\n                    logger.error(msg || err);\n                if (failMessage) {\n                    if (msg || err)\n                        logger.error('');\n                    logger.error(failMessage);\n                }\n            }\n            err = err || new YError(msg);\n            if (yargs.getExitProcess()) {\n                return yargs.exit(1);\n            }\n            else if (yargs.getInternalMethods().hasParseCallback()) {\n                return yargs.exit(1, err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    let usages = [];\n    let usageDisabled = false;\n    self.usage = (msg, description) => {\n        if (msg === null) {\n            usageDisabled = true;\n            usages = [];\n            return self;\n        }\n        usageDisabled = false;\n        usages.push([msg, description || '']);\n        return self;\n    };\n    self.getUsage = () => {\n        return usages;\n    };\n    self.getUsageDisabled = () => {\n        return usageDisabled;\n    };\n    self.getPositionalGroupName = () => {\n        return __('Positionals:');\n    };\n    let examples = [];\n    self.example = (cmd, description) => {\n        examples.push([cmd, description || '']);\n    };\n    let commands = [];\n    self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n        if (isDefault) {\n            commands = commands.map(cmdArray => {\n                cmdArray[2] = false;\n                return cmdArray;\n            });\n        }\n        commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n    };\n    self.getCommands = () => commands;\n    let descriptions = {};\n    self.describe = function describe(keyOrKeys, desc) {\n        if (Array.isArray(keyOrKeys)) {\n            keyOrKeys.forEach(k => {\n                self.describe(k, desc);\n            });\n        }\n        else if (typeof keyOrKeys === 'object') {\n            Object.keys(keyOrKeys).forEach(k => {\n                self.describe(k, keyOrKeys[k]);\n            });\n        }\n        else {\n            descriptions[keyOrKeys] = desc;\n        }\n    };\n    self.getDescriptions = () => descriptions;\n    let epilogs = [];\n    self.epilog = msg => {\n        epilogs.push(msg);\n    };\n    let wrapSet = false;\n    let wrap;\n    self.wrap = cols => {\n        wrapSet = true;\n        wrap = cols;\n    };\n    function getWrap() {\n        if (!wrapSet) {\n            wrap = windowWidth();\n            wrapSet = true;\n        }\n        return wrap;\n    }\n    const deferY18nLookupPrefix = '__yargsString__:';\n    self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n    self.help = function help() {\n        if (cachedHelpMessage)\n            return cachedHelpMessage;\n        normalizeAliases();\n        const base$0 = yargs.customScriptName\n            ? yargs.$0\n            : shim.path.basename(yargs.$0);\n        const demandedOptions = yargs.getDemandedOptions();\n        const demandedCommands = yargs.getDemandedCommands();\n        const deprecatedOptions = yargs.getDeprecatedOptions();\n        const groups = yargs.getGroups();\n        const options = yargs.getOptions();\n        let keys = [];\n        keys = keys.concat(Object.keys(descriptions));\n        keys = keys.concat(Object.keys(demandedOptions));\n        keys = keys.concat(Object.keys(demandedCommands));\n        keys = keys.concat(Object.keys(options.default));\n        keys = keys.filter(filterHiddenOptions);\n        keys = Object.keys(keys.reduce((acc, key) => {\n            if (key !== '_')\n                acc[key] = true;\n            return acc;\n        }, {}));\n        const theWrap = getWrap();\n        const ui = shim.cliui({\n            width: theWrap,\n            wrap: !!theWrap,\n        });\n        if (!usageDisabled) {\n            if (usages.length) {\n                usages.forEach(usage => {\n                    ui.div({ text: `${usage[0].replace(/\\$0/g, base$0)}` });\n                    if (usage[1]) {\n                        ui.div({ text: `${usage[1]}`, padding: [1, 0, 0, 0] });\n                    }\n                });\n                ui.div();\n            }\n            else if (commands.length) {\n                let u = null;\n                if (demandedCommands._) {\n                    u = `${base$0} <${__('command')}>\\n`;\n                }\n                else {\n                    u = `${base$0} [${__('command')}]\\n`;\n                }\n                ui.div(`${u}`);\n            }\n        }\n        if (commands.length > 1 || (commands.length === 1 && !commands[0][2])) {\n            ui.div(__('Commands:'));\n            const context = yargs.getInternalMethods().getContext();\n            const parentCommands = context.commands.length\n                ? `${context.commands.join(' ')} `\n                : '';\n            if (yargs.getInternalMethods().getParserConfiguration()['sort-commands'] ===\n                true) {\n                commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n            }\n            const prefix = base$0 ? `${base$0} ` : '';\n            commands.forEach(command => {\n                const commandString = `${prefix}${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n                ui.span({\n                    text: commandString,\n                    padding: [0, 2, 0, 2],\n                    width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4,\n                }, { text: command[1] });\n                const hints = [];\n                if (command[2])\n                    hints.push(`[${__('default')}]`);\n                if (command[3] && command[3].length) {\n                    hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n                }\n                if (command[4]) {\n                    if (typeof command[4] === 'string') {\n                        hints.push(`[${__('deprecated: %s', command[4])}]`);\n                    }\n                    else {\n                        hints.push(`[${__('deprecated')}]`);\n                    }\n                }\n                if (hints.length) {\n                    ui.div({\n                        text: hints.join(' '),\n                        padding: [0, 0, 0, 2],\n                        align: 'right',\n                    });\n                }\n                else {\n                    ui.div();\n                }\n            });\n            ui.div();\n        }\n        const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n        keys = keys.filter(key => !yargs.parsed.newAliases[key] &&\n            aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n        const defaultGroup = __('Options:');\n        if (!groups[defaultGroup])\n            groups[defaultGroup] = [];\n        addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n        const isLongSwitch = (sw) => /^--/.test(getText(sw));\n        const displayedGroups = Object.keys(groups)\n            .filter(groupName => groups[groupName].length > 0)\n            .map(groupName => {\n            const normalizedKeys = groups[groupName]\n                .filter(filterHiddenOptions)\n                .map(key => {\n                if (aliasKeys.includes(key))\n                    return key;\n                for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n                    if ((options.alias[aliasKey] || []).includes(key))\n                        return aliasKey;\n                }\n                return key;\n            });\n            return { groupName, normalizedKeys };\n        })\n            .filter(({ normalizedKeys }) => normalizedKeys.length > 0)\n            .map(({ groupName, normalizedKeys }) => {\n            const switches = normalizedKeys.reduce((acc, key) => {\n                acc[key] = [key]\n                    .concat(options.alias[key] || [])\n                    .map(sw => {\n                    if (groupName === self.getPositionalGroupName())\n                        return sw;\n                    else {\n                        return ((/^[0-9]$/.test(sw)\n                            ? options.boolean.includes(key)\n                                ? '-'\n                                : '--'\n                            : sw.length > 1\n                                ? '--'\n                                : '-') + sw);\n                    }\n                })\n                    .sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2)\n                    ? 0\n                    : isLongSwitch(sw1)\n                        ? 1\n                        : -1)\n                    .join(', ');\n                return acc;\n            }, {});\n            return { groupName, normalizedKeys, switches };\n        });\n        const shortSwitchesUsed = displayedGroups\n            .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n            .some(({ normalizedKeys, switches }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n        if (shortSwitchesUsed) {\n            displayedGroups\n                .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n                .forEach(({ normalizedKeys, switches }) => {\n                normalizedKeys.forEach(key => {\n                    if (isLongSwitch(switches[key])) {\n                        switches[key] = addIndentation(switches[key], '-x, '.length);\n                    }\n                });\n            });\n        }\n        displayedGroups.forEach(({ groupName, normalizedKeys, switches }) => {\n            ui.div(groupName);\n            normalizedKeys.forEach(key => {\n                const kswitch = switches[key];\n                let desc = descriptions[key] || '';\n                let type = null;\n                if (desc.includes(deferY18nLookupPrefix))\n                    desc = __(desc.substring(deferY18nLookupPrefix.length));\n                if (options.boolean.includes(key))\n                    type = `[${__('boolean')}]`;\n                if (options.count.includes(key))\n                    type = `[${__('count')}]`;\n                if (options.string.includes(key))\n                    type = `[${__('string')}]`;\n                if (options.normalize.includes(key))\n                    type = `[${__('string')}]`;\n                if (options.array.includes(key))\n                    type = `[${__('array')}]`;\n                if (options.number.includes(key))\n                    type = `[${__('number')}]`;\n                const deprecatedExtra = (deprecated) => typeof deprecated === 'string'\n                    ? `[${__('deprecated: %s', deprecated)}]`\n                    : `[${__('deprecated')}]`;\n                const extra = [\n                    key in deprecatedOptions\n                        ? deprecatedExtra(deprecatedOptions[key])\n                        : null,\n                    type,\n                    key in demandedOptions ? `[${__('required')}]` : null,\n                    options.choices && options.choices[key]\n                        ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]`\n                        : null,\n                    defaultString(options.default[key], options.defaultDescription[key]),\n                ]\n                    .filter(Boolean)\n                    .join(' ');\n                ui.span({\n                    text: getText(kswitch),\n                    padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n                    width: maxWidth(switches, theWrap) + 4,\n                }, desc);\n                if (extra)\n                    ui.div({ text: extra, padding: [0, 0, 0, 2], align: 'right' });\n                else\n                    ui.div();\n            });\n            ui.div();\n        });\n        if (examples.length) {\n            ui.div(__('Examples:'));\n            examples.forEach(example => {\n                example[0] = example[0].replace(/\\$0/g, base$0);\n            });\n            examples.forEach(example => {\n                if (example[1] === '') {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                    });\n                }\n                else {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                        width: maxWidth(examples, theWrap) + 4,\n                    }, {\n                        text: example[1],\n                    });\n                }\n            });\n            ui.div();\n        }\n        if (epilogs.length > 0) {\n            const e = epilogs\n                .map(epilog => epilog.replace(/\\$0/g, base$0))\n                .join('\\n');\n            ui.div(`${e}\\n`);\n        }\n        return ui.toString().replace(/\\s*$/, '');\n    };\n    function maxWidth(table, theWrap, modifier) {\n        let width = 0;\n        if (!Array.isArray(table)) {\n            table = Object.values(table).map(v => [v]);\n        }\n        table.forEach(v => {\n            width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n        });\n        if (theWrap)\n            width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n        return width;\n    }\n    function normalizeAliases() {\n        const demandedOptions = yargs.getDemandedOptions();\n        const options = yargs.getOptions();\n        (Object.keys(options.alias) || []).forEach(key => {\n            options.alias[key].forEach(alias => {\n                if (descriptions[alias])\n                    self.describe(key, descriptions[alias]);\n                if (alias in demandedOptions)\n                    yargs.demandOption(key, demandedOptions[alias]);\n                if (options.boolean.includes(alias))\n                    yargs.boolean(key);\n                if (options.count.includes(alias))\n                    yargs.count(key);\n                if (options.string.includes(alias))\n                    yargs.string(key);\n                if (options.normalize.includes(alias))\n                    yargs.normalize(key);\n                if (options.array.includes(alias))\n                    yargs.array(key);\n                if (options.number.includes(alias))\n                    yargs.number(key);\n            });\n        });\n    }\n    let cachedHelpMessage;\n    self.cacheHelpMessage = function () {\n        cachedHelpMessage = this.help();\n    };\n    self.clearCachedHelpMessage = function () {\n        cachedHelpMessage = undefined;\n    };\n    self.hasCachedHelpMessage = function () {\n        return !!cachedHelpMessage;\n    };\n    function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n        let groupedKeys = [];\n        let toCheck = null;\n        Object.keys(groups).forEach(group => {\n            groupedKeys = groupedKeys.concat(groups[group]);\n        });\n        keys.forEach(key => {\n            toCheck = [key].concat(aliases[key]);\n            if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n                groups[defaultGroup].push(key);\n            }\n        });\n        return groupedKeys;\n    }\n    function filterHiddenOptions(key) {\n        return (yargs.getOptions().hiddenOptions.indexOf(key) < 0 ||\n            yargs.parsed.argv[yargs.getOptions().showHiddenOpt]);\n    }\n    self.showHelp = (level) => {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(self.help());\n    };\n    self.functionDescription = fn => {\n        const description = fn.name\n            ? shim.Parser.decamelize(fn.name, '-')\n            : __('generated-value');\n        return ['(', description, ')'].join('');\n    };\n    self.stringifiedValues = function stringifiedValues(values, separator) {\n        let string = '';\n        const sep = separator || ', ';\n        const array = [].concat(values);\n        if (!values || !array.length)\n            return string;\n        array.forEach(value => {\n            if (string.length)\n                string += sep;\n            string += JSON.stringify(value);\n        });\n        return string;\n    };\n    function defaultString(value, defaultDescription) {\n        let string = `[${__('default:')} `;\n        if (value === undefined && !defaultDescription)\n            return null;\n        if (defaultDescription) {\n            string += defaultDescription;\n        }\n        else {\n            switch (typeof value) {\n                case 'string':\n                    string += `\"${value}\"`;\n                    break;\n                case 'object':\n                    string += JSON.stringify(value);\n                    break;\n                default:\n                    string += value;\n            }\n        }\n        return `${string}]`;\n    }\n    function windowWidth() {\n        const maxWidth = 80;\n        if (shim.process.stdColumns) {\n            return Math.min(maxWidth, shim.process.stdColumns);\n        }\n        else {\n            return maxWidth;\n        }\n    }\n    let version = null;\n    self.version = ver => {\n        version = ver;\n    };\n    self.showVersion = level => {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(version);\n    };\n    self.reset = function reset(localLookup) {\n        failMessage = null;\n        failureOutput = false;\n        usages = [];\n        usageDisabled = false;\n        epilogs = [];\n        examples = [];\n        commands = [];\n        descriptions = objFilter(descriptions, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        });\n    };\n    self.unfreeze = function unfreeze() {\n        const frozen = frozens.pop();\n        if (!frozen)\n            return;\n        ({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        } = frozen);\n    };\n    return self;\n}\nfunction isIndentedText(text) {\n    return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n    return isIndentedText(text)\n        ? { text: text.text, indentation: text.indentation + indent }\n        : { text, indentation: indent };\n}\nfunction getIndentation(text) {\n    return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n    return isIndentedText(text) ? text.text : text;\n}\n"]},"metadata":{},"sourceType":"module"}