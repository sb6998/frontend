{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Desktop/saarthi/frontend/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport { CURLParser } from 'parse-curl-js';\nimport parse from 'parse-curl';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction generateSuccessHTMLOutput(response) {\n  return '<h4>Result</h4>' + '<h5>Status:</h5> ' + '<pre>' + response.status + ' ' + response.statusText + '</pre>' + '<h5>Headers:</h5>' + '<pre>' + JSON.stringify(response.headers, null, '\\t') + '</pre>' + '<h5>Data:</h5>' + '<pre>' + JSON.stringify(response.data, null, '\\t') + '</pre>';\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: null,\n      data: null\n    };\n    this.publish = this.publish.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  publish() {\n    console.log(this.state.query);\n    const cURLParser2 = new CURLParser(this.state.query); // cURLParser.parse().body.data\n\n    const cURLParser = parse(this.state.query);\n    console.log('json', cURLParser);\n    const requestOptions = {\n      method: cURLParser.method,\n      headers: CURLParser.headers\n    };\n\n    if (requestOptions.method == 'GET' || requestOptions.method == 'DELETE') {\n      axios({\n        method: requestOptions.method,\n        url: cURLParser.url,\n        headers: requestOptions.headers\n      }).then(data => {\n        generateSuccessHTMLOutput(data);\n      }).catch(error => console.log(error));\n    } else {\n      console.log(JSON.stringify(cURLParser2.parse().body.data));\n      axios({\n        method: requestOptions.method,\n        url: cURLParser.url,\n        data: cURLParser2.parse().body.data,\n        headers: requestOptions.headers\n      }).then(data => {\n        generateSuccessHTMLOutput(data);\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: 500,\n          borderWidth: 2\n        },\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"Enter curl query here...\",\n        value: this.state.query,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"Send\",\n        onClick: this.publish,\n        children: \"Run Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/src/App.js"],"names":["React","useState","CURLParser","parse","axios","generateSuccessHTMLOutput","response","status","statusText","JSON","stringify","headers","data","App","Component","constructor","state","query","publish","bind","handleChange","target","setState","name","value","console","log","cURLParser2","cURLParser","requestOptions","method","url","then","catch","error","body","render","width","borderWidth"],"mappings":"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","sourcesContent":["import './App.css';\nimport React ,{useState}from 'react'\nimport { CURLParser } from 'parse-curl-js'\nimport parse from 'parse-curl'\nimport axios from 'axios';\n\nfunction generateSuccessHTMLOutput(response) {\n  return  '<h4>Result</h4>' + \n          '<h5>Status:</h5> ' + \n          '<pre>' + response.status + ' ' + response.statusText + '</pre>' +\n          '<h5>Headers:</h5>' + \n          '<pre>' + JSON.stringify(response.headers, null, '\\t') + '</pre>' + \n          '<h5>Data:</h5>' + \n          '<pre>' + JSON.stringify(response.data, null, '\\t') + '</pre>'; \n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: null,\n      data:null,\n    };\n    \n    this.publish = this.publish.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  publish() {\n    console.log( this.state.query);\n    const cURLParser2 = new CURLParser(this.state.query)\n    // cURLParser.parse().body.data\n    const cURLParser = parse(this.state.query)\n    console.log('json', cURLParser)\n    const requestOptions = {\n      method: cURLParser.method,\n      headers:  CURLParser.headers,\n      };\n\n    if(requestOptions.method=='GET'|| requestOptions.method=='DELETE'){\n      axios({method:requestOptions.method,\n        url: cURLParser.url,\n        headers: requestOptions.headers,\n      })\n      .then((data) => {generateSuccessHTMLOutput(data)} )\n      .catch((error) => console.log(error))\n    }\n    \n    else{\n      console.log(JSON.stringify(cURLParser2.parse().body.data))\n      axios({method:requestOptions.method,\n        url: cURLParser.url,\n        data: cURLParser2.parse().body.data,\n        headers: requestOptions.headers,\n      })\n      .then((data) => {generateSuccessHTMLOutput(data)})\n      .catch((error) => console.log(error))\n    }\n  };\n  \n  render() {\n    return <div>\n      <input \n        style={{ width:500, borderWidth: 2 }}\n        type=\"text\" \n        name=\"query\" \n        placeholder=\"Enter curl query here...\" \n        value={ this.state.query }\n        onChange={ this.handleChange} \n      />\n      <button value=\"Send\" onClick={this.publish}>Run Query</button>\n      \n    </div>\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}