{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/Desktop/saarthi/frontend/src/App.js\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport { CURLParser } from 'parse-curl-js';\nimport parse from 'parse-curl';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction generateSuccessHTMLOutput(response) {\n  return '<h4>Result</h4>' + '<h5>Data from API:</h5>' + '<pre>' + JSON.stringify(response.data, null, '\\t') + '</pre>';\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: null,\n      data: null\n    };\n    this.publish = this.publish.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  publish() {\n    var resultElement = document.getElementById('postResult');\n    resultElement.innerHTML = '';\n    console.log(this.state.query);\n    const cURLParser2 = new CURLParser(this.state.query); // cURLParser.parse().body.data\n\n    const cURLParser = parse(this.state.query);\n    console.log('json', cURLParser);\n    const requestOptions = {\n      method: cURLParser.method,\n      headers: CURLParser.headers\n    };\n\n    if (requestOptions.method == 'GET' || requestOptions.method == 'DELETE') {\n      axios({\n        method: requestOptions.method,\n        url: cURLParser.url,\n        headers: requestOptions.headers\n      }).then(data => {\n        resultElement.innerHTML = generateSuccessHTMLOutput(data);\n      }).catch(error => console.log(error));\n    } else {\n      console.log(JSON.stringify(cURLParser2.parse().body.data));\n      axios({\n        method: requestOptions.method,\n        url: cURLParser.url,\n        data: cURLParser2.parse().body.data,\n        headers: requestOptions.headers\n      }).then(data => {\n        resultElement.innerHTML = generateSuccessHTMLOutput(data);\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: 500,\n          borderWidth: 2\n        },\n        type: \"text\",\n        name: \"query\",\n        placeholder: \"Enter curl query here...\",\n        value: this.state.query,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        value: \"Send\",\n        onClick: this.publish,\n        children: \"Run Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/src/App.js"],"names":["React","useState","CURLParser","parse","axios","generateSuccessHTMLOutput","response","JSON","stringify","data","App","Component","constructor","state","query","publish","bind","handleChange","target","setState","name","value","resultElement","document","getElementById","innerHTML","console","log","cURLParser2","cURLParser","requestOptions","method","headers","url","then","catch","error","body","render","width","borderWidth"],"mappings":"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","sourcesContent":["import './App.css';\nimport React ,{useState}from 'react'\nimport { CURLParser } from 'parse-curl-js'\nimport parse from 'parse-curl'\nimport axios from 'axios';\n\nfunction generateSuccessHTMLOutput(response) {\n  return  '<h4>Result</h4>' + \n          '<h5>Data from API:</h5>' + \n          '<pre>' + JSON.stringify(response.data, null, '\\t') + '</pre>'; \n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      query: null,\n      data:null,\n    };\n    \n    this.publish = this.publish.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  handleChange({ target }) {\n    this.setState({\n      [target.name]: target.value\n    });\n  }\n\n  publish() {\n    var resultElement = document.getElementById('postResult');\n    resultElement.innerHTML = '';\n    console.log( this.state.query);\n    const cURLParser2 = new CURLParser(this.state.query)\n    // cURLParser.parse().body.data\n    const cURLParser = parse(this.state.query)\n    console.log('json', cURLParser)\n    const requestOptions = {\n      method: cURLParser.method,\n      headers:  CURLParser.headers,\n      };\n\n    if(requestOptions.method=='GET'|| requestOptions.method=='DELETE'){\n      axios({method:requestOptions.method,\n        url: cURLParser.url,\n        headers: requestOptions.headers,\n      })\n      .then((data) => {resultElement.innerHTML = generateSuccessHTMLOutput(data)} )\n      .catch((error) => console.log(error))\n    }\n    \n    else{\n      console.log(JSON.stringify(cURLParser2.parse().body.data))\n      axios({method:requestOptions.method,\n        url: cURLParser.url,\n        data: cURLParser2.parse().body.data,\n        headers: requestOptions.headers,\n      })\n      .then((data) => {resultElement.innerHTML = generateSuccessHTMLOutput(data)})\n      .catch((error) => console.log(error))\n    }\n  };\n  \n  render() {\n    return <div>\n      <input \n        style={{ width:500, borderWidth: 2 }}\n        type=\"text\" \n        name=\"query\" \n        placeholder=\"Enter curl query here...\" \n        value={ this.state.query }\n        onChange={ this.handleChange} \n      />\n      <button value=\"Send\" onClick={this.publish}>Run Query</button>\n      \n    </div>\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}