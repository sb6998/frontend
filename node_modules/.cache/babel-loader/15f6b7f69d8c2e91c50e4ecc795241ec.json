{"ast":null,"code":"import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport class Completion {\n  constructor(yargs, usage, command, shim) {\n    var _a, _b, _c;\n\n    this.yargs = yargs;\n    this.usage = usage;\n    this.command = command;\n    this.shim = shim;\n    this.completionKey = 'get-yargs-completions';\n    this.aliases = null;\n    this.customCompletionFunction = null;\n    this.zshShell = (_c = ((_a = this.shim.getEnv('SHELL')) === null || _a === void 0 ? void 0 : _a.includes('zsh')) || ((_b = this.shim.getEnv('ZSH_NAME')) === null || _b === void 0 ? void 0 : _b.includes('zsh'))) !== null && _c !== void 0 ? _c : false;\n  }\n\n  defaultCompletion(args, argv, current, done) {\n    const handlers = this.command.getCommandHandlers();\n\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      if (handlers[args[i]] && handlers[args[i]].builder) {\n        const builder = handlers[args[i]].builder;\n\n        if (isCommandBuilderCallback(builder)) {\n          const y = this.yargs.getInternalMethods().reset();\n          builder(y, true);\n          return y.argv;\n        }\n      }\n    }\n\n    const completions = [];\n    this.commandCompletions(completions, args, current);\n    this.optionCompletions(completions, args, argv, current);\n    this.choicesCompletions(completions, args, argv, current);\n    done(null, completions);\n  }\n\n  commandCompletions(completions, args, current) {\n    const parentCommands = this.yargs.getInternalMethods().getContext().commands;\n\n    if (!current.match(/^-/) && parentCommands[parentCommands.length - 1] !== current && !this.previousArgHasChoices(args)) {\n      this.usage.getCommands().forEach(usageCommand => {\n        const commandName = parseCommand(usageCommand[0]).cmd;\n\n        if (args.indexOf(commandName) === -1) {\n          if (!this.zshShell) {\n            completions.push(commandName);\n          } else {\n            const desc = usageCommand[1] || '';\n            completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n          }\n        }\n      });\n    }\n  }\n\n  optionCompletions(completions, args, argv, current) {\n    if ((current.match(/^-/) || current === '' && completions.length === 0) && !this.previousArgHasChoices(args)) {\n      const options = this.yargs.getOptions();\n      const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n      Object.keys(options.key).forEach(key => {\n        const negable = !!options.configuration['boolean-negation'] && options.boolean.includes(key);\n        const isPositionalKey = positionalKeys.includes(key);\n\n        if (!isPositionalKey && !this.argsContainKey(args, argv, key, negable)) {\n          this.completeOptionKey(key, completions, current);\n          if (negable && !!options.default[key]) this.completeOptionKey(`no-${key}`, completions, current);\n        }\n      });\n    }\n  }\n\n  choicesCompletions(completions, args, argv, current) {\n    if (this.previousArgHasChoices(args)) {\n      const choices = this.getPreviousArgChoices(args);\n\n      if (choices && choices.length > 0) {\n        completions.push(...choices);\n      }\n    }\n  }\n\n  getPreviousArgChoices(args) {\n    if (args.length < 1) return;\n    let previousArg = args[args.length - 1];\n    let filter = '';\n\n    if (!previousArg.startsWith('--') && args.length > 1) {\n      filter = previousArg;\n      previousArg = args[args.length - 2];\n    }\n\n    if (!previousArg.startsWith('--')) return;\n    const previousArgKey = previousArg.replace(/-/g, '');\n    const options = this.yargs.getOptions();\n\n    if (Object.keys(options.key).some(key => key === previousArgKey) && Array.isArray(options.choices[previousArgKey])) {\n      return options.choices[previousArgKey].filter(choice => !filter || choice.startsWith(filter));\n    }\n  }\n\n  previousArgHasChoices(args) {\n    const choices = this.getPreviousArgChoices(args);\n    return choices !== undefined && choices.length > 0;\n  }\n\n  argsContainKey(args, argv, key, negable) {\n    if (args.indexOf(`--${key}`) !== -1) return true;\n    if (negable && args.indexOf(`--no-${key}`) !== -1) return true;\n\n    if (this.aliases) {\n      for (const alias of this.aliases[key]) {\n        if (argv[alias] !== undefined) return true;\n      }\n    }\n\n    return false;\n  }\n\n  completeOptionKey(key, completions, current) {\n    const descs = this.usage.getDescriptions();\n\n    const startsByTwoDashes = s => /^--/.test(s);\n\n    const isShortOption = s => /^[^0-9]$/.test(s);\n\n    const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n\n    if (!this.zshShell) {\n      completions.push(dashes + key);\n    } else {\n      const desc = descs[key] || '';\n      completions.push(dashes + `${key.replace(/:/g, '\\\\:')}:${desc.replace('__yargsString__:', '')}`);\n    }\n  }\n\n  customCompletion(args, argv, current, done) {\n    var _this = this;\n\n    assertNotStrictEqual(this.customCompletionFunction, null, this.shim);\n\n    if (isSyncCompletionFunction(this.customCompletionFunction)) {\n      const result = this.customCompletionFunction(current, argv);\n\n      if (isPromise(result)) {\n        return result.then(list => {\n          this.shim.process.nextTick(() => {\n            done(null, list);\n          });\n        }).catch(err => {\n          this.shim.process.nextTick(() => {\n            done(err, undefined);\n          });\n        });\n      }\n\n      return done(null, result);\n    } else if (isFallbackCompletionFunction(this.customCompletionFunction)) {\n      return this.customCompletionFunction(current, argv, function () {\n        let onCompleted = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : done;\n        return _this.defaultCompletion(args, argv, current, onCompleted);\n      }, completions => {\n        done(null, completions);\n      });\n    } else {\n      return this.customCompletionFunction(current, argv, completions => {\n        done(null, completions);\n      });\n    }\n  }\n\n  getCompletion(args, done) {\n    const current = args.length ? args[args.length - 1] : '';\n    const argv = this.yargs.parse(args, true);\n    const completionFunction = this.customCompletionFunction ? argv => this.customCompletion(args, argv, current, done) : argv => this.defaultCompletion(args, argv, current, done);\n    return isPromise(argv) ? argv.then(completionFunction) : completionFunction(argv);\n  }\n\n  generateCompletionScript($0, cmd) {\n    let script = this.zshShell ? templates.completionZshTemplate : templates.completionShTemplate;\n    const name = this.shim.path.basename($0);\n    if ($0.match(/\\.js$/)) $0 = `./${$0}`;\n    script = script.replace(/{{app_name}}/g, name);\n    script = script.replace(/{{completion_command}}/g, cmd);\n    return script.replace(/{{app_path}}/g, $0);\n  }\n\n  registerFunction(fn) {\n    this.customCompletionFunction = fn;\n  }\n\n  setParsed(parsed) {\n    this.aliases = parsed.aliases;\n  }\n\n}\nexport function completion(yargs, usage, command, shim) {\n  return new Completion(yargs, usage, command, shim);\n}\n\nfunction isSyncCompletionFunction(completionFunction) {\n  return completionFunction.length < 3;\n}\n\nfunction isFallbackCompletionFunction(completionFunction) {\n  return completionFunction.length > 3;\n}","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/node_modules/@curlconverter/yargs/build/lib/completion.js"],"names":["isCommandBuilderCallback","assertNotStrictEqual","templates","isPromise","parseCommand","Completion","constructor","yargs","usage","command","shim","_a","_b","_c","completionKey","aliases","customCompletionFunction","zshShell","getEnv","includes","defaultCompletion","args","argv","current","done","handlers","getCommandHandlers","i","ii","length","builder","y","getInternalMethods","reset","completions","commandCompletions","optionCompletions","choicesCompletions","parentCommands","getContext","commands","match","previousArgHasChoices","getCommands","forEach","usageCommand","commandName","cmd","indexOf","push","desc","replace","options","getOptions","positionalKeys","getGroups","getPositionalGroupName","Object","keys","key","negable","configuration","boolean","isPositionalKey","argsContainKey","completeOptionKey","default","choices","getPreviousArgChoices","previousArg","filter","startsWith","previousArgKey","some","Array","isArray","choice","undefined","alias","descs","getDescriptions","startsByTwoDashes","s","test","isShortOption","dashes","customCompletion","isSyncCompletionFunction","result","then","list","process","nextTick","catch","err","isFallbackCompletionFunction","onCompleted","getCompletion","parse","completionFunction","generateCompletionScript","$0","script","completionZshTemplate","completionShTemplate","name","path","basename","registerFunction","fn","setParsed","parsed","completion"],"mappings":"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","sourcesContent":["import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport class Completion {\n    constructor(yargs, usage, command, shim) {\n        var _a, _b, _c;\n        this.yargs = yargs;\n        this.usage = usage;\n        this.command = command;\n        this.shim = shim;\n        this.completionKey = 'get-yargs-completions';\n        this.aliases = null;\n        this.customCompletionFunction = null;\n        this.zshShell =\n            (_c = (((_a = this.shim.getEnv('SHELL')) === null || _a === void 0 ? void 0 : _a.includes('zsh')) ||\n                ((_b = this.shim.getEnv('ZSH_NAME')) === null || _b === void 0 ? void 0 : _b.includes('zsh')))) !== null && _c !== void 0 ? _c : false;\n    }\n    defaultCompletion(args, argv, current, done) {\n        const handlers = this.command.getCommandHandlers();\n        for (let i = 0, ii = args.length; i < ii; ++i) {\n            if (handlers[args[i]] && handlers[args[i]].builder) {\n                const builder = handlers[args[i]].builder;\n                if (isCommandBuilderCallback(builder)) {\n                    const y = this.yargs.getInternalMethods().reset();\n                    builder(y, true);\n                    return y.argv;\n                }\n            }\n        }\n        const completions = [];\n        this.commandCompletions(completions, args, current);\n        this.optionCompletions(completions, args, argv, current);\n        this.choicesCompletions(completions, args, argv, current);\n        done(null, completions);\n    }\n    commandCompletions(completions, args, current) {\n        const parentCommands = this.yargs\n            .getInternalMethods()\n            .getContext().commands;\n        if (!current.match(/^-/) &&\n            parentCommands[parentCommands.length - 1] !== current &&\n            !this.previousArgHasChoices(args)) {\n            this.usage.getCommands().forEach(usageCommand => {\n                const commandName = parseCommand(usageCommand[0]).cmd;\n                if (args.indexOf(commandName) === -1) {\n                    if (!this.zshShell) {\n                        completions.push(commandName);\n                    }\n                    else {\n                        const desc = usageCommand[1] || '';\n                        completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n                    }\n                }\n            });\n        }\n    }\n    optionCompletions(completions, args, argv, current) {\n        if ((current.match(/^-/) || (current === '' && completions.length === 0)) &&\n            !this.previousArgHasChoices(args)) {\n            const options = this.yargs.getOptions();\n            const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n            Object.keys(options.key).forEach(key => {\n                const negable = !!options.configuration['boolean-negation'] &&\n                    options.boolean.includes(key);\n                const isPositionalKey = positionalKeys.includes(key);\n                if (!isPositionalKey &&\n                    !this.argsContainKey(args, argv, key, negable)) {\n                    this.completeOptionKey(key, completions, current);\n                    if (negable && !!options.default[key])\n                        this.completeOptionKey(`no-${key}`, completions, current);\n                }\n            });\n        }\n    }\n    choicesCompletions(completions, args, argv, current) {\n        if (this.previousArgHasChoices(args)) {\n            const choices = this.getPreviousArgChoices(args);\n            if (choices && choices.length > 0) {\n                completions.push(...choices);\n            }\n        }\n    }\n    getPreviousArgChoices(args) {\n        if (args.length < 1)\n            return;\n        let previousArg = args[args.length - 1];\n        let filter = '';\n        if (!previousArg.startsWith('--') && args.length > 1) {\n            filter = previousArg;\n            previousArg = args[args.length - 2];\n        }\n        if (!previousArg.startsWith('--'))\n            return;\n        const previousArgKey = previousArg.replace(/-/g, '');\n        const options = this.yargs.getOptions();\n        if (Object.keys(options.key).some(key => key === previousArgKey) &&\n            Array.isArray(options.choices[previousArgKey])) {\n            return options.choices[previousArgKey].filter(choice => !filter || choice.startsWith(filter));\n        }\n    }\n    previousArgHasChoices(args) {\n        const choices = this.getPreviousArgChoices(args);\n        return choices !== undefined && choices.length > 0;\n    }\n    argsContainKey(args, argv, key, negable) {\n        if (args.indexOf(`--${key}`) !== -1)\n            return true;\n        if (negable && args.indexOf(`--no-${key}`) !== -1)\n            return true;\n        if (this.aliases) {\n            for (const alias of this.aliases[key]) {\n                if (argv[alias] !== undefined)\n                    return true;\n            }\n        }\n        return false;\n    }\n    completeOptionKey(key, completions, current) {\n        const descs = this.usage.getDescriptions();\n        const startsByTwoDashes = (s) => /^--/.test(s);\n        const isShortOption = (s) => /^[^0-9]$/.test(s);\n        const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n        if (!this.zshShell) {\n            completions.push(dashes + key);\n        }\n        else {\n            const desc = descs[key] || '';\n            completions.push(dashes +\n                `${key.replace(/:/g, '\\\\:')}:${desc.replace('__yargsString__:', '')}`);\n        }\n    }\n    customCompletion(args, argv, current, done) {\n        assertNotStrictEqual(this.customCompletionFunction, null, this.shim);\n        if (isSyncCompletionFunction(this.customCompletionFunction)) {\n            const result = this.customCompletionFunction(current, argv);\n            if (isPromise(result)) {\n                return result\n                    .then(list => {\n                    this.shim.process.nextTick(() => {\n                        done(null, list);\n                    });\n                })\n                    .catch(err => {\n                    this.shim.process.nextTick(() => {\n                        done(err, undefined);\n                    });\n                });\n            }\n            return done(null, result);\n        }\n        else if (isFallbackCompletionFunction(this.customCompletionFunction)) {\n            return this.customCompletionFunction(current, argv, (onCompleted = done) => this.defaultCompletion(args, argv, current, onCompleted), completions => {\n                done(null, completions);\n            });\n        }\n        else {\n            return this.customCompletionFunction(current, argv, completions => {\n                done(null, completions);\n            });\n        }\n    }\n    getCompletion(args, done) {\n        const current = args.length ? args[args.length - 1] : '';\n        const argv = this.yargs.parse(args, true);\n        const completionFunction = this.customCompletionFunction\n            ? (argv) => this.customCompletion(args, argv, current, done)\n            : (argv) => this.defaultCompletion(args, argv, current, done);\n        return isPromise(argv)\n            ? argv.then(completionFunction)\n            : completionFunction(argv);\n    }\n    generateCompletionScript($0, cmd) {\n        let script = this.zshShell\n            ? templates.completionZshTemplate\n            : templates.completionShTemplate;\n        const name = this.shim.path.basename($0);\n        if ($0.match(/\\.js$/))\n            $0 = `./${$0}`;\n        script = script.replace(/{{app_name}}/g, name);\n        script = script.replace(/{{completion_command}}/g, cmd);\n        return script.replace(/{{app_path}}/g, $0);\n    }\n    registerFunction(fn) {\n        this.customCompletionFunction = fn;\n    }\n    setParsed(parsed) {\n        this.aliases = parsed.aliases;\n    }\n}\nexport function completion(yargs, usage, command, shim) {\n    return new Completion(yargs, usage, command, shim);\n}\nfunction isSyncCompletionFunction(completionFunction) {\n    return completionFunction.length < 3;\n}\nfunction isFallbackCompletionFunction(completionFunction) {\n    return completionFunction.length > 3;\n}\n"]},"metadata":{},"sourceType":"module"}