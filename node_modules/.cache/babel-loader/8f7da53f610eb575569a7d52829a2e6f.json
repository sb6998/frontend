{"ast":null,"code":"var util = require('../util');\n\nvar jsesc = require('jsesc');\n\nvar querystring = require('query-string');\n\nrequire('string.prototype.startswith');\n\nfunction repr(value) {\n  // In context of url parameters, don't accept nulls and such.\n  if (!value) {\n    return '\"\"';\n  } else {\n    return `~s|${jsesc(value, {\n      quotes: 'backticks'\n    })}|`;\n  }\n}\n\nfunction getCookies(request) {\n  if (!request.cookies) {\n    return '';\n  }\n\n  var cookies = [];\n\n  for (var cookieName in request.cookies) {\n    cookies.push(`${cookieName}=${request.cookies[cookieName]}`);\n  }\n\n  return `cookies: [~s|${cookies.join('; ')}|]`;\n}\n\nfunction getOptions(request) {\n  var hackneyOptions = [];\n  const auth = getBasicAuth(request);\n\n  if (auth) {\n    hackneyOptions.push(auth);\n  }\n\n  if (request.insecure) {\n    hackneyOptions.push(':insecure');\n  }\n\n  const cookies = getCookies(request);\n\n  if (cookies) {\n    hackneyOptions.push(cookies);\n  }\n\n  var hackneyOptionsString = '';\n\n  if (hackneyOptions.length) {\n    hackneyOptionsString = `hackney: [${hackneyOptions.join(', ')}]`;\n  }\n\n  return `[${hackneyOptionsString}]`;\n}\n\nfunction getBasicAuth(request) {\n  if (!request.auth) {\n    return '';\n  }\n\n  var splitAuth = request.auth.split(':');\n  var user = splitAuth[0] || '';\n  var password = splitAuth[1] || '';\n  return `basic_auth: {${repr(user)}, ${repr(password)}}`;\n}\n\nfunction getQueryDict(request) {\n  if (!request.query) {\n    return '[]';\n  }\n\n  var queryDict = '[\\n';\n\n  for (var paramName in request.query) {\n    var rawValue = request.query[paramName];\n    var paramValue;\n\n    if (Array.isArray(rawValue)) {\n      paramValue = '[' + rawValue.map(repr).join(', ') + ']';\n    } else {\n      paramValue = repr(rawValue);\n    }\n\n    queryDict += `    {${repr(paramName)}, ${paramValue}},\\n`;\n  }\n\n  queryDict += '  ]';\n  return queryDict;\n}\n\nfunction getHeadersDict(request) {\n  if (!request.headers) {\n    return '[]';\n  }\n\n  var dict = '[\\n';\n\n  for (var headerName in request.headers) {\n    dict += `    {${repr(headerName)}, ${repr(request.headers[headerName])}},\\n`;\n  }\n\n  dict += '  ]';\n  return dict;\n}\n\nfunction getBody(request) {\n  const formData = getFormDataString(request);\n\n  if (formData) {\n    return formData;\n  }\n\n  return '\"\"';\n}\n\nfunction getFormDataString(request) {\n  if (typeof request.data === 'string' || typeof request.data === 'number') {\n    return getDataString(request);\n  }\n\n  if (!request.multipartUploads) {\n    return '';\n  }\n\n  var fileArgs = [];\n  var dataArgs = [];\n\n  for (var multipartKey in request.multipartUploads) {\n    var multipartValue = request.multipartUploads[multipartKey];\n\n    if (multipartValue.startsWith('@')) {\n      var fileName = multipartValue.slice(1);\n      fileArgs.push(`    {:file, ~s|${fileName}|}`);\n    } else {\n      dataArgs.push(`    {${repr(multipartKey)}, ${repr(multipartValue)}}`);\n    }\n  }\n\n  var content = [];\n  fileArgs = fileArgs.join(',\\n');\n\n  if (fileArgs) {\n    content.push(fileArgs);\n  }\n\n  dataArgs = dataArgs.join(',\\n');\n\n  if (dataArgs) {\n    content.push(dataArgs);\n  }\n\n  content = content.join(',\\n');\n\n  if (content) {\n    return `{:multipart, [\n${content}\n]}`;\n  }\n\n  return '';\n}\n\nfunction getDataString(request) {\n  if (typeof request.data === 'number') {\n    request.data = request.data.toString();\n  }\n\n  if (!request.isDataRaw && request.data.startsWith('@')) {\n    var filePath = request.data.slice(1);\n\n    if (request.isDataBinary) {\n      return `File.read!(\"${filePath}\")`;\n    } else {\n      return `{:file, ~s|${filePath}|}`;\n    }\n  }\n\n  var parsedQueryString = querystring.parse(request.data, {\n    sort: false\n  });\n  var keyCount = Object.keys(parsedQueryString).length;\n  var singleKeyOnly = keyCount === 1 && !parsedQueryString[Object.keys(parsedQueryString)[0]];\n  var singularData = request.isDataBinary || singleKeyOnly;\n\n  if (singularData) {\n    return `~s|${request.data}|`;\n  } else {\n    return getMultipleDataString(request, parsedQueryString);\n  }\n}\n\nfunction getMultipleDataString(request, parsedQueryString) {\n  var repeatedKey = false;\n\n  for (var key in parsedQueryString) {\n    var value = parsedQueryString[key];\n\n    if (Array.isArray(value)) {\n      repeatedKey = true;\n    }\n  }\n\n  var dataString;\n\n  if (repeatedKey) {\n    const data = [];\n\n    for (key in parsedQueryString) {\n      value = parsedQueryString[key];\n\n      if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          data.push(`    {${repr(key)}, ${repr(value[i])}}`);\n        }\n      } else {\n        data.push(`    {${repr(key)}, ${repr(value)}}`);\n      }\n    }\n\n    dataString = `[\n${data.join(',\\n')}\n  ]`;\n  } else {\n    const data = [];\n\n    for (key in parsedQueryString) {\n      value = parsedQueryString[key];\n      data.push(`    {${repr(key)}, ${repr(value)}}`);\n    }\n\n    dataString = `[\n${data.join(',\\n')}\n  ]`;\n  }\n\n  return dataString;\n}\n\nvar toElixir = function (curlCommand) {\n  var request = util.parseCurlCommand(curlCommand); // curl automatically prepends 'http' if the scheme is missing, but python fails and returns an error\n  // we tack it on here to mimic curl\n\n  if (!request.url.match(/https?:/)) {\n    request.url = 'http://' + request.url;\n  }\n\n  if (!request.urlWithoutQuery.match(/https?:/)) {\n    request.urlWithoutQuery = 'http://' + request.urlWithoutQuery;\n  }\n\n  const template = `request = %HTTPoison.Request{\n  method: :${request.method},\n  url: \"${request.urlWithoutQuery}\",\n  options: ${getOptions(request)},\n  headers: ${getHeadersDict(request)},\n  params: ${getQueryDict(request)},\n  body: ${getBody(request)}\n}\n\nresponse = HTTPoison.request(request)\n`;\n  return template;\n};\n\nmodule.exports = toElixir;","map":{"version":3,"sources":["/home/saurabh/Desktop/saarthi/frontend/node_modules/curlconverter/generators/elixir.js"],"names":["util","require","jsesc","querystring","repr","value","quotes","getCookies","request","cookies","cookieName","push","join","getOptions","hackneyOptions","auth","getBasicAuth","insecure","hackneyOptionsString","length","splitAuth","split","user","password","getQueryDict","query","queryDict","paramName","rawValue","paramValue","Array","isArray","map","getHeadersDict","headers","dict","headerName","getBody","formData","getFormDataString","data","getDataString","multipartUploads","fileArgs","dataArgs","multipartKey","multipartValue","startsWith","fileName","slice","content","toString","isDataRaw","filePath","isDataBinary","parsedQueryString","parse","sort","keyCount","Object","keys","singleKeyOnly","singularData","getMultipleDataString","repeatedKey","key","dataString","i","toElixir","curlCommand","parseCurlCommand","url","match","urlWithoutQuery","template","method","module","exports"],"mappings":"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","sourcesContent":["var util = require('../util')\nvar jsesc = require('jsesc')\nvar querystring = require('query-string')\n\nrequire('string.prototype.startswith')\n\nfunction repr (value) {\n  // In context of url parameters, don't accept nulls and such.\n  if (!value) {\n    return '\"\"'\n  } else {\n    return `~s|${jsesc(value, { quotes: 'backticks' })}|`\n  }\n}\n\nfunction getCookies (request) {\n  if (!request.cookies) {\n    return ''\n  }\n\n  var cookies = []\n  for (var cookieName in request.cookies) {\n    cookies.push(`${cookieName}=${request.cookies[cookieName]}`)\n  }\n  return `cookies: [~s|${cookies.join('; ')}|]`\n}\n\nfunction getOptions (request) {\n  var hackneyOptions = []\n\n  const auth = getBasicAuth(request)\n  if (auth) {\n    hackneyOptions.push(auth)\n  }\n\n  if (request.insecure) {\n    hackneyOptions.push(':insecure')\n  }\n\n  const cookies = getCookies(request)\n  if (cookies) {\n    hackneyOptions.push(cookies)\n  }\n\n  var hackneyOptionsString = ''\n  if (hackneyOptions.length) {\n    hackneyOptionsString = `hackney: [${hackneyOptions.join(', ')}]`\n  }\n\n  return `[${hackneyOptionsString}]`\n}\n\nfunction getBasicAuth (request) {\n  if (!request.auth) {\n    return ''\n  }\n\n  var splitAuth = request.auth.split(':')\n  var user = splitAuth[0] || ''\n  var password = splitAuth[1] || ''\n\n  return `basic_auth: {${repr(user)}, ${repr(password)}}`\n}\n\nfunction getQueryDict (request) {\n  if (!request.query) {\n    return '[]'\n  }\n  var queryDict = '[\\n'\n  for (var paramName in request.query) {\n    var rawValue = request.query[paramName]\n    var paramValue\n    if (Array.isArray(rawValue)) {\n      paramValue = '[' + rawValue.map(repr).join(', ') + ']'\n    } else {\n      paramValue = repr(rawValue)\n    }\n    queryDict += `    {${repr(paramName)}, ${paramValue}},\\n`\n  }\n  queryDict += '  ]'\n  return queryDict\n}\n\nfunction getHeadersDict (request) {\n  if (!request.headers) {\n    return '[]'\n  }\n  var dict = '[\\n'\n  for (var headerName in request.headers) {\n    dict += `    {${repr(headerName)}, ${repr(request.headers[headerName])}},\\n`\n  }\n  dict += '  ]'\n  return dict\n}\n\nfunction getBody (request) {\n  const formData = getFormDataString(request)\n\n  if (formData) {\n    return formData\n  }\n\n  return '\"\"'\n}\n\nfunction getFormDataString (request) {\n  if (typeof request.data === 'string' || typeof request.data === 'number') {\n    return getDataString(request)\n  }\n\n  if (!request.multipartUploads) {\n    return ''\n  }\n\n  var fileArgs = []\n  var dataArgs = []\n  for (var multipartKey in request.multipartUploads) {\n    var multipartValue = request.multipartUploads[multipartKey]\n    if (multipartValue.startsWith('@')) {\n      var fileName = multipartValue.slice(1)\n      fileArgs.push(`    {:file, ~s|${fileName}|}`)\n    } else {\n      dataArgs.push(`    {${repr(multipartKey)}, ${repr(multipartValue)}}`)\n    }\n  }\n\n  var content = []\n  fileArgs = fileArgs.join(',\\n')\n  if (fileArgs) {\n    content.push(fileArgs)\n  }\n\n  dataArgs = dataArgs.join(',\\n')\n  if (dataArgs) {\n    content.push(dataArgs)\n  }\n\n  content = content.join(',\\n')\n  if (content) {\n    return `{:multipart, [\n${content}\n]}`\n  }\n\n  return ''\n}\n\nfunction getDataString (request) {\n  if (typeof request.data === 'number') {\n    request.data = request.data.toString()\n  }\n  if (!request.isDataRaw && request.data.startsWith('@')) {\n    var filePath = request.data.slice(1)\n    if (request.isDataBinary) {\n      return `File.read!(\"${filePath}\")`\n    } else {\n      return `{:file, ~s|${filePath}|}`\n    }\n  }\n\n  var parsedQueryString = querystring.parse(request.data, { sort: false })\n  var keyCount = Object.keys(parsedQueryString).length\n  var singleKeyOnly =\n    keyCount === 1 && !parsedQueryString[Object.keys(parsedQueryString)[0]]\n  var singularData = request.isDataBinary || singleKeyOnly\n  if (singularData) {\n    return `~s|${request.data}|`\n  } else {\n    return getMultipleDataString(request, parsedQueryString)\n  }\n}\n\nfunction getMultipleDataString (request, parsedQueryString) {\n  var repeatedKey = false\n  for (var key in parsedQueryString) {\n    var value = parsedQueryString[key]\n    if (Array.isArray(value)) {\n      repeatedKey = true\n    }\n  }\n\n  var dataString\n  if (repeatedKey) {\n    const data = []\n    for (key in parsedQueryString) {\n      value = parsedQueryString[key]\n      if (Array.isArray(value)) {\n        for (var i = 0; i < value.length; i++) {\n          data.push(`    {${repr(key)}, ${repr(value[i])}}`)\n        }\n      } else {\n        data.push(`    {${repr(key)}, ${repr(value)}}`)\n      }\n    }\n    dataString = `[\n${data.join(',\\n')}\n  ]`\n  } else {\n    const data = []\n    for (key in parsedQueryString) {\n      value = parsedQueryString[key]\n      data.push(`    {${repr(key)}, ${repr(value)}}`)\n    }\n    dataString = `[\n${data.join(',\\n')}\n  ]`\n  }\n\n  return dataString\n}\n\nvar toElixir = function (curlCommand) {\n  var request = util.parseCurlCommand(curlCommand)\n  // curl automatically prepends 'http' if the scheme is missing, but python fails and returns an error\n  // we tack it on here to mimic curl\n  if (!request.url.match(/https?:/)) {\n    request.url = 'http://' + request.url\n  }\n  if (!request.urlWithoutQuery.match(/https?:/)) {\n    request.urlWithoutQuery = 'http://' + request.urlWithoutQuery\n  }\n\n  const template = `request = %HTTPoison.Request{\n  method: :${request.method},\n  url: \"${request.urlWithoutQuery}\",\n  options: ${getOptions(request)},\n  headers: ${getHeadersDict(request)},\n  params: ${getQueryDict(request)},\n  body: ${getBody(request)}\n}\n\nresponse = HTTPoison.request(request)\n`\n\n  return template\n}\n\nmodule.exports = toElixir\n"]},"metadata":{},"sourceType":"script"}