{"ast":null,"code":"/*! Browser bundle of nunjucks 3.2.3  */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"nunjucks\"] = factory();else root[\"nunjucks\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 11);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var ArrayProto = Array.prototype;\n      var ObjProto = Object.prototype;\n      var escapeMap = {\n        '&': '&amp;',\n        '\"': '&quot;',\n        '\\'': '&#39;',\n        '<': '&lt;',\n        '>': '&gt;'\n      };\n      var escapeRegex = /[&\"'<>]/g;\n      var exports = module.exports = {};\n\n      function hasOwnProp(obj, k) {\n        return ObjProto.hasOwnProperty.call(obj, k);\n      }\n\n      exports.hasOwnProp = hasOwnProp;\n\n      function lookupEscape(ch) {\n        return escapeMap[ch];\n      }\n\n      function _prettifyError(path, withInternals, err) {\n        if (!err.Update) {\n          // not one of ours, cast it\n          err = new exports.TemplateError(err);\n        }\n\n        err.Update(path); // Unless they marked the dev flag, show them a trace from here\n\n        if (!withInternals) {\n          var old = err;\n          err = new Error(old.message);\n          err.name = old.name;\n        }\n\n        return err;\n      }\n\n      exports._prettifyError = _prettifyError;\n\n      function TemplateError(message, lineno, colno) {\n        var err;\n        var cause;\n\n        if (message instanceof Error) {\n          cause = message;\n          message = cause.name + \": \" + cause.message;\n        }\n\n        if (Object.setPrototypeOf) {\n          err = new Error(message);\n          Object.setPrototypeOf(err, TemplateError.prototype);\n        } else {\n          err = this;\n          Object.defineProperty(err, 'message', {\n            enumerable: false,\n            writable: true,\n            value: message\n          });\n        }\n\n        Object.defineProperty(err, 'name', {\n          value: 'Template render error'\n        });\n\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(err, this.constructor);\n        }\n\n        var getStack;\n\n        if (cause) {\n          var stackDescriptor = Object.getOwnPropertyDescriptor(cause, 'stack');\n\n          getStack = stackDescriptor && (stackDescriptor.get || function () {\n            return stackDescriptor.value;\n          });\n\n          if (!getStack) {\n            getStack = function getStack() {\n              return cause.stack;\n            };\n          }\n        } else {\n          var stack = new Error(message).stack;\n\n          getStack = function getStack() {\n            return stack;\n          };\n        }\n\n        Object.defineProperty(err, 'stack', {\n          get: function get() {\n            return getStack.call(err);\n          }\n        });\n        Object.defineProperty(err, 'cause', {\n          value: cause\n        });\n        err.lineno = lineno;\n        err.colno = colno;\n        err.firstUpdate = true;\n\n        err.Update = function Update(path) {\n          var msg = '(' + (path || 'unknown path') + ')'; // only show lineno + colno next to path of template\n          // where error occurred\n\n          if (this.firstUpdate) {\n            if (this.lineno && this.colno) {\n              msg += \" [Line \" + this.lineno + \", Column \" + this.colno + \"]\";\n            } else if (this.lineno) {\n              msg += \" [Line \" + this.lineno + \"]\";\n            }\n          }\n\n          msg += '\\n ';\n\n          if (this.firstUpdate) {\n            msg += ' ';\n          }\n\n          this.message = msg + (this.message || '');\n          this.firstUpdate = false;\n          return this;\n        };\n\n        return err;\n      }\n\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(TemplateError.prototype, Error.prototype);\n      } else {\n        TemplateError.prototype = Object.create(Error.prototype, {\n          constructor: {\n            value: TemplateError\n          }\n        });\n      }\n\n      exports.TemplateError = TemplateError;\n\n      function escape(val) {\n        return val.replace(escapeRegex, lookupEscape);\n      }\n\n      exports.escape = escape;\n\n      function isFunction(obj) {\n        return ObjProto.toString.call(obj) === '[object Function]';\n      }\n\n      exports.isFunction = isFunction;\n\n      function isArray(obj) {\n        return ObjProto.toString.call(obj) === '[object Array]';\n      }\n\n      exports.isArray = isArray;\n\n      function isString(obj) {\n        return ObjProto.toString.call(obj) === '[object String]';\n      }\n\n      exports.isString = isString;\n\n      function isObject(obj) {\n        return ObjProto.toString.call(obj) === '[object Object]';\n      }\n\n      exports.isObject = isObject;\n      /**\n       * @param {string|number} attr\n       * @returns {(string|number)[]}\n       * @private\n       */\n\n      function _prepareAttributeParts(attr) {\n        if (!attr) {\n          return [];\n        }\n\n        if (typeof attr === 'string') {\n          return attr.split('.');\n        }\n\n        return [attr];\n      }\n      /**\n       * @param {string}   attribute      Attribute value. Dots allowed.\n       * @returns {function(Object): *}\n       */\n\n\n      function getAttrGetter(attribute) {\n        var parts = _prepareAttributeParts(attribute);\n\n        return function attrGetter(item) {\n          var _item = item;\n\n          for (var i = 0; i < parts.length; i++) {\n            var part = parts[i]; // If item is not an object, and we still got parts to handle, it means\n            // that something goes wrong. Just roll out to undefined in that case.\n\n            if (hasOwnProp(_item, part)) {\n              _item = _item[part];\n            } else {\n              return undefined;\n            }\n          }\n\n          return _item;\n        };\n      }\n\n      exports.getAttrGetter = getAttrGetter;\n\n      function groupBy(obj, val, throwOnUndefined) {\n        var result = {};\n        var iterator = isFunction(val) ? val : getAttrGetter(val);\n\n        for (var i = 0; i < obj.length; i++) {\n          var value = obj[i];\n          var key = iterator(value, i);\n\n          if (key === undefined && throwOnUndefined === true) {\n            throw new TypeError(\"groupby: attribute \\\"\" + val + \"\\\" resolved to undefined\");\n          }\n\n          (result[key] || (result[key] = [])).push(value);\n        }\n\n        return result;\n      }\n\n      exports.groupBy = groupBy;\n\n      function toArray(obj) {\n        return Array.prototype.slice.call(obj);\n      }\n\n      exports.toArray = toArray;\n\n      function without(array) {\n        var result = [];\n\n        if (!array) {\n          return result;\n        }\n\n        var length = array.length;\n        var contains = toArray(arguments).slice(1);\n        var index = -1;\n\n        while (++index < length) {\n          if (indexOf(contains, array[index]) === -1) {\n            result.push(array[index]);\n          }\n        }\n\n        return result;\n      }\n\n      exports.without = without;\n\n      function repeat(char_, n) {\n        var str = '';\n\n        for (var i = 0; i < n; i++) {\n          str += char_;\n        }\n\n        return str;\n      }\n\n      exports.repeat = repeat;\n\n      function each(obj, func, context) {\n        if (obj == null) {\n          return;\n        }\n\n        if (ArrayProto.forEach && obj.forEach === ArrayProto.forEach) {\n          obj.forEach(func, context);\n        } else if (obj.length === +obj.length) {\n          for (var i = 0, l = obj.length; i < l; i++) {\n            func.call(context, obj[i], i, obj);\n          }\n        }\n      }\n\n      exports.each = each;\n\n      function map(obj, func) {\n        var results = [];\n\n        if (obj == null) {\n          return results;\n        }\n\n        if (ArrayProto.map && obj.map === ArrayProto.map) {\n          return obj.map(func);\n        }\n\n        for (var i = 0; i < obj.length; i++) {\n          results[results.length] = func(obj[i], i);\n        }\n\n        if (obj.length === +obj.length) {\n          results.length = obj.length;\n        }\n\n        return results;\n      }\n\n      exports.map = map;\n\n      function asyncIter(arr, iter, cb) {\n        var i = -1;\n\n        function next() {\n          i++;\n\n          if (i < arr.length) {\n            iter(arr[i], i, next, cb);\n          } else {\n            cb();\n          }\n        }\n\n        next();\n      }\n\n      exports.asyncIter = asyncIter;\n\n      function asyncFor(obj, iter, cb) {\n        var keys = keys_(obj || {});\n        var len = keys.length;\n        var i = -1;\n\n        function next() {\n          i++;\n          var k = keys[i];\n\n          if (i < len) {\n            iter(k, obj[k], i, len, next);\n          } else {\n            cb();\n          }\n        }\n\n        next();\n      }\n\n      exports.asyncFor = asyncFor;\n\n      function indexOf(arr, searchElement, fromIndex) {\n        return Array.prototype.indexOf.call(arr || [], searchElement, fromIndex);\n      }\n\n      exports.indexOf = indexOf;\n\n      function keys_(obj) {\n        /* eslint-disable no-restricted-syntax */\n        var arr = [];\n\n        for (var k in obj) {\n          if (hasOwnProp(obj, k)) {\n            arr.push(k);\n          }\n        }\n\n        return arr;\n      }\n\n      exports.keys = keys_;\n\n      function _entries(obj) {\n        return keys_(obj).map(function (k) {\n          return [k, obj[k]];\n        });\n      }\n\n      exports._entries = _entries;\n\n      function _values(obj) {\n        return keys_(obj).map(function (k) {\n          return obj[k];\n        });\n      }\n\n      exports._values = _values;\n\n      function extend(obj1, obj2) {\n        obj1 = obj1 || {};\n        keys_(obj2).forEach(function (k) {\n          obj1[k] = obj2[k];\n        });\n        return obj1;\n      }\n\n      exports._assign = exports.extend = extend;\n\n      function inOperator(key, val) {\n        if (isArray(val) || isString(val)) {\n          return val.indexOf(key) !== -1;\n        } else if (isObject(val)) {\n          return key in val;\n        }\n\n        throw new Error('Cannot use \"in\" operator to search for \"' + key + '\" in unexpected types.');\n      }\n\n      exports.inOperator = inOperator;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\"; // A simple class system, more documentation to come\n\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var EventEmitter = __webpack_require__(16);\n\n      var lib = __webpack_require__(0);\n\n      function parentWrap(parent, prop) {\n        if (typeof parent !== 'function' || typeof prop !== 'function') {\n          return prop;\n        }\n\n        return function wrap() {\n          // Save the current parent method\n          var tmp = this.parent; // Set parent to the previous method, call, and restore\n\n          this.parent = parent;\n          var res = prop.apply(this, arguments);\n          this.parent = tmp;\n          return res;\n        };\n      }\n\n      function extendClass(cls, name, props) {\n        props = props || {};\n        lib.keys(props).forEach(function (k) {\n          props[k] = parentWrap(cls.prototype[k], props[k]);\n        });\n\n        var subclass = /*#__PURE__*/function (_cls) {\n          _inheritsLoose(subclass, _cls);\n\n          function subclass() {\n            return _cls.apply(this, arguments) || this;\n          }\n\n          _createClass(subclass, [{\n            key: \"typename\",\n            get: function get() {\n              return name;\n            }\n          }]);\n\n          return subclass;\n        }(cls);\n\n        lib._assign(subclass.prototype, props);\n\n        return subclass;\n      }\n\n      var Obj = /*#__PURE__*/function () {\n        function Obj() {\n          // Unfortunately necessary for backwards compatibility\n          this.init.apply(this, arguments);\n        }\n\n        var _proto = Obj.prototype;\n\n        _proto.init = function init() {};\n\n        Obj.extend = function extend(name, props) {\n          if (typeof name === 'object') {\n            props = name;\n            name = 'anonymous';\n          }\n\n          return extendClass(this, name, props);\n        };\n\n        _createClass(Obj, [{\n          key: \"typename\",\n          get: function get() {\n            return this.constructor.name;\n          }\n        }]);\n\n        return Obj;\n      }();\n\n      var EmitterObj = /*#__PURE__*/function (_EventEmitter) {\n        _inheritsLoose(EmitterObj, _EventEmitter);\n\n        function EmitterObj() {\n          var _this2;\n\n          var _this;\n\n          _this = _EventEmitter.call(this) || this; // Unfortunately necessary for backwards compatibility\n\n          (_this2 = _this).init.apply(_this2, arguments);\n\n          return _this;\n        }\n\n        var _proto2 = EmitterObj.prototype;\n\n        _proto2.init = function init() {};\n\n        EmitterObj.extend = function extend(name, props) {\n          if (typeof name === 'object') {\n            props = name;\n            name = 'anonymous';\n          }\n\n          return extendClass(this, name, props);\n        };\n\n        _createClass(EmitterObj, [{\n          key: \"typename\",\n          get: function get() {\n            return this.constructor.name;\n          }\n        }]);\n\n        return EmitterObj;\n      }(EventEmitter);\n\n      module.exports = {\n        Obj: Obj,\n        EmitterObj: EmitterObj\n      };\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var lib = __webpack_require__(0);\n\n      var arrayFrom = Array.from;\n      var supportsIterators = typeof Symbol === 'function' && Symbol.iterator && typeof arrayFrom === 'function'; // Frames keep track of scoping both at compile-time and run-time so\n      // we know how to access variables. Block tags can introduce special\n      // variables, for example.\n\n      var Frame = /*#__PURE__*/function () {\n        function Frame(parent, isolateWrites) {\n          this.variables = Object.create(null);\n          this.parent = parent;\n          this.topLevel = false; // if this is true, writes (set) should never propagate upwards past\n          // this frame to its parent (though reads may).\n\n          this.isolateWrites = isolateWrites;\n        }\n\n        var _proto = Frame.prototype;\n\n        _proto.set = function set(name, val, resolveUp) {\n          // Allow variables with dots by automatically creating the\n          // nested structure\n          var parts = name.split('.');\n          var obj = this.variables;\n          var frame = this;\n\n          if (resolveUp) {\n            if (frame = this.resolve(parts[0], true)) {\n              frame.set(name, val);\n              return;\n            }\n          }\n\n          for (var i = 0; i < parts.length - 1; i++) {\n            var id = parts[i];\n\n            if (!obj[id]) {\n              obj[id] = {};\n            }\n\n            obj = obj[id];\n          }\n\n          obj[parts[parts.length - 1]] = val;\n        };\n\n        _proto.get = function get(name) {\n          var val = this.variables[name];\n\n          if (val !== undefined) {\n            return val;\n          }\n\n          return null;\n        };\n\n        _proto.lookup = function lookup(name) {\n          var p = this.parent;\n          var val = this.variables[name];\n\n          if (val !== undefined) {\n            return val;\n          }\n\n          return p && p.lookup(name);\n        };\n\n        _proto.resolve = function resolve(name, forWrite) {\n          var p = forWrite && this.isolateWrites ? undefined : this.parent;\n          var val = this.variables[name];\n\n          if (val !== undefined) {\n            return this;\n          }\n\n          return p && p.resolve(name);\n        };\n\n        _proto.push = function push(isolateWrites) {\n          return new Frame(this, isolateWrites);\n        };\n\n        _proto.pop = function pop() {\n          return this.parent;\n        };\n\n        return Frame;\n      }();\n\n      function makeMacro(argNames, kwargNames, func) {\n        return function macro() {\n          for (var _len = arguments.length, macroArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n            macroArgs[_key] = arguments[_key];\n          }\n\n          var argCount = numArgs(macroArgs);\n          var args;\n          var kwargs = getKeywordArgs(macroArgs);\n\n          if (argCount > argNames.length) {\n            args = macroArgs.slice(0, argNames.length); // Positional arguments that should be passed in as\n            // keyword arguments (essentially default values)\n\n            macroArgs.slice(args.length, argCount).forEach(function (val, i) {\n              if (i < kwargNames.length) {\n                kwargs[kwargNames[i]] = val;\n              }\n            });\n            args.push(kwargs);\n          } else if (argCount < argNames.length) {\n            args = macroArgs.slice(0, argCount);\n\n            for (var i = argCount; i < argNames.length; i++) {\n              var arg = argNames[i]; // Keyword arguments that should be passed as\n              // positional arguments, i.e. the caller explicitly\n              // used the name of a positional arg\n\n              args.push(kwargs[arg]);\n              delete kwargs[arg];\n            }\n\n            args.push(kwargs);\n          } else {\n            args = macroArgs;\n          }\n\n          return func.apply(this, args);\n        };\n      }\n\n      function makeKeywordArgs(obj) {\n        obj.__keywords = true;\n        return obj;\n      }\n\n      function isKeywordArgs(obj) {\n        return obj && Object.prototype.hasOwnProperty.call(obj, '__keywords');\n      }\n\n      function getKeywordArgs(args) {\n        var len = args.length;\n\n        if (len) {\n          var lastArg = args[len - 1];\n\n          if (isKeywordArgs(lastArg)) {\n            return lastArg;\n          }\n        }\n\n        return {};\n      }\n\n      function numArgs(args) {\n        var len = args.length;\n\n        if (len === 0) {\n          return 0;\n        }\n\n        var lastArg = args[len - 1];\n\n        if (isKeywordArgs(lastArg)) {\n          return len - 1;\n        } else {\n          return len;\n        }\n      } // A SafeString object indicates that the string should not be\n      // autoescaped. This happens magically because autoescaping only\n      // occurs on primitive string objects.\n\n\n      function SafeString(val) {\n        if (typeof val !== 'string') {\n          return val;\n        }\n\n        this.val = val;\n        this.length = val.length;\n      }\n\n      SafeString.prototype = Object.create(String.prototype, {\n        length: {\n          writable: true,\n          configurable: true,\n          value: 0\n        }\n      });\n\n      SafeString.prototype.valueOf = function valueOf() {\n        return this.val;\n      };\n\n      SafeString.prototype.toString = function toString() {\n        return this.val;\n      };\n\n      function copySafeness(dest, target) {\n        if (dest instanceof SafeString) {\n          return new SafeString(target);\n        }\n\n        return target.toString();\n      }\n\n      function markSafe(val) {\n        var type = typeof val;\n\n        if (type === 'string') {\n          return new SafeString(val);\n        } else if (type !== 'function') {\n          return val;\n        } else {\n          return function wrapSafe(args) {\n            var ret = val.apply(this, arguments);\n\n            if (typeof ret === 'string') {\n              return new SafeString(ret);\n            }\n\n            return ret;\n          };\n        }\n      }\n\n      function suppressValue(val, autoescape) {\n        val = val !== undefined && val !== null ? val : '';\n\n        if (autoescape && !(val instanceof SafeString)) {\n          val = lib.escape(val.toString());\n        }\n\n        return val;\n      }\n\n      function ensureDefined(val, lineno, colno) {\n        if (val === null || val === undefined) {\n          throw new lib.TemplateError('attempted to output null or undefined value', lineno + 1, colno + 1);\n        }\n\n        return val;\n      }\n\n      function memberLookup(obj, val) {\n        if (obj === undefined || obj === null) {\n          return undefined;\n        }\n\n        if (typeof obj[val] === 'function') {\n          return function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            return obj[val].apply(obj, args);\n          };\n        }\n\n        return obj[val];\n      }\n\n      function callWrap(obj, name, context, args) {\n        if (!obj) {\n          throw new Error('Unable to call `' + name + '`, which is undefined or falsey');\n        } else if (typeof obj !== 'function') {\n          throw new Error('Unable to call `' + name + '`, which is not a function');\n        }\n\n        return obj.apply(context, args);\n      }\n\n      function contextOrFrameLookup(context, frame, name) {\n        var val = frame.lookup(name);\n        return val !== undefined ? val : context.lookup(name);\n      }\n\n      function handleError(error, lineno, colno) {\n        if (error.lineno) {\n          return error;\n        } else {\n          return new lib.TemplateError(error, lineno, colno);\n        }\n      }\n\n      function asyncEach(arr, dimen, iter, cb) {\n        if (lib.isArray(arr)) {\n          var len = arr.length;\n          lib.asyncIter(arr, function iterCallback(item, i, next) {\n            switch (dimen) {\n              case 1:\n                iter(item, i, len, next);\n                break;\n\n              case 2:\n                iter(item[0], item[1], i, len, next);\n                break;\n\n              case 3:\n                iter(item[0], item[1], item[2], i, len, next);\n                break;\n\n              default:\n                item.push(i, len, next);\n                iter.apply(this, item);\n            }\n          }, cb);\n        } else {\n          lib.asyncFor(arr, function iterCallback(key, val, i, len, next) {\n            iter(key, val, i, len, next);\n          }, cb);\n        }\n      }\n\n      function asyncAll(arr, dimen, func, cb) {\n        var finished = 0;\n        var len;\n        var outputArr;\n\n        function done(i, output) {\n          finished++;\n          outputArr[i] = output;\n\n          if (finished === len) {\n            cb(null, outputArr.join(''));\n          }\n        }\n\n        if (lib.isArray(arr)) {\n          len = arr.length;\n          outputArr = new Array(len);\n\n          if (len === 0) {\n            cb(null, '');\n          } else {\n            for (var i = 0; i < arr.length; i++) {\n              var item = arr[i];\n\n              switch (dimen) {\n                case 1:\n                  func(item, i, len, done);\n                  break;\n\n                case 2:\n                  func(item[0], item[1], i, len, done);\n                  break;\n\n                case 3:\n                  func(item[0], item[1], item[2], i, len, done);\n                  break;\n\n                default:\n                  item.push(i, len, done);\n                  func.apply(this, item);\n              }\n            }\n          }\n        } else {\n          var keys = lib.keys(arr || {});\n          len = keys.length;\n          outputArr = new Array(len);\n\n          if (len === 0) {\n            cb(null, '');\n          } else {\n            for (var _i = 0; _i < keys.length; _i++) {\n              var k = keys[_i];\n              func(k, arr[k], _i, len, done);\n            }\n          }\n        }\n      }\n\n      function fromIterator(arr) {\n        if (typeof arr !== 'object' || arr === null || lib.isArray(arr)) {\n          return arr;\n        } else if (supportsIterators && Symbol.iterator in arr) {\n          return arrayFrom(arr);\n        } else {\n          return arr;\n        }\n      }\n\n      module.exports = {\n        Frame: Frame,\n        makeMacro: makeMacro,\n        makeKeywordArgs: makeKeywordArgs,\n        numArgs: numArgs,\n        suppressValue: suppressValue,\n        ensureDefined: ensureDefined,\n        memberLookup: memberLookup,\n        contextOrFrameLookup: contextOrFrameLookup,\n        callWrap: callWrap,\n        handleError: handleError,\n        isArray: lib.isArray,\n        keys: lib.keys,\n        SafeString: SafeString,\n        copySafeness: copySafeness,\n        markSafe: markSafe,\n        asyncEach: asyncEach,\n        asyncAll: asyncAll,\n        inOperator: lib.inOperator,\n        fromIterator: fromIterator\n      };\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var _require = __webpack_require__(1),\n          Obj = _require.Obj;\n\n      function traverseAndCheck(obj, type, results) {\n        if (obj instanceof type) {\n          results.push(obj);\n        }\n\n        if (obj instanceof Node) {\n          obj.findAll(type, results);\n        }\n      }\n\n      var Node = /*#__PURE__*/function (_Obj) {\n        _inheritsLoose(Node, _Obj);\n\n        function Node() {\n          return _Obj.apply(this, arguments) || this;\n        }\n\n        var _proto = Node.prototype;\n\n        _proto.init = function init(lineno, colno) {\n          var _arguments = arguments,\n              _this = this;\n\n          for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n            args[_key - 2] = arguments[_key];\n          }\n\n          this.lineno = lineno;\n          this.colno = colno;\n          this.fields.forEach(function (field, i) {\n            // The first two args are line/col numbers, so offset by 2\n            var val = _arguments[i + 2]; // Fields should never be undefined, but null. It makes\n            // testing easier to normalize values.\n\n            if (val === undefined) {\n              val = null;\n            }\n\n            _this[field] = val;\n          });\n        };\n\n        _proto.findAll = function findAll(type, results) {\n          var _this2 = this;\n\n          results = results || [];\n\n          if (this instanceof NodeList) {\n            this.children.forEach(function (child) {\n              return traverseAndCheck(child, type, results);\n            });\n          } else {\n            this.fields.forEach(function (field) {\n              return traverseAndCheck(_this2[field], type, results);\n            });\n          }\n\n          return results;\n        };\n\n        _proto.iterFields = function iterFields(func) {\n          var _this3 = this;\n\n          this.fields.forEach(function (field) {\n            func(_this3[field], field);\n          });\n        };\n\n        return Node;\n      }(Obj); // Abstract nodes\n\n\n      var Value = /*#__PURE__*/function (_Node) {\n        _inheritsLoose(Value, _Node);\n\n        function Value() {\n          return _Node.apply(this, arguments) || this;\n        }\n\n        _createClass(Value, [{\n          key: \"typename\",\n          get: function get() {\n            return 'Value';\n          }\n        }, {\n          key: \"fields\",\n          get: function get() {\n            return ['value'];\n          }\n        }]);\n\n        return Value;\n      }(Node); // Concrete nodes\n\n\n      var NodeList = /*#__PURE__*/function (_Node2) {\n        _inheritsLoose(NodeList, _Node2);\n\n        function NodeList() {\n          return _Node2.apply(this, arguments) || this;\n        }\n\n        var _proto2 = NodeList.prototype;\n\n        _proto2.init = function init(lineno, colno, nodes) {\n          _Node2.prototype.init.call(this, lineno, colno, nodes || []);\n        };\n\n        _proto2.addChild = function addChild(node) {\n          this.children.push(node);\n        };\n\n        _createClass(NodeList, [{\n          key: \"typename\",\n          get: function get() {\n            return 'NodeList';\n          }\n        }, {\n          key: \"fields\",\n          get: function get() {\n            return ['children'];\n          }\n        }]);\n\n        return NodeList;\n      }(Node);\n\n      var Root = NodeList.extend('Root');\n      var Literal = Value.extend('Literal');\n      var Symbol = Value.extend('Symbol');\n      var Group = NodeList.extend('Group');\n      var ArrayNode = NodeList.extend('Array');\n      var Pair = Node.extend('Pair', {\n        fields: ['key', 'value']\n      });\n      var Dict = NodeList.extend('Dict');\n      var LookupVal = Node.extend('LookupVal', {\n        fields: ['target', 'val']\n      });\n      var If = Node.extend('If', {\n        fields: ['cond', 'body', 'else_']\n      });\n      var IfAsync = If.extend('IfAsync');\n      var InlineIf = Node.extend('InlineIf', {\n        fields: ['cond', 'body', 'else_']\n      });\n      var For = Node.extend('For', {\n        fields: ['arr', 'name', 'body', 'else_']\n      });\n      var AsyncEach = For.extend('AsyncEach');\n      var AsyncAll = For.extend('AsyncAll');\n      var Macro = Node.extend('Macro', {\n        fields: ['name', 'args', 'body']\n      });\n      var Caller = Macro.extend('Caller');\n      var Import = Node.extend('Import', {\n        fields: ['template', 'target', 'withContext']\n      });\n\n      var FromImport = /*#__PURE__*/function (_Node3) {\n        _inheritsLoose(FromImport, _Node3);\n\n        function FromImport() {\n          return _Node3.apply(this, arguments) || this;\n        }\n\n        var _proto3 = FromImport.prototype;\n\n        _proto3.init = function init(lineno, colno, template, names, withContext) {\n          _Node3.prototype.init.call(this, lineno, colno, template, names || new NodeList(), withContext);\n        };\n\n        _createClass(FromImport, [{\n          key: \"typename\",\n          get: function get() {\n            return 'FromImport';\n          }\n        }, {\n          key: \"fields\",\n          get: function get() {\n            return ['template', 'names', 'withContext'];\n          }\n        }]);\n\n        return FromImport;\n      }(Node);\n\n      var FunCall = Node.extend('FunCall', {\n        fields: ['name', 'args']\n      });\n      var Filter = FunCall.extend('Filter');\n      var FilterAsync = Filter.extend('FilterAsync', {\n        fields: ['name', 'args', 'symbol']\n      });\n      var KeywordArgs = Dict.extend('KeywordArgs');\n      var Block = Node.extend('Block', {\n        fields: ['name', 'body']\n      });\n      var Super = Node.extend('Super', {\n        fields: ['blockName', 'symbol']\n      });\n      var TemplateRef = Node.extend('TemplateRef', {\n        fields: ['template']\n      });\n      var Extends = TemplateRef.extend('Extends');\n      var Include = Node.extend('Include', {\n        fields: ['template', 'ignoreMissing']\n      });\n      var Set = Node.extend('Set', {\n        fields: ['targets', 'value']\n      });\n      var Switch = Node.extend('Switch', {\n        fields: ['expr', 'cases', 'default']\n      });\n      var Case = Node.extend('Case', {\n        fields: ['cond', 'body']\n      });\n      var Output = NodeList.extend('Output');\n      var Capture = Node.extend('Capture', {\n        fields: ['body']\n      });\n      var TemplateData = Literal.extend('TemplateData');\n      var UnaryOp = Node.extend('UnaryOp', {\n        fields: ['target']\n      });\n      var BinOp = Node.extend('BinOp', {\n        fields: ['left', 'right']\n      });\n      var In = BinOp.extend('In');\n      var Is = BinOp.extend('Is');\n      var Or = BinOp.extend('Or');\n      var And = BinOp.extend('And');\n      var Not = UnaryOp.extend('Not');\n      var Add = BinOp.extend('Add');\n      var Concat = BinOp.extend('Concat');\n      var Sub = BinOp.extend('Sub');\n      var Mul = BinOp.extend('Mul');\n      var Div = BinOp.extend('Div');\n      var FloorDiv = BinOp.extend('FloorDiv');\n      var Mod = BinOp.extend('Mod');\n      var Pow = BinOp.extend('Pow');\n      var Neg = UnaryOp.extend('Neg');\n      var Pos = UnaryOp.extend('Pos');\n      var Compare = Node.extend('Compare', {\n        fields: ['expr', 'ops']\n      });\n      var CompareOperand = Node.extend('CompareOperand', {\n        fields: ['expr', 'type']\n      });\n      var CallExtension = Node.extend('CallExtension', {\n        init: function init(ext, prop, args, contentArgs) {\n          this.parent();\n          this.extName = ext.__name || ext;\n          this.prop = prop;\n          this.args = args || new NodeList();\n          this.contentArgs = contentArgs || [];\n          this.autoescape = ext.autoescape;\n        },\n        fields: ['extName', 'prop', 'args', 'contentArgs']\n      });\n      var CallExtensionAsync = CallExtension.extend('CallExtensionAsync'); // This is hacky, but this is just a debugging function anyway\n\n      function print(str, indent, inline) {\n        var lines = str.split('\\n');\n        lines.forEach(function (line, i) {\n          if (line && (inline && i > 0 || !inline)) {\n            process.stdout.write(' '.repeat(indent));\n          }\n\n          var nl = i === lines.length - 1 ? '' : '\\n';\n          process.stdout.write(\"\" + line + nl);\n        });\n      } // Print the AST in a nicely formatted tree format for debuggin\n\n\n      function printNodes(node, indent) {\n        indent = indent || 0;\n        print(node.typename + ': ', indent);\n\n        if (node instanceof NodeList) {\n          print('\\n');\n          node.children.forEach(function (n) {\n            printNodes(n, indent + 2);\n          });\n        } else if (node instanceof CallExtension) {\n          print(node.extName + \".\" + node.prop + \"\\n\");\n\n          if (node.args) {\n            printNodes(node.args, indent + 2);\n          }\n\n          if (node.contentArgs) {\n            node.contentArgs.forEach(function (n) {\n              printNodes(n, indent + 2);\n            });\n          }\n        } else {\n          var nodes = [];\n          var props = null;\n          node.iterFields(function (val, fieldName) {\n            if (val instanceof Node) {\n              nodes.push([fieldName, val]);\n            } else {\n              props = props || {};\n              props[fieldName] = val;\n            }\n          });\n\n          if (props) {\n            print(JSON.stringify(props, null, 2) + '\\n', null, true);\n          } else {\n            print('\\n');\n          }\n\n          nodes.forEach(function (_ref) {\n            var fieldName = _ref[0],\n                n = _ref[1];\n            print(\"[\" + fieldName + \"] =>\", indent + 2);\n            printNodes(n, indent + 4);\n          });\n        }\n      }\n\n      module.exports = {\n        Node: Node,\n        Root: Root,\n        NodeList: NodeList,\n        Value: Value,\n        Literal: Literal,\n        Symbol: Symbol,\n        Group: Group,\n        Array: ArrayNode,\n        Pair: Pair,\n        Dict: Dict,\n        Output: Output,\n        Capture: Capture,\n        TemplateData: TemplateData,\n        If: If,\n        IfAsync: IfAsync,\n        InlineIf: InlineIf,\n        For: For,\n        AsyncEach: AsyncEach,\n        AsyncAll: AsyncAll,\n        Macro: Macro,\n        Caller: Caller,\n        Import: Import,\n        FromImport: FromImport,\n        FunCall: FunCall,\n        Filter: Filter,\n        FilterAsync: FilterAsync,\n        KeywordArgs: KeywordArgs,\n        Block: Block,\n        Super: Super,\n        Extends: Extends,\n        Include: Include,\n        Set: Set,\n        Switch: Switch,\n        Case: Case,\n        LookupVal: LookupVal,\n        BinOp: BinOp,\n        In: In,\n        Is: Is,\n        Or: Or,\n        And: And,\n        Not: Not,\n        Add: Add,\n        Concat: Concat,\n        Sub: Sub,\n        Mul: Mul,\n        Div: Div,\n        FloorDiv: FloorDiv,\n        Mod: Mod,\n        Pow: Pow,\n        Neg: Neg,\n        Pos: Pos,\n        Compare: Compare,\n        CompareOperand: CompareOperand,\n        CallExtension: CallExtension,\n        CallExtensionAsync: CallExtensionAsync,\n        printNodes: printNodes\n      };\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports) {\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var parser = __webpack_require__(8);\n\n      var transformer = __webpack_require__(17);\n\n      var nodes = __webpack_require__(3);\n\n      var _require = __webpack_require__(0),\n          TemplateError = _require.TemplateError;\n\n      var _require2 = __webpack_require__(2),\n          Frame = _require2.Frame;\n\n      var _require3 = __webpack_require__(1),\n          Obj = _require3.Obj; // These are all the same for now, but shouldn't be passed straight\n      // through\n\n\n      var compareOps = {\n        '==': '==',\n        '===': '===',\n        '!=': '!=',\n        '!==': '!==',\n        '<': '<',\n        '>': '>',\n        '<=': '<=',\n        '>=': '>='\n      };\n\n      var Compiler = /*#__PURE__*/function (_Obj) {\n        _inheritsLoose(Compiler, _Obj);\n\n        function Compiler() {\n          return _Obj.apply(this, arguments) || this;\n        }\n\n        var _proto = Compiler.prototype;\n\n        _proto.init = function init(templateName, throwOnUndefined) {\n          this.templateName = templateName;\n          this.codebuf = [];\n          this.lastId = 0;\n          this.buffer = null;\n          this.bufferStack = [];\n          this._scopeClosers = '';\n          this.inBlock = false;\n          this.throwOnUndefined = throwOnUndefined;\n        };\n\n        _proto.fail = function fail(msg, lineno, colno) {\n          if (lineno !== undefined) {\n            lineno += 1;\n          }\n\n          if (colno !== undefined) {\n            colno += 1;\n          }\n\n          throw new TemplateError(msg, lineno, colno);\n        };\n\n        _proto._pushBuffer = function _pushBuffer() {\n          var id = this._tmpid();\n\n          this.bufferStack.push(this.buffer);\n          this.buffer = id;\n\n          this._emit(\"var \" + this.buffer + \" = \\\"\\\";\");\n\n          return id;\n        };\n\n        _proto._popBuffer = function _popBuffer() {\n          this.buffer = this.bufferStack.pop();\n        };\n\n        _proto._emit = function _emit(code) {\n          this.codebuf.push(code);\n        };\n\n        _proto._emitLine = function _emitLine(code) {\n          this._emit(code + '\\n');\n        };\n\n        _proto._emitLines = function _emitLines() {\n          var _this = this;\n\n          for (var _len = arguments.length, lines = new Array(_len), _key = 0; _key < _len; _key++) {\n            lines[_key] = arguments[_key];\n          }\n\n          lines.forEach(function (line) {\n            return _this._emitLine(line);\n          });\n        };\n\n        _proto._emitFuncBegin = function _emitFuncBegin(node, name) {\n          this.buffer = 'output';\n          this._scopeClosers = '';\n\n          this._emitLine(\"function \" + name + \"(env, context, frame, runtime, cb) {\");\n\n          this._emitLine(\"var lineno = \" + node.lineno + \";\");\n\n          this._emitLine(\"var colno = \" + node.colno + \";\");\n\n          this._emitLine(\"var \" + this.buffer + \" = \\\"\\\";\");\n\n          this._emitLine('try {');\n        };\n\n        _proto._emitFuncEnd = function _emitFuncEnd(noReturn) {\n          if (!noReturn) {\n            this._emitLine('cb(null, ' + this.buffer + ');');\n          }\n\n          this._closeScopeLevels();\n\n          this._emitLine('} catch (e) {');\n\n          this._emitLine('  cb(runtime.handleError(e, lineno, colno));');\n\n          this._emitLine('}');\n\n          this._emitLine('}');\n\n          this.buffer = null;\n        };\n\n        _proto._addScopeLevel = function _addScopeLevel() {\n          this._scopeClosers += '})';\n        };\n\n        _proto._closeScopeLevels = function _closeScopeLevels() {\n          this._emitLine(this._scopeClosers + ';');\n\n          this._scopeClosers = '';\n        };\n\n        _proto._withScopedSyntax = function _withScopedSyntax(func) {\n          var _scopeClosers = this._scopeClosers;\n          this._scopeClosers = '';\n          func.call(this);\n\n          this._closeScopeLevels();\n\n          this._scopeClosers = _scopeClosers;\n        };\n\n        _proto._makeCallback = function _makeCallback(res) {\n          var err = this._tmpid();\n\n          return 'function(' + err + (res ? ',' + res : '') + ') {\\n' + 'if(' + err + ') { cb(' + err + '); return; }';\n        };\n\n        _proto._tmpid = function _tmpid() {\n          this.lastId++;\n          return 't_' + this.lastId;\n        };\n\n        _proto._templateName = function _templateName() {\n          return this.templateName == null ? 'undefined' : JSON.stringify(this.templateName);\n        };\n\n        _proto._compileChildren = function _compileChildren(node, frame) {\n          var _this2 = this;\n\n          node.children.forEach(function (child) {\n            _this2.compile(child, frame);\n          });\n        };\n\n        _proto._compileAggregate = function _compileAggregate(node, frame, startChar, endChar) {\n          var _this3 = this;\n\n          if (startChar) {\n            this._emit(startChar);\n          }\n\n          node.children.forEach(function (child, i) {\n            if (i > 0) {\n              _this3._emit(',');\n            }\n\n            _this3.compile(child, frame);\n          });\n\n          if (endChar) {\n            this._emit(endChar);\n          }\n        };\n\n        _proto._compileExpression = function _compileExpression(node, frame) {\n          // TODO: I'm not really sure if this type check is worth it or\n          // not.\n          this.assertType(node, nodes.Literal, nodes.Symbol, nodes.Group, nodes.Array, nodes.Dict, nodes.FunCall, nodes.Caller, nodes.Filter, nodes.LookupVal, nodes.Compare, nodes.InlineIf, nodes.In, nodes.Is, nodes.And, nodes.Or, nodes.Not, nodes.Add, nodes.Concat, nodes.Sub, nodes.Mul, nodes.Div, nodes.FloorDiv, nodes.Mod, nodes.Pow, nodes.Neg, nodes.Pos, nodes.Compare, nodes.NodeList);\n          this.compile(node, frame);\n        };\n\n        _proto.assertType = function assertType(node) {\n          for (var _len2 = arguments.length, types = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            types[_key2 - 1] = arguments[_key2];\n          }\n\n          if (!types.some(function (t) {\n            return node instanceof t;\n          })) {\n            this.fail(\"assertType: invalid type: \" + node.typename, node.lineno, node.colno);\n          }\n        };\n\n        _proto.compileCallExtension = function compileCallExtension(node, frame, async) {\n          var _this4 = this;\n\n          var args = node.args;\n          var contentArgs = node.contentArgs;\n          var autoescape = typeof node.autoescape === 'boolean' ? node.autoescape : true;\n\n          if (!async) {\n            this._emit(this.buffer + \" += runtime.suppressValue(\");\n          }\n\n          this._emit(\"env.getExtension(\\\"\" + node.extName + \"\\\")[\\\"\" + node.prop + \"\\\"](\");\n\n          this._emit('context');\n\n          if (args || contentArgs) {\n            this._emit(',');\n          }\n\n          if (args) {\n            if (!(args instanceof nodes.NodeList)) {\n              this.fail('compileCallExtension: arguments must be a NodeList, ' + 'use `parser.parseSignature`');\n            }\n\n            args.children.forEach(function (arg, i) {\n              // Tag arguments are passed normally to the call. Note\n              // that keyword arguments are turned into a single js\n              // object as the last argument, if they exist.\n              _this4._compileExpression(arg, frame);\n\n              if (i !== args.children.length - 1 || contentArgs.length) {\n                _this4._emit(',');\n              }\n            });\n          }\n\n          if (contentArgs.length) {\n            contentArgs.forEach(function (arg, i) {\n              if (i > 0) {\n                _this4._emit(',');\n              }\n\n              if (arg) {\n                _this4._emitLine('function(cb) {');\n\n                _this4._emitLine('if(!cb) { cb = function(err) { if(err) { throw err; }}}');\n\n                var id = _this4._pushBuffer();\n\n                _this4._withScopedSyntax(function () {\n                  _this4.compile(arg, frame);\n\n                  _this4._emitLine(\"cb(null, \" + id + \");\");\n                });\n\n                _this4._popBuffer();\n\n                _this4._emitLine(\"return \" + id + \";\");\n\n                _this4._emitLine('}');\n              } else {\n                _this4._emit('null');\n              }\n            });\n          }\n\n          if (async) {\n            var res = this._tmpid();\n\n            this._emitLine(', ' + this._makeCallback(res));\n\n            this._emitLine(this.buffer + \" += runtime.suppressValue(\" + res + \", \" + autoescape + \" && env.opts.autoescape);\");\n\n            this._addScopeLevel();\n          } else {\n            this._emit(')');\n\n            this._emit(\", \" + autoescape + \" && env.opts.autoescape);\\n\");\n          }\n        };\n\n        _proto.compileCallExtensionAsync = function compileCallExtensionAsync(node, frame) {\n          this.compileCallExtension(node, frame, true);\n        };\n\n        _proto.compileNodeList = function compileNodeList(node, frame) {\n          this._compileChildren(node, frame);\n        };\n\n        _proto.compileLiteral = function compileLiteral(node) {\n          if (typeof node.value === 'string') {\n            var val = node.value.replace(/\\\\/g, '\\\\\\\\');\n            val = val.replace(/\"/g, '\\\\\"');\n            val = val.replace(/\\n/g, '\\\\n');\n            val = val.replace(/\\r/g, '\\\\r');\n            val = val.replace(/\\t/g, '\\\\t');\n            val = val.replace(/\\u2028/g, \"\\\\u2028\");\n\n            this._emit(\"\\\"\" + val + \"\\\"\");\n          } else if (node.value === null) {\n            this._emit('null');\n          } else {\n            this._emit(node.value.toString());\n          }\n        };\n\n        _proto.compileSymbol = function compileSymbol(node, frame) {\n          var name = node.value;\n          var v = frame.lookup(name);\n\n          if (v) {\n            this._emit(v);\n          } else {\n            this._emit('runtime.contextOrFrameLookup(' + 'context, frame, \"' + name + '\")');\n          }\n        };\n\n        _proto.compileGroup = function compileGroup(node, frame) {\n          this._compileAggregate(node, frame, '(', ')');\n        };\n\n        _proto.compileArray = function compileArray(node, frame) {\n          this._compileAggregate(node, frame, '[', ']');\n        };\n\n        _proto.compileDict = function compileDict(node, frame) {\n          this._compileAggregate(node, frame, '{', '}');\n        };\n\n        _proto.compilePair = function compilePair(node, frame) {\n          var key = node.key;\n          var val = node.value;\n\n          if (key instanceof nodes.Symbol) {\n            key = new nodes.Literal(key.lineno, key.colno, key.value);\n          } else if (!(key instanceof nodes.Literal && typeof key.value === 'string')) {\n            this.fail('compilePair: Dict keys must be strings or names', key.lineno, key.colno);\n          }\n\n          this.compile(key, frame);\n\n          this._emit(': ');\n\n          this._compileExpression(val, frame);\n        };\n\n        _proto.compileInlineIf = function compileInlineIf(node, frame) {\n          this._emit('(');\n\n          this.compile(node.cond, frame);\n\n          this._emit('?');\n\n          this.compile(node.body, frame);\n\n          this._emit(':');\n\n          if (node.else_ !== null) {\n            this.compile(node.else_, frame);\n          } else {\n            this._emit('\"\"');\n          }\n\n          this._emit(')');\n        };\n\n        _proto.compileIn = function compileIn(node, frame) {\n          this._emit('runtime.inOperator(');\n\n          this.compile(node.left, frame);\n\n          this._emit(',');\n\n          this.compile(node.right, frame);\n\n          this._emit(')');\n        };\n\n        _proto.compileIs = function compileIs(node, frame) {\n          // first, we need to try to get the name of the test function, if it's a\n          // callable (i.e., has args) and not a symbol.\n          var right = node.right.name ? node.right.name.value // otherwise go with the symbol value\n          : node.right.value;\n\n          this._emit('env.getTest(\"' + right + '\").call(context, ');\n\n          this.compile(node.left, frame); // compile the arguments for the callable if they exist\n\n          if (node.right.args) {\n            this._emit(',');\n\n            this.compile(node.right.args, frame);\n          }\n\n          this._emit(') === true');\n        };\n\n        _proto._binOpEmitter = function _binOpEmitter(node, frame, str) {\n          this.compile(node.left, frame);\n\n          this._emit(str);\n\n          this.compile(node.right, frame);\n        } // ensure concatenation instead of addition\n        // by adding empty string in between\n        ;\n\n        _proto.compileOr = function compileOr(node, frame) {\n          return this._binOpEmitter(node, frame, ' || ');\n        };\n\n        _proto.compileAnd = function compileAnd(node, frame) {\n          return this._binOpEmitter(node, frame, ' && ');\n        };\n\n        _proto.compileAdd = function compileAdd(node, frame) {\n          return this._binOpEmitter(node, frame, ' + ');\n        };\n\n        _proto.compileConcat = function compileConcat(node, frame) {\n          return this._binOpEmitter(node, frame, ' + \"\" + ');\n        };\n\n        _proto.compileSub = function compileSub(node, frame) {\n          return this._binOpEmitter(node, frame, ' - ');\n        };\n\n        _proto.compileMul = function compileMul(node, frame) {\n          return this._binOpEmitter(node, frame, ' * ');\n        };\n\n        _proto.compileDiv = function compileDiv(node, frame) {\n          return this._binOpEmitter(node, frame, ' / ');\n        };\n\n        _proto.compileMod = function compileMod(node, frame) {\n          return this._binOpEmitter(node, frame, ' % ');\n        };\n\n        _proto.compileNot = function compileNot(node, frame) {\n          this._emit('!');\n\n          this.compile(node.target, frame);\n        };\n\n        _proto.compileFloorDiv = function compileFloorDiv(node, frame) {\n          this._emit('Math.floor(');\n\n          this.compile(node.left, frame);\n\n          this._emit(' / ');\n\n          this.compile(node.right, frame);\n\n          this._emit(')');\n        };\n\n        _proto.compilePow = function compilePow(node, frame) {\n          this._emit('Math.pow(');\n\n          this.compile(node.left, frame);\n\n          this._emit(', ');\n\n          this.compile(node.right, frame);\n\n          this._emit(')');\n        };\n\n        _proto.compileNeg = function compileNeg(node, frame) {\n          this._emit('-');\n\n          this.compile(node.target, frame);\n        };\n\n        _proto.compilePos = function compilePos(node, frame) {\n          this._emit('+');\n\n          this.compile(node.target, frame);\n        };\n\n        _proto.compileCompare = function compileCompare(node, frame) {\n          var _this5 = this;\n\n          this.compile(node.expr, frame);\n          node.ops.forEach(function (op) {\n            _this5._emit(\" \" + compareOps[op.type] + \" \");\n\n            _this5.compile(op.expr, frame);\n          });\n        };\n\n        _proto.compileLookupVal = function compileLookupVal(node, frame) {\n          this._emit('runtime.memberLookup((');\n\n          this._compileExpression(node.target, frame);\n\n          this._emit('),');\n\n          this._compileExpression(node.val, frame);\n\n          this._emit(')');\n        };\n\n        _proto._getNodeName = function _getNodeName(node) {\n          switch (node.typename) {\n            case 'Symbol':\n              return node.value;\n\n            case 'FunCall':\n              return 'the return value of (' + this._getNodeName(node.name) + ')';\n\n            case 'LookupVal':\n              return this._getNodeName(node.target) + '[\"' + this._getNodeName(node.val) + '\"]';\n\n            case 'Literal':\n              return node.value.toString();\n\n            default:\n              return '--expression--';\n          }\n        };\n\n        _proto.compileFunCall = function compileFunCall(node, frame) {\n          // Keep track of line/col info at runtime by settings\n          // variables within an expression. An expression in javascript\n          // like (x, y, z) returns the last value, and x and y can be\n          // anything\n          this._emit('(lineno = ' + node.lineno + ', colno = ' + node.colno + ', ');\n\n          this._emit('runtime.callWrap('); // Compile it as normal.\n\n\n          this._compileExpression(node.name, frame); // Output the name of what we're calling so we can get friendly errors\n          // if the lookup fails.\n\n\n          this._emit(', \"' + this._getNodeName(node.name).replace(/\"/g, '\\\\\"') + '\", context, ');\n\n          this._compileAggregate(node.args, frame, '[', '])');\n\n          this._emit(')');\n        };\n\n        _proto.compileFilter = function compileFilter(node, frame) {\n          var name = node.name;\n          this.assertType(name, nodes.Symbol);\n\n          this._emit('env.getFilter(\"' + name.value + '\").call(context, ');\n\n          this._compileAggregate(node.args, frame);\n\n          this._emit(')');\n        };\n\n        _proto.compileFilterAsync = function compileFilterAsync(node, frame) {\n          var name = node.name;\n          var symbol = node.symbol.value;\n          this.assertType(name, nodes.Symbol);\n          frame.set(symbol, symbol);\n\n          this._emit('env.getFilter(\"' + name.value + '\").call(context, ');\n\n          this._compileAggregate(node.args, frame);\n\n          this._emitLine(', ' + this._makeCallback(symbol));\n\n          this._addScopeLevel();\n        };\n\n        _proto.compileKeywordArgs = function compileKeywordArgs(node, frame) {\n          this._emit('runtime.makeKeywordArgs(');\n\n          this.compileDict(node, frame);\n\n          this._emit(')');\n        };\n\n        _proto.compileSet = function compileSet(node, frame) {\n          var _this6 = this;\n\n          var ids = []; // Lookup the variable names for each identifier and create\n          // new ones if necessary\n\n          node.targets.forEach(function (target) {\n            var name = target.value;\n            var id = frame.lookup(name);\n\n            if (id === null || id === undefined) {\n              id = _this6._tmpid(); // Note: This relies on js allowing scope across\n              // blocks, in case this is created inside an `if`\n\n              _this6._emitLine('var ' + id + ';');\n            }\n\n            ids.push(id);\n          });\n\n          if (node.value) {\n            this._emit(ids.join(' = ') + ' = ');\n\n            this._compileExpression(node.value, frame);\n\n            this._emitLine(';');\n          } else {\n            this._emit(ids.join(' = ') + ' = ');\n\n            this.compile(node.body, frame);\n\n            this._emitLine(';');\n          }\n\n          node.targets.forEach(function (target, i) {\n            var id = ids[i];\n            var name = target.value; // We are running this for every var, but it's very\n            // uncommon to assign to multiple vars anyway\n\n            _this6._emitLine(\"frame.set(\\\"\" + name + \"\\\", \" + id + \", true);\");\n\n            _this6._emitLine('if(frame.topLevel) {');\n\n            _this6._emitLine(\"context.setVariable(\\\"\" + name + \"\\\", \" + id + \");\");\n\n            _this6._emitLine('}');\n\n            if (name.charAt(0) !== '_') {\n              _this6._emitLine('if(frame.topLevel) {');\n\n              _this6._emitLine(\"context.addExport(\\\"\" + name + \"\\\", \" + id + \");\");\n\n              _this6._emitLine('}');\n            }\n          });\n        };\n\n        _proto.compileSwitch = function compileSwitch(node, frame) {\n          var _this7 = this;\n\n          this._emit('switch (');\n\n          this.compile(node.expr, frame);\n\n          this._emit(') {');\n\n          node.cases.forEach(function (c, i) {\n            _this7._emit('case ');\n\n            _this7.compile(c.cond, frame);\n\n            _this7._emit(': ');\n\n            _this7.compile(c.body, frame); // preserve fall-throughs\n\n\n            if (c.body.children.length) {\n              _this7._emitLine('break;');\n            }\n          });\n\n          if (node.default) {\n            this._emit('default:');\n\n            this.compile(node.default, frame);\n          }\n\n          this._emit('}');\n        };\n\n        _proto.compileIf = function compileIf(node, frame, async) {\n          var _this8 = this;\n\n          this._emit('if(');\n\n          this._compileExpression(node.cond, frame);\n\n          this._emitLine(') {');\n\n          this._withScopedSyntax(function () {\n            _this8.compile(node.body, frame);\n\n            if (async) {\n              _this8._emit('cb()');\n            }\n          });\n\n          if (node.else_) {\n            this._emitLine('}\\nelse {');\n\n            this._withScopedSyntax(function () {\n              _this8.compile(node.else_, frame);\n\n              if (async) {\n                _this8._emit('cb()');\n              }\n            });\n          } else if (async) {\n            this._emitLine('}\\nelse {');\n\n            this._emit('cb()');\n          }\n\n          this._emitLine('}');\n        };\n\n        _proto.compileIfAsync = function compileIfAsync(node, frame) {\n          this._emit('(function(cb) {');\n\n          this.compileIf(node, frame, true);\n\n          this._emit('})(' + this._makeCallback());\n\n          this._addScopeLevel();\n        };\n\n        _proto._emitLoopBindings = function _emitLoopBindings(node, arr, i, len) {\n          var _this9 = this;\n\n          var bindings = [{\n            name: 'index',\n            val: i + \" + 1\"\n          }, {\n            name: 'index0',\n            val: i\n          }, {\n            name: 'revindex',\n            val: len + \" - \" + i\n          }, {\n            name: 'revindex0',\n            val: len + \" - \" + i + \" - 1\"\n          }, {\n            name: 'first',\n            val: i + \" === 0\"\n          }, {\n            name: 'last',\n            val: i + \" === \" + len + \" - 1\"\n          }, {\n            name: 'length',\n            val: len\n          }];\n          bindings.forEach(function (b) {\n            _this9._emitLine(\"frame.set(\\\"loop.\" + b.name + \"\\\", \" + b.val + \");\");\n          });\n        };\n\n        _proto.compileFor = function compileFor(node, frame) {\n          var _this10 = this; // Some of this code is ugly, but it keeps the generated code\n          // as fast as possible. ForAsync also shares some of this, but\n          // not much.\n\n\n          var i = this._tmpid();\n\n          var len = this._tmpid();\n\n          var arr = this._tmpid();\n\n          frame = frame.push();\n\n          this._emitLine('frame = frame.push();');\n\n          this._emit(\"var \" + arr + \" = \");\n\n          this._compileExpression(node.arr, frame);\n\n          this._emitLine(';');\n\n          this._emit(\"if(\" + arr + \") {\");\n\n          this._emitLine(arr + ' = runtime.fromIterator(' + arr + ');'); // If multiple names are passed, we need to bind them\n          // appropriately\n\n\n          if (node.name instanceof nodes.Array) {\n            this._emitLine(\"var \" + i + \";\"); // The object could be an arroy or object. Note that the\n            // body of the loop is duplicated for each condition, but\n            // we are optimizing for speed over size.\n\n\n            this._emitLine(\"if(runtime.isArray(\" + arr + \")) {\");\n\n            this._emitLine(\"var \" + len + \" = \" + arr + \".length;\");\n\n            this._emitLine(\"for(\" + i + \"=0; \" + i + \" < \" + arr + \".length; \" + i + \"++) {\"); // Bind each declared var\n\n\n            node.name.children.forEach(function (child, u) {\n              var tid = _this10._tmpid();\n\n              _this10._emitLine(\"var \" + tid + \" = \" + arr + \"[\" + i + \"][\" + u + \"];\");\n\n              _this10._emitLine(\"frame.set(\\\"\" + child + \"\\\", \" + arr + \"[\" + i + \"][\" + u + \"]);\");\n\n              frame.set(node.name.children[u].value, tid);\n            });\n\n            this._emitLoopBindings(node, arr, i, len);\n\n            this._withScopedSyntax(function () {\n              _this10.compile(node.body, frame);\n            });\n\n            this._emitLine('}');\n\n            this._emitLine('} else {'); // Iterate over the key/values of an object\n\n\n            var _node$name$children = node.name.children,\n                key = _node$name$children[0],\n                val = _node$name$children[1];\n\n            var k = this._tmpid();\n\n            var v = this._tmpid();\n\n            frame.set(key.value, k);\n            frame.set(val.value, v);\n\n            this._emitLine(i + \" = -1;\");\n\n            this._emitLine(\"var \" + len + \" = runtime.keys(\" + arr + \").length;\");\n\n            this._emitLine(\"for(var \" + k + \" in \" + arr + \") {\");\n\n            this._emitLine(i + \"++;\");\n\n            this._emitLine(\"var \" + v + \" = \" + arr + \"[\" + k + \"];\");\n\n            this._emitLine(\"frame.set(\\\"\" + key.value + \"\\\", \" + k + \");\");\n\n            this._emitLine(\"frame.set(\\\"\" + val.value + \"\\\", \" + v + \");\");\n\n            this._emitLoopBindings(node, arr, i, len);\n\n            this._withScopedSyntax(function () {\n              _this10.compile(node.body, frame);\n            });\n\n            this._emitLine('}');\n\n            this._emitLine('}');\n          } else {\n            // Generate a typical array iteration\n            var _v = this._tmpid();\n\n            frame.set(node.name.value, _v);\n\n            this._emitLine(\"var \" + len + \" = \" + arr + \".length;\");\n\n            this._emitLine(\"for(var \" + i + \"=0; \" + i + \" < \" + arr + \".length; \" + i + \"++) {\");\n\n            this._emitLine(\"var \" + _v + \" = \" + arr + \"[\" + i + \"];\");\n\n            this._emitLine(\"frame.set(\\\"\" + node.name.value + \"\\\", \" + _v + \");\");\n\n            this._emitLoopBindings(node, arr, i, len);\n\n            this._withScopedSyntax(function () {\n              _this10.compile(node.body, frame);\n            });\n\n            this._emitLine('}');\n          }\n\n          this._emitLine('}');\n\n          if (node.else_) {\n            this._emitLine('if (!' + len + ') {');\n\n            this.compile(node.else_, frame);\n\n            this._emitLine('}');\n          }\n\n          this._emitLine('frame = frame.pop();');\n        };\n\n        _proto._compileAsyncLoop = function _compileAsyncLoop(node, frame, parallel) {\n          var _this11 = this; // This shares some code with the For tag, but not enough to\n          // worry about. This iterates across an object asynchronously,\n          // but not in parallel.\n\n\n          var i = this._tmpid();\n\n          var len = this._tmpid();\n\n          var arr = this._tmpid();\n\n          var asyncMethod = parallel ? 'asyncAll' : 'asyncEach';\n          frame = frame.push();\n\n          this._emitLine('frame = frame.push();');\n\n          this._emit('var ' + arr + ' = runtime.fromIterator(');\n\n          this._compileExpression(node.arr, frame);\n\n          this._emitLine(');');\n\n          if (node.name instanceof nodes.Array) {\n            var arrayLen = node.name.children.length;\n\n            this._emit(\"runtime.\" + asyncMethod + \"(\" + arr + \", \" + arrayLen + \", function(\");\n\n            node.name.children.forEach(function (name) {\n              _this11._emit(name.value + \",\");\n            });\n\n            this._emit(i + ',' + len + ',next) {');\n\n            node.name.children.forEach(function (name) {\n              var id = name.value;\n              frame.set(id, id);\n\n              _this11._emitLine(\"frame.set(\\\"\" + id + \"\\\", \" + id + \");\");\n            });\n          } else {\n            var id = node.name.value;\n\n            this._emitLine(\"runtime.\" + asyncMethod + \"(\" + arr + \", 1, function(\" + id + \", \" + i + \", \" + len + \",next) {\");\n\n            this._emitLine('frame.set(\"' + id + '\", ' + id + ');');\n\n            frame.set(id, id);\n          }\n\n          this._emitLoopBindings(node, arr, i, len);\n\n          this._withScopedSyntax(function () {\n            var buf;\n\n            if (parallel) {\n              buf = _this11._pushBuffer();\n            }\n\n            _this11.compile(node.body, frame);\n\n            _this11._emitLine('next(' + i + (buf ? ',' + buf : '') + ');');\n\n            if (parallel) {\n              _this11._popBuffer();\n            }\n          });\n\n          var output = this._tmpid();\n\n          this._emitLine('}, ' + this._makeCallback(output));\n\n          this._addScopeLevel();\n\n          if (parallel) {\n            this._emitLine(this.buffer + ' += ' + output + ';');\n          }\n\n          if (node.else_) {\n            this._emitLine('if (!' + arr + '.length) {');\n\n            this.compile(node.else_, frame);\n\n            this._emitLine('}');\n          }\n\n          this._emitLine('frame = frame.pop();');\n        };\n\n        _proto.compileAsyncEach = function compileAsyncEach(node, frame) {\n          this._compileAsyncLoop(node, frame);\n        };\n\n        _proto.compileAsyncAll = function compileAsyncAll(node, frame) {\n          this._compileAsyncLoop(node, frame, true);\n        };\n\n        _proto._compileMacro = function _compileMacro(node, frame) {\n          var _this12 = this;\n\n          var args = [];\n          var kwargs = null;\n\n          var funcId = 'macro_' + this._tmpid();\n\n          var keepFrame = frame !== undefined; // Type check the definition of the args\n\n          node.args.children.forEach(function (arg, i) {\n            if (i === node.args.children.length - 1 && arg instanceof nodes.Dict) {\n              kwargs = arg;\n            } else {\n              _this12.assertType(arg, nodes.Symbol);\n\n              args.push(arg);\n            }\n          });\n          var realNames = [].concat(args.map(function (n) {\n            return \"l_\" + n.value;\n          }), ['kwargs']); // Quoted argument names\n\n          var argNames = args.map(function (n) {\n            return \"\\\"\" + n.value + \"\\\"\";\n          });\n          var kwargNames = (kwargs && kwargs.children || []).map(function (n) {\n            return \"\\\"\" + n.key.value + \"\\\"\";\n          }); // We pass a function to makeMacro which destructures the\n          // arguments so support setting positional args with keywords\n          // args and passing keyword args as positional args\n          // (essentially default values). See runtime.js.\n\n          var currFrame;\n\n          if (keepFrame) {\n            currFrame = frame.push(true);\n          } else {\n            currFrame = new Frame();\n          }\n\n          this._emitLines(\"var \" + funcId + \" = runtime.makeMacro(\", \"[\" + argNames.join(', ') + \"], \", \"[\" + kwargNames.join(', ') + \"], \", \"function (\" + realNames.join(', ') + \") {\", 'var callerFrame = frame;', 'frame = ' + (keepFrame ? 'frame.push(true);' : 'new runtime.Frame();'), 'kwargs = kwargs || {};', 'if (Object.prototype.hasOwnProperty.call(kwargs, \"caller\")) {', 'frame.set(\"caller\", kwargs.caller); }'); // Expose the arguments to the template. Don't need to use\n          // random names because the function\n          // will create a new run-time scope for us\n\n\n          args.forEach(function (arg) {\n            _this12._emitLine(\"frame.set(\\\"\" + arg.value + \"\\\", l_\" + arg.value + \");\");\n\n            currFrame.set(arg.value, \"l_\" + arg.value);\n          }); // Expose the keyword arguments\n\n          if (kwargs) {\n            kwargs.children.forEach(function (pair) {\n              var name = pair.key.value;\n\n              _this12._emit(\"frame.set(\\\"\" + name + \"\\\", \");\n\n              _this12._emit(\"Object.prototype.hasOwnProperty.call(kwargs, \\\"\" + name + \"\\\")\");\n\n              _this12._emit(\" ? kwargs[\\\"\" + name + \"\\\"] : \");\n\n              _this12._compileExpression(pair.value, currFrame);\n\n              _this12._emit(');');\n            });\n          }\n\n          var bufferId = this._pushBuffer();\n\n          this._withScopedSyntax(function () {\n            _this12.compile(node.body, currFrame);\n          });\n\n          this._emitLine('frame = ' + (keepFrame ? 'frame.pop();' : 'callerFrame;'));\n\n          this._emitLine(\"return new runtime.SafeString(\" + bufferId + \");\");\n\n          this._emitLine('});');\n\n          this._popBuffer();\n\n          return funcId;\n        };\n\n        _proto.compileMacro = function compileMacro(node, frame) {\n          var funcId = this._compileMacro(node); // Expose the macro to the templates\n\n\n          var name = node.name.value;\n          frame.set(name, funcId);\n\n          if (frame.parent) {\n            this._emitLine(\"frame.set(\\\"\" + name + \"\\\", \" + funcId + \");\");\n          } else {\n            if (node.name.value.charAt(0) !== '_') {\n              this._emitLine(\"context.addExport(\\\"\" + name + \"\\\");\");\n            }\n\n            this._emitLine(\"context.setVariable(\\\"\" + name + \"\\\", \" + funcId + \");\");\n          }\n        };\n\n        _proto.compileCaller = function compileCaller(node, frame) {\n          // basically an anonymous \"macro expression\"\n          this._emit('(function (){');\n\n          var funcId = this._compileMacro(node, frame);\n\n          this._emit(\"return \" + funcId + \";})()\");\n        };\n\n        _proto._compileGetTemplate = function _compileGetTemplate(node, frame, eagerCompile, ignoreMissing) {\n          var parentTemplateId = this._tmpid();\n\n          var parentName = this._templateName();\n\n          var cb = this._makeCallback(parentTemplateId);\n\n          var eagerCompileArg = eagerCompile ? 'true' : 'false';\n          var ignoreMissingArg = ignoreMissing ? 'true' : 'false';\n\n          this._emit('env.getTemplate(');\n\n          this._compileExpression(node.template, frame);\n\n          this._emitLine(\", \" + eagerCompileArg + \", \" + parentName + \", \" + ignoreMissingArg + \", \" + cb);\n\n          return parentTemplateId;\n        };\n\n        _proto.compileImport = function compileImport(node, frame) {\n          var target = node.target.value;\n\n          var id = this._compileGetTemplate(node, frame, false, false);\n\n          this._addScopeLevel();\n\n          this._emitLine(id + '.getExported(' + (node.withContext ? 'context.getVariables(), frame, ' : '') + this._makeCallback(id));\n\n          this._addScopeLevel();\n\n          frame.set(target, id);\n\n          if (frame.parent) {\n            this._emitLine(\"frame.set(\\\"\" + target + \"\\\", \" + id + \");\");\n          } else {\n            this._emitLine(\"context.setVariable(\\\"\" + target + \"\\\", \" + id + \");\");\n          }\n        };\n\n        _proto.compileFromImport = function compileFromImport(node, frame) {\n          var _this13 = this;\n\n          var importedId = this._compileGetTemplate(node, frame, false, false);\n\n          this._addScopeLevel();\n\n          this._emitLine(importedId + '.getExported(' + (node.withContext ? 'context.getVariables(), frame, ' : '') + this._makeCallback(importedId));\n\n          this._addScopeLevel();\n\n          node.names.children.forEach(function (nameNode) {\n            var name;\n            var alias;\n\n            var id = _this13._tmpid();\n\n            if (nameNode instanceof nodes.Pair) {\n              name = nameNode.key.value;\n              alias = nameNode.value.value;\n            } else {\n              name = nameNode.value;\n              alias = name;\n            }\n\n            _this13._emitLine(\"if(Object.prototype.hasOwnProperty.call(\" + importedId + \", \\\"\" + name + \"\\\")) {\");\n\n            _this13._emitLine(\"var \" + id + \" = \" + importedId + \".\" + name + \";\");\n\n            _this13._emitLine('} else {');\n\n            _this13._emitLine(\"cb(new Error(\\\"cannot import '\" + name + \"'\\\")); return;\");\n\n            _this13._emitLine('}');\n\n            frame.set(alias, id);\n\n            if (frame.parent) {\n              _this13._emitLine(\"frame.set(\\\"\" + alias + \"\\\", \" + id + \");\");\n            } else {\n              _this13._emitLine(\"context.setVariable(\\\"\" + alias + \"\\\", \" + id + \");\");\n            }\n          });\n        };\n\n        _proto.compileBlock = function compileBlock(node) {\n          var id = this._tmpid(); // If we are executing outside a block (creating a top-level\n          // block), we really don't want to execute its code because it\n          // will execute twice: once when the child template runs and\n          // again when the parent template runs. Note that blocks\n          // within blocks will *always* execute immediately *and*\n          // wherever else they are invoked (like used in a parent\n          // template). This may have behavioral differences from jinja\n          // because blocks can have side effects, but it seems like a\n          // waste of performance to always execute huge top-level\n          // blocks twice\n\n\n          if (!this.inBlock) {\n            this._emit('(parentTemplate ? function(e, c, f, r, cb) { cb(\"\"); } : ');\n          }\n\n          this._emit(\"context.getBlock(\\\"\" + node.name.value + \"\\\")\");\n\n          if (!this.inBlock) {\n            this._emit(')');\n          }\n\n          this._emitLine('(env, context, frame, runtime, ' + this._makeCallback(id));\n\n          this._emitLine(this.buffer + \" += \" + id + \";\");\n\n          this._addScopeLevel();\n        };\n\n        _proto.compileSuper = function compileSuper(node, frame) {\n          var name = node.blockName.value;\n          var id = node.symbol.value;\n\n          var cb = this._makeCallback(id);\n\n          this._emitLine(\"context.getSuper(env, \\\"\" + name + \"\\\", b_\" + name + \", frame, runtime, \" + cb);\n\n          this._emitLine(id + \" = runtime.markSafe(\" + id + \");\");\n\n          this._addScopeLevel();\n\n          frame.set(id, id);\n        };\n\n        _proto.compileExtends = function compileExtends(node, frame) {\n          var k = this._tmpid();\n\n          var parentTemplateId = this._compileGetTemplate(node, frame, true, false); // extends is a dynamic tag and can occur within a block like\n          // `if`, so if this happens we need to capture the parent\n          // template in the top-level scope\n\n\n          this._emitLine(\"parentTemplate = \" + parentTemplateId);\n\n          this._emitLine(\"for(var \" + k + \" in parentTemplate.blocks) {\");\n\n          this._emitLine(\"context.addBlock(\" + k + \", parentTemplate.blocks[\" + k + \"]);\");\n\n          this._emitLine('}');\n\n          this._addScopeLevel();\n        };\n\n        _proto.compileInclude = function compileInclude(node, frame) {\n          this._emitLine('var tasks = [];');\n\n          this._emitLine('tasks.push(');\n\n          this._emitLine('function(callback) {');\n\n          var id = this._compileGetTemplate(node, frame, false, node.ignoreMissing);\n\n          this._emitLine(\"callback(null,\" + id + \");});\");\n\n          this._emitLine('});');\n\n          var id2 = this._tmpid();\n\n          this._emitLine('tasks.push(');\n\n          this._emitLine('function(template, callback){');\n\n          this._emitLine('template.render(context.getVariables(), frame, ' + this._makeCallback(id2));\n\n          this._emitLine('callback(null,' + id2 + ');});');\n\n          this._emitLine('});');\n\n          this._emitLine('tasks.push(');\n\n          this._emitLine('function(result, callback){');\n\n          this._emitLine(this.buffer + \" += result;\");\n\n          this._emitLine('callback(null);');\n\n          this._emitLine('});');\n\n          this._emitLine('env.waterfall(tasks, function(){');\n\n          this._addScopeLevel();\n        };\n\n        _proto.compileTemplateData = function compileTemplateData(node, frame) {\n          this.compileLiteral(node, frame);\n        };\n\n        _proto.compileCapture = function compileCapture(node, frame) {\n          var _this14 = this; // we need to temporarily override the current buffer id as 'output'\n          // so the set block writes to the capture output instead of the buffer\n\n\n          var buffer = this.buffer;\n          this.buffer = 'output';\n\n          this._emitLine('(function() {');\n\n          this._emitLine('var output = \"\";');\n\n          this._withScopedSyntax(function () {\n            _this14.compile(node.body, frame);\n          });\n\n          this._emitLine('return output;');\n\n          this._emitLine('})()'); // and of course, revert back to the old buffer id\n\n\n          this.buffer = buffer;\n        };\n\n        _proto.compileOutput = function compileOutput(node, frame) {\n          var _this15 = this;\n\n          var children = node.children;\n          children.forEach(function (child) {\n            // TemplateData is a special case because it is never\n            // autoescaped, so simply output it for optimization\n            if (child instanceof nodes.TemplateData) {\n              if (child.value) {\n                _this15._emit(_this15.buffer + \" += \");\n\n                _this15.compileLiteral(child, frame);\n\n                _this15._emitLine(';');\n              }\n            } else {\n              _this15._emit(_this15.buffer + \" += runtime.suppressValue(\");\n\n              if (_this15.throwOnUndefined) {\n                _this15._emit('runtime.ensureDefined(');\n              }\n\n              _this15.compile(child, frame);\n\n              if (_this15.throwOnUndefined) {\n                _this15._emit(\",\" + node.lineno + \",\" + node.colno + \")\");\n              }\n\n              _this15._emit(', env.opts.autoescape);\\n');\n            }\n          });\n        };\n\n        _proto.compileRoot = function compileRoot(node, frame) {\n          var _this16 = this;\n\n          if (frame) {\n            this.fail('compileRoot: root node can\\'t have frame');\n          }\n\n          frame = new Frame();\n\n          this._emitFuncBegin(node, 'root');\n\n          this._emitLine('var parentTemplate = null;');\n\n          this._compileChildren(node, frame);\n\n          this._emitLine('if(parentTemplate) {');\n\n          this._emitLine('parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);');\n\n          this._emitLine('} else {');\n\n          this._emitLine(\"cb(null, \" + this.buffer + \");\");\n\n          this._emitLine('}');\n\n          this._emitFuncEnd(true);\n\n          this.inBlock = true;\n          var blockNames = [];\n          var blocks = node.findAll(nodes.Block);\n          blocks.forEach(function (block, i) {\n            var name = block.name.value;\n\n            if (blockNames.indexOf(name) !== -1) {\n              throw new Error(\"Block \\\"\" + name + \"\\\" defined more than once.\");\n            }\n\n            blockNames.push(name);\n\n            _this16._emitFuncBegin(block, \"b_\" + name);\n\n            var tmpFrame = new Frame();\n\n            _this16._emitLine('var frame = frame.push(true);');\n\n            _this16.compile(block.body, tmpFrame);\n\n            _this16._emitFuncEnd();\n          });\n\n          this._emitLine('return {');\n\n          blocks.forEach(function (block, i) {\n            var blockName = \"b_\" + block.name.value;\n\n            _this16._emitLine(blockName + \": \" + blockName + \",\");\n          });\n\n          this._emitLine('root: root\\n};');\n        };\n\n        _proto.compile = function compile(node, frame) {\n          var _compile = this['compile' + node.typename];\n\n          if (_compile) {\n            _compile.call(this, node, frame);\n          } else {\n            this.fail(\"compile: Cannot compile node: \" + node.typename, node.lineno, node.colno);\n          }\n        };\n\n        _proto.getCode = function getCode() {\n          return this.codebuf.join('');\n        };\n\n        return Compiler;\n      }(Obj);\n\n      module.exports = {\n        compile: function compile(src, asyncFilters, extensions, name, opts) {\n          if (opts === void 0) {\n            opts = {};\n          }\n\n          var c = new Compiler(name, opts.throwOnUndefined); // Run the extension preprocessors against the source.\n\n          var preprocessors = (extensions || []).map(function (ext) {\n            return ext.preprocess;\n          }).filter(function (f) {\n            return !!f;\n          });\n          var processedSrc = preprocessors.reduce(function (s, processor) {\n            return processor(s);\n          }, src);\n          c.compile(transformer.transform(parser.parse(processedSrc, extensions, opts), asyncFilters, name));\n          return c.getCode();\n        },\n        Compiler: Compiler\n      };\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var path = __webpack_require__(4);\n\n      var _require = __webpack_require__(1),\n          EmitterObj = _require.EmitterObj;\n\n      module.exports = /*#__PURE__*/function (_EmitterObj) {\n        _inheritsLoose(Loader, _EmitterObj);\n\n        function Loader() {\n          return _EmitterObj.apply(this, arguments) || this;\n        }\n\n        var _proto = Loader.prototype;\n\n        _proto.resolve = function resolve(from, to) {\n          return path.resolve(path.dirname(from), to);\n        };\n\n        _proto.isRelative = function isRelative(filename) {\n          return filename.indexOf('./') === 0 || filename.indexOf('../') === 0;\n        };\n\n        return Loader;\n      }(EmitterObj);\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var asap = __webpack_require__(12);\n\n      var _waterfall = __webpack_require__(15);\n\n      var lib = __webpack_require__(0);\n\n      var compiler = __webpack_require__(5);\n\n      var filters = __webpack_require__(18);\n\n      var _require = __webpack_require__(10),\n          FileSystemLoader = _require.FileSystemLoader,\n          WebLoader = _require.WebLoader,\n          PrecompiledLoader = _require.PrecompiledLoader;\n\n      var tests = __webpack_require__(20);\n\n      var globals = __webpack_require__(21);\n\n      var _require2 = __webpack_require__(1),\n          Obj = _require2.Obj,\n          EmitterObj = _require2.EmitterObj;\n\n      var globalRuntime = __webpack_require__(2);\n\n      var handleError = globalRuntime.handleError,\n          Frame = globalRuntime.Frame;\n\n      var expressApp = __webpack_require__(22); // If the user is using the async API, *always* call it\n      // asynchronously even if the template was synchronous.\n\n\n      function callbackAsap(cb, err, res) {\n        asap(function () {\n          cb(err, res);\n        });\n      }\n      /**\n       * A no-op template, for use with {% include ignore missing %}\n       */\n\n\n      var noopTmplSrc = {\n        type: 'code',\n        obj: {\n          root: function root(env, context, frame, runtime, cb) {\n            try {\n              cb(null, '');\n            } catch (e) {\n              cb(handleError(e, null, null));\n            }\n          }\n        }\n      };\n\n      var Environment = /*#__PURE__*/function (_EmitterObj) {\n        _inheritsLoose(Environment, _EmitterObj);\n\n        function Environment() {\n          return _EmitterObj.apply(this, arguments) || this;\n        }\n\n        var _proto = Environment.prototype;\n\n        _proto.init = function init(loaders, opts) {\n          var _this = this; // The dev flag determines the trace that'll be shown on errors.\n          // If set to true, returns the full trace from the error point,\n          // otherwise will return trace starting from Template.render\n          // (the full trace from within nunjucks may confuse developers using\n          //  the library)\n          // defaults to false\n\n\n          opts = this.opts = opts || {};\n          this.opts.dev = !!opts.dev; // The autoescape flag sets global autoescaping. If true,\n          // every string variable will be escaped by default.\n          // If false, strings can be manually escaped using the `escape` filter.\n          // defaults to true\n\n          this.opts.autoescape = opts.autoescape != null ? opts.autoescape : true; // If true, this will make the system throw errors if trying\n          // to output a null or undefined value\n\n          this.opts.throwOnUndefined = !!opts.throwOnUndefined;\n          this.opts.trimBlocks = !!opts.trimBlocks;\n          this.opts.lstripBlocks = !!opts.lstripBlocks;\n          this.loaders = [];\n\n          if (!loaders) {\n            // The filesystem loader is only available server-side\n            if (FileSystemLoader) {\n              this.loaders = [new FileSystemLoader('views')];\n            } else if (WebLoader) {\n              this.loaders = [new WebLoader('/views')];\n            }\n          } else {\n            this.loaders = lib.isArray(loaders) ? loaders : [loaders];\n          } // It's easy to use precompiled templates: just include them\n          // before you configure nunjucks and this will automatically\n          // pick it up and use it\n\n\n          if (typeof window !== 'undefined' && window.nunjucksPrecompiled) {\n            this.loaders.unshift(new PrecompiledLoader(window.nunjucksPrecompiled));\n          }\n\n          this._initLoaders();\n\n          this.globals = globals();\n          this.filters = {};\n          this.tests = {};\n          this.asyncFilters = [];\n          this.extensions = {};\n          this.extensionsList = [];\n\n          lib._entries(filters).forEach(function (_ref) {\n            var name = _ref[0],\n                filter = _ref[1];\n            return _this.addFilter(name, filter);\n          });\n\n          lib._entries(tests).forEach(function (_ref2) {\n            var name = _ref2[0],\n                test = _ref2[1];\n            return _this.addTest(name, test);\n          });\n        };\n\n        _proto._initLoaders = function _initLoaders() {\n          var _this2 = this;\n\n          this.loaders.forEach(function (loader) {\n            // Caching and cache busting\n            loader.cache = {};\n\n            if (typeof loader.on === 'function') {\n              loader.on('update', function (name, fullname) {\n                loader.cache[name] = null;\n\n                _this2.emit('update', name, fullname, loader);\n              });\n              loader.on('load', function (name, source) {\n                _this2.emit('load', name, source, loader);\n              });\n            }\n          });\n        };\n\n        _proto.invalidateCache = function invalidateCache() {\n          this.loaders.forEach(function (loader) {\n            loader.cache = {};\n          });\n        };\n\n        _proto.addExtension = function addExtension(name, extension) {\n          extension.__name = name;\n          this.extensions[name] = extension;\n          this.extensionsList.push(extension);\n          return this;\n        };\n\n        _proto.removeExtension = function removeExtension(name) {\n          var extension = this.getExtension(name);\n\n          if (!extension) {\n            return;\n          }\n\n          this.extensionsList = lib.without(this.extensionsList, extension);\n          delete this.extensions[name];\n        };\n\n        _proto.getExtension = function getExtension(name) {\n          return this.extensions[name];\n        };\n\n        _proto.hasExtension = function hasExtension(name) {\n          return !!this.extensions[name];\n        };\n\n        _proto.addGlobal = function addGlobal(name, value) {\n          this.globals[name] = value;\n          return this;\n        };\n\n        _proto.getGlobal = function getGlobal(name) {\n          if (typeof this.globals[name] === 'undefined') {\n            throw new Error('global not found: ' + name);\n          }\n\n          return this.globals[name];\n        };\n\n        _proto.addFilter = function addFilter(name, func, async) {\n          var wrapped = func;\n\n          if (async) {\n            this.asyncFilters.push(name);\n          }\n\n          this.filters[name] = wrapped;\n          return this;\n        };\n\n        _proto.getFilter = function getFilter(name) {\n          if (!this.filters[name]) {\n            throw new Error('filter not found: ' + name);\n          }\n\n          return this.filters[name];\n        };\n\n        _proto.addTest = function addTest(name, func) {\n          this.tests[name] = func;\n          return this;\n        };\n\n        _proto.getTest = function getTest(name) {\n          if (!this.tests[name]) {\n            throw new Error('test not found: ' + name);\n          }\n\n          return this.tests[name];\n        };\n\n        _proto.resolveTemplate = function resolveTemplate(loader, parentName, filename) {\n          var isRelative = loader.isRelative && parentName ? loader.isRelative(filename) : false;\n          return isRelative && loader.resolve ? loader.resolve(parentName, filename) : filename;\n        };\n\n        _proto.getTemplate = function getTemplate(name, eagerCompile, parentName, ignoreMissing, cb) {\n          var _this3 = this;\n\n          var that = this;\n          var tmpl = null;\n\n          if (name && name.raw) {\n            // this fixes autoescape for templates referenced in symbols\n            name = name.raw;\n          }\n\n          if (lib.isFunction(parentName)) {\n            cb = parentName;\n            parentName = null;\n            eagerCompile = eagerCompile || false;\n          }\n\n          if (lib.isFunction(eagerCompile)) {\n            cb = eagerCompile;\n            eagerCompile = false;\n          }\n\n          if (name instanceof Template) {\n            tmpl = name;\n          } else if (typeof name !== 'string') {\n            throw new Error('template names must be a string: ' + name);\n          } else {\n            for (var i = 0; i < this.loaders.length; i++) {\n              var loader = this.loaders[i];\n              tmpl = loader.cache[this.resolveTemplate(loader, parentName, name)];\n\n              if (tmpl) {\n                break;\n              }\n            }\n          }\n\n          if (tmpl) {\n            if (eagerCompile) {\n              tmpl.compile();\n            }\n\n            if (cb) {\n              cb(null, tmpl);\n              return undefined;\n            } else {\n              return tmpl;\n            }\n          }\n\n          var syncResult;\n\n          var createTemplate = function createTemplate(err, info) {\n            if (!info && !err && !ignoreMissing) {\n              err = new Error('template not found: ' + name);\n            }\n\n            if (err) {\n              if (cb) {\n                cb(err);\n                return;\n              } else {\n                throw err;\n              }\n            }\n\n            var newTmpl;\n\n            if (!info) {\n              newTmpl = new Template(noopTmplSrc, _this3, '', eagerCompile);\n            } else {\n              newTmpl = new Template(info.src, _this3, info.path, eagerCompile);\n\n              if (!info.noCache) {\n                info.loader.cache[name] = newTmpl;\n              }\n            }\n\n            if (cb) {\n              cb(null, newTmpl);\n            } else {\n              syncResult = newTmpl;\n            }\n          };\n\n          lib.asyncIter(this.loaders, function (loader, i, next, done) {\n            function handle(err, src) {\n              if (err) {\n                done(err);\n              } else if (src) {\n                src.loader = loader;\n                done(null, src);\n              } else {\n                next();\n              }\n            } // Resolve name relative to parentName\n\n\n            name = that.resolveTemplate(loader, parentName, name);\n\n            if (loader.async) {\n              loader.getSource(name, handle);\n            } else {\n              handle(null, loader.getSource(name));\n            }\n          }, createTemplate);\n          return syncResult;\n        };\n\n        _proto.express = function express(app) {\n          return expressApp(this, app);\n        };\n\n        _proto.render = function render(name, ctx, cb) {\n          if (lib.isFunction(ctx)) {\n            cb = ctx;\n            ctx = null;\n          } // We support a synchronous API to make it easier to migrate\n          // existing code to async. This works because if you don't do\n          // anything async work, the whole thing is actually run\n          // synchronously.\n\n\n          var syncResult = null;\n          this.getTemplate(name, function (err, tmpl) {\n            if (err && cb) {\n              callbackAsap(cb, err);\n            } else if (err) {\n              throw err;\n            } else {\n              syncResult = tmpl.render(ctx, cb);\n            }\n          });\n          return syncResult;\n        };\n\n        _proto.renderString = function renderString(src, ctx, opts, cb) {\n          if (lib.isFunction(opts)) {\n            cb = opts;\n            opts = {};\n          }\n\n          opts = opts || {};\n          var tmpl = new Template(src, this, opts.path);\n          return tmpl.render(ctx, cb);\n        };\n\n        _proto.waterfall = function waterfall(tasks, callback, forceAsync) {\n          return _waterfall(tasks, callback, forceAsync);\n        };\n\n        return Environment;\n      }(EmitterObj);\n\n      var Context = /*#__PURE__*/function (_Obj) {\n        _inheritsLoose(Context, _Obj);\n\n        function Context() {\n          return _Obj.apply(this, arguments) || this;\n        }\n\n        var _proto2 = Context.prototype;\n\n        _proto2.init = function init(ctx, blocks, env) {\n          var _this4 = this; // Has to be tied to an environment so we can tap into its globals.\n\n\n          this.env = env || new Environment(); // Make a duplicate of ctx\n\n          this.ctx = lib.extend({}, ctx);\n          this.blocks = {};\n          this.exported = [];\n          lib.keys(blocks).forEach(function (name) {\n            _this4.addBlock(name, blocks[name]);\n          });\n        };\n\n        _proto2.lookup = function lookup(name) {\n          // This is one of the most called functions, so optimize for\n          // the typical case where the name isn't in the globals\n          if (name in this.env.globals && !(name in this.ctx)) {\n            return this.env.globals[name];\n          } else {\n            return this.ctx[name];\n          }\n        };\n\n        _proto2.setVariable = function setVariable(name, val) {\n          this.ctx[name] = val;\n        };\n\n        _proto2.getVariables = function getVariables() {\n          return this.ctx;\n        };\n\n        _proto2.addBlock = function addBlock(name, block) {\n          this.blocks[name] = this.blocks[name] || [];\n          this.blocks[name].push(block);\n          return this;\n        };\n\n        _proto2.getBlock = function getBlock(name) {\n          if (!this.blocks[name]) {\n            throw new Error('unknown block \"' + name + '\"');\n          }\n\n          return this.blocks[name][0];\n        };\n\n        _proto2.getSuper = function getSuper(env, name, block, frame, runtime, cb) {\n          var idx = lib.indexOf(this.blocks[name] || [], block);\n          var blk = this.blocks[name][idx + 1];\n          var context = this;\n\n          if (idx === -1 || !blk) {\n            throw new Error('no super block available for \"' + name + '\"');\n          }\n\n          blk(env, context, frame, runtime, cb);\n        };\n\n        _proto2.addExport = function addExport(name) {\n          this.exported.push(name);\n        };\n\n        _proto2.getExported = function getExported() {\n          var _this5 = this;\n\n          var exported = {};\n          this.exported.forEach(function (name) {\n            exported[name] = _this5.ctx[name];\n          });\n          return exported;\n        };\n\n        return Context;\n      }(Obj);\n\n      var Template = /*#__PURE__*/function (_Obj2) {\n        _inheritsLoose(Template, _Obj2);\n\n        function Template() {\n          return _Obj2.apply(this, arguments) || this;\n        }\n\n        var _proto3 = Template.prototype;\n\n        _proto3.init = function init(src, env, path, eagerCompile) {\n          this.env = env || new Environment();\n\n          if (lib.isObject(src)) {\n            switch (src.type) {\n              case 'code':\n                this.tmplProps = src.obj;\n                break;\n\n              case 'string':\n                this.tmplStr = src.obj;\n                break;\n\n              default:\n                throw new Error(\"Unexpected template object type \" + src.type + \"; expected 'code', or 'string'\");\n            }\n          } else if (lib.isString(src)) {\n            this.tmplStr = src;\n          } else {\n            throw new Error('src must be a string or an object describing the source');\n          }\n\n          this.path = path;\n\n          if (eagerCompile) {\n            try {\n              this._compile();\n            } catch (err) {\n              throw lib._prettifyError(this.path, this.env.opts.dev, err);\n            }\n          } else {\n            this.compiled = false;\n          }\n        };\n\n        _proto3.render = function render(ctx, parentFrame, cb) {\n          var _this6 = this;\n\n          if (typeof ctx === 'function') {\n            cb = ctx;\n            ctx = {};\n          } else if (typeof parentFrame === 'function') {\n            cb = parentFrame;\n            parentFrame = null;\n          } // If there is a parent frame, we are being called from internal\n          // code of another template, and the internal system\n          // depends on the sync/async nature of the parent template\n          // to be inherited, so force an async callback\n\n\n          var forceAsync = !parentFrame; // Catch compile errors for async rendering\n\n          try {\n            this.compile();\n          } catch (e) {\n            var err = lib._prettifyError(this.path, this.env.opts.dev, e);\n\n            if (cb) {\n              return callbackAsap(cb, err);\n            } else {\n              throw err;\n            }\n          }\n\n          var context = new Context(ctx || {}, this.blocks, this.env);\n          var frame = parentFrame ? parentFrame.push(true) : new Frame();\n          frame.topLevel = true;\n          var syncResult = null;\n          var didError = false;\n          this.rootRenderFunc(this.env, context, frame, globalRuntime, function (err, res) {\n            // TODO: this is actually a bug in the compiled template (because waterfall\n            // tasks are both not passing errors up the chain of callbacks AND are not\n            // causing a return from the top-most render function). But fixing that\n            // will require a more substantial change to the compiler.\n            if (didError && cb && typeof res !== 'undefined') {\n              // prevent multiple calls to cb\n              return;\n            }\n\n            if (err) {\n              err = lib._prettifyError(_this6.path, _this6.env.opts.dev, err);\n              didError = true;\n            }\n\n            if (cb) {\n              if (forceAsync) {\n                callbackAsap(cb, err, res);\n              } else {\n                cb(err, res);\n              }\n            } else {\n              if (err) {\n                throw err;\n              }\n\n              syncResult = res;\n            }\n          });\n          return syncResult;\n        };\n\n        _proto3.getExported = function getExported(ctx, parentFrame, cb) {\n          // eslint-disable-line consistent-return\n          if (typeof ctx === 'function') {\n            cb = ctx;\n            ctx = {};\n          }\n\n          if (typeof parentFrame === 'function') {\n            cb = parentFrame;\n            parentFrame = null;\n          } // Catch compile errors for async rendering\n\n\n          try {\n            this.compile();\n          } catch (e) {\n            if (cb) {\n              return cb(e);\n            } else {\n              throw e;\n            }\n          }\n\n          var frame = parentFrame ? parentFrame.push() : new Frame();\n          frame.topLevel = true; // Run the rootRenderFunc to populate the context with exported vars\n\n          var context = new Context(ctx || {}, this.blocks, this.env);\n          this.rootRenderFunc(this.env, context, frame, globalRuntime, function (err) {\n            if (err) {\n              cb(err, null);\n            } else {\n              cb(null, context.getExported());\n            }\n          });\n        };\n\n        _proto3.compile = function compile() {\n          if (!this.compiled) {\n            this._compile();\n          }\n        };\n\n        _proto3._compile = function _compile() {\n          var props;\n\n          if (this.tmplProps) {\n            props = this.tmplProps;\n          } else {\n            var source = compiler.compile(this.tmplStr, this.env.asyncFilters, this.env.extensionsList, this.path, this.env.opts);\n            var func = new Function(source); // eslint-disable-line no-new-func\n\n            props = func();\n          }\n\n          this.blocks = this._getBlocks(props);\n          this.rootRenderFunc = props.root;\n          this.compiled = true;\n        };\n\n        _proto3._getBlocks = function _getBlocks(props) {\n          var blocks = {};\n          lib.keys(props).forEach(function (k) {\n            if (k.slice(0, 2) === 'b_') {\n              blocks[k.slice(2)] = props[k];\n            }\n          });\n          return blocks;\n        };\n\n        return Template;\n      }(Obj);\n\n      module.exports = {\n        Environment: Environment,\n        Template: Template\n      };\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var lexer = __webpack_require__(9);\n\n      var nodes = __webpack_require__(3);\n\n      var Obj = __webpack_require__(1).Obj;\n\n      var lib = __webpack_require__(0);\n\n      var Parser = /*#__PURE__*/function (_Obj) {\n        _inheritsLoose(Parser, _Obj);\n\n        function Parser() {\n          return _Obj.apply(this, arguments) || this;\n        }\n\n        var _proto = Parser.prototype;\n\n        _proto.init = function init(tokens) {\n          this.tokens = tokens;\n          this.peeked = null;\n          this.breakOnBlocks = null;\n          this.dropLeadingWhitespace = false;\n          this.extensions = [];\n        };\n\n        _proto.nextToken = function nextToken(withWhitespace) {\n          var tok;\n\n          if (this.peeked) {\n            if (!withWhitespace && this.peeked.type === lexer.TOKEN_WHITESPACE) {\n              this.peeked = null;\n            } else {\n              tok = this.peeked;\n              this.peeked = null;\n              return tok;\n            }\n          }\n\n          tok = this.tokens.nextToken();\n\n          if (!withWhitespace) {\n            while (tok && tok.type === lexer.TOKEN_WHITESPACE) {\n              tok = this.tokens.nextToken();\n            }\n          }\n\n          return tok;\n        };\n\n        _proto.peekToken = function peekToken() {\n          this.peeked = this.peeked || this.nextToken();\n          return this.peeked;\n        };\n\n        _proto.pushToken = function pushToken(tok) {\n          if (this.peeked) {\n            throw new Error('pushToken: can only push one token on between reads');\n          }\n\n          this.peeked = tok;\n        };\n\n        _proto.error = function error(msg, lineno, colno) {\n          if (lineno === undefined || colno === undefined) {\n            var tok = this.peekToken() || {};\n            lineno = tok.lineno;\n            colno = tok.colno;\n          }\n\n          if (lineno !== undefined) {\n            lineno += 1;\n          }\n\n          if (colno !== undefined) {\n            colno += 1;\n          }\n\n          return new lib.TemplateError(msg, lineno, colno);\n        };\n\n        _proto.fail = function fail(msg, lineno, colno) {\n          throw this.error(msg, lineno, colno);\n        };\n\n        _proto.skip = function skip(type) {\n          var tok = this.nextToken();\n\n          if (!tok || tok.type !== type) {\n            this.pushToken(tok);\n            return false;\n          }\n\n          return true;\n        };\n\n        _proto.expect = function expect(type) {\n          var tok = this.nextToken();\n\n          if (tok.type !== type) {\n            this.fail('expected ' + type + ', got ' + tok.type, tok.lineno, tok.colno);\n          }\n\n          return tok;\n        };\n\n        _proto.skipValue = function skipValue(type, val) {\n          var tok = this.nextToken();\n\n          if (!tok || tok.type !== type || tok.value !== val) {\n            this.pushToken(tok);\n            return false;\n          }\n\n          return true;\n        };\n\n        _proto.skipSymbol = function skipSymbol(val) {\n          return this.skipValue(lexer.TOKEN_SYMBOL, val);\n        };\n\n        _proto.advanceAfterBlockEnd = function advanceAfterBlockEnd(name) {\n          var tok;\n\n          if (!name) {\n            tok = this.peekToken();\n\n            if (!tok) {\n              this.fail('unexpected end of file');\n            }\n\n            if (tok.type !== lexer.TOKEN_SYMBOL) {\n              this.fail('advanceAfterBlockEnd: expected symbol token or ' + 'explicit name to be passed');\n            }\n\n            name = this.nextToken().value;\n          }\n\n          tok = this.nextToken();\n\n          if (tok && tok.type === lexer.TOKEN_BLOCK_END) {\n            if (tok.value.charAt(0) === '-') {\n              this.dropLeadingWhitespace = true;\n            }\n          } else {\n            this.fail('expected block end in ' + name + ' statement');\n          }\n\n          return tok;\n        };\n\n        _proto.advanceAfterVariableEnd = function advanceAfterVariableEnd() {\n          var tok = this.nextToken();\n\n          if (tok && tok.type === lexer.TOKEN_VARIABLE_END) {\n            this.dropLeadingWhitespace = tok.value.charAt(tok.value.length - this.tokens.tags.VARIABLE_END.length - 1) === '-';\n          } else {\n            this.pushToken(tok);\n            this.fail('expected variable end');\n          }\n        };\n\n        _proto.parseFor = function parseFor() {\n          var forTok = this.peekToken();\n          var node;\n          var endBlock;\n\n          if (this.skipSymbol('for')) {\n            node = new nodes.For(forTok.lineno, forTok.colno);\n            endBlock = 'endfor';\n          } else if (this.skipSymbol('asyncEach')) {\n            node = new nodes.AsyncEach(forTok.lineno, forTok.colno);\n            endBlock = 'endeach';\n          } else if (this.skipSymbol('asyncAll')) {\n            node = new nodes.AsyncAll(forTok.lineno, forTok.colno);\n            endBlock = 'endall';\n          } else {\n            this.fail('parseFor: expected for{Async}', forTok.lineno, forTok.colno);\n          }\n\n          node.name = this.parsePrimary();\n\n          if (!(node.name instanceof nodes.Symbol)) {\n            this.fail('parseFor: variable name expected for loop');\n          }\n\n          var type = this.peekToken().type;\n\n          if (type === lexer.TOKEN_COMMA) {\n            // key/value iteration\n            var key = node.name;\n            node.name = new nodes.Array(key.lineno, key.colno);\n            node.name.addChild(key);\n\n            while (this.skip(lexer.TOKEN_COMMA)) {\n              var prim = this.parsePrimary();\n              node.name.addChild(prim);\n            }\n          }\n\n          if (!this.skipSymbol('in')) {\n            this.fail('parseFor: expected \"in\" keyword for loop', forTok.lineno, forTok.colno);\n          }\n\n          node.arr = this.parseExpression();\n          this.advanceAfterBlockEnd(forTok.value);\n          node.body = this.parseUntilBlocks(endBlock, 'else');\n\n          if (this.skipSymbol('else')) {\n            this.advanceAfterBlockEnd('else');\n            node.else_ = this.parseUntilBlocks(endBlock);\n          }\n\n          this.advanceAfterBlockEnd();\n          return node;\n        };\n\n        _proto.parseMacro = function parseMacro() {\n          var macroTok = this.peekToken();\n\n          if (!this.skipSymbol('macro')) {\n            this.fail('expected macro');\n          }\n\n          var name = this.parsePrimary(true);\n          var args = this.parseSignature();\n          var node = new nodes.Macro(macroTok.lineno, macroTok.colno, name, args);\n          this.advanceAfterBlockEnd(macroTok.value);\n          node.body = this.parseUntilBlocks('endmacro');\n          this.advanceAfterBlockEnd();\n          return node;\n        };\n\n        _proto.parseCall = function parseCall() {\n          // a call block is parsed as a normal FunCall, but with an added\n          // 'caller' kwarg which is a Caller node.\n          var callTok = this.peekToken();\n\n          if (!this.skipSymbol('call')) {\n            this.fail('expected call');\n          }\n\n          var callerArgs = this.parseSignature(true) || new nodes.NodeList();\n          var macroCall = this.parsePrimary();\n          this.advanceAfterBlockEnd(callTok.value);\n          var body = this.parseUntilBlocks('endcall');\n          this.advanceAfterBlockEnd();\n          var callerName = new nodes.Symbol(callTok.lineno, callTok.colno, 'caller');\n          var callerNode = new nodes.Caller(callTok.lineno, callTok.colno, callerName, callerArgs, body); // add the additional caller kwarg, adding kwargs if necessary\n\n          var args = macroCall.args.children;\n\n          if (!(args[args.length - 1] instanceof nodes.KeywordArgs)) {\n            args.push(new nodes.KeywordArgs());\n          }\n\n          var kwargs = args[args.length - 1];\n          kwargs.addChild(new nodes.Pair(callTok.lineno, callTok.colno, callerName, callerNode));\n          return new nodes.Output(callTok.lineno, callTok.colno, [macroCall]);\n        };\n\n        _proto.parseWithContext = function parseWithContext() {\n          var tok = this.peekToken();\n          var withContext = null;\n\n          if (this.skipSymbol('with')) {\n            withContext = true;\n          } else if (this.skipSymbol('without')) {\n            withContext = false;\n          }\n\n          if (withContext !== null) {\n            if (!this.skipSymbol('context')) {\n              this.fail('parseFrom: expected context after with/without', tok.lineno, tok.colno);\n            }\n          }\n\n          return withContext;\n        };\n\n        _proto.parseImport = function parseImport() {\n          var importTok = this.peekToken();\n\n          if (!this.skipSymbol('import')) {\n            this.fail('parseImport: expected import', importTok.lineno, importTok.colno);\n          }\n\n          var template = this.parseExpression();\n\n          if (!this.skipSymbol('as')) {\n            this.fail('parseImport: expected \"as\" keyword', importTok.lineno, importTok.colno);\n          }\n\n          var target = this.parseExpression();\n          var withContext = this.parseWithContext();\n          var node = new nodes.Import(importTok.lineno, importTok.colno, template, target, withContext);\n          this.advanceAfterBlockEnd(importTok.value);\n          return node;\n        };\n\n        _proto.parseFrom = function parseFrom() {\n          var fromTok = this.peekToken();\n\n          if (!this.skipSymbol('from')) {\n            this.fail('parseFrom: expected from');\n          }\n\n          var template = this.parseExpression();\n\n          if (!this.skipSymbol('import')) {\n            this.fail('parseFrom: expected import', fromTok.lineno, fromTok.colno);\n          }\n\n          var names = new nodes.NodeList();\n          var withContext;\n\n          while (1) {\n            // eslint-disable-line no-constant-condition\n            var nextTok = this.peekToken();\n\n            if (nextTok.type === lexer.TOKEN_BLOCK_END) {\n              if (!names.children.length) {\n                this.fail('parseFrom: Expected at least one import name', fromTok.lineno, fromTok.colno);\n              } // Since we are manually advancing past the block end,\n              // need to keep track of whitespace control (normally\n              // this is done in `advanceAfterBlockEnd`\n\n\n              if (nextTok.value.charAt(0) === '-') {\n                this.dropLeadingWhitespace = true;\n              }\n\n              this.nextToken();\n              break;\n            }\n\n            if (names.children.length > 0 && !this.skip(lexer.TOKEN_COMMA)) {\n              this.fail('parseFrom: expected comma', fromTok.lineno, fromTok.colno);\n            }\n\n            var name = this.parsePrimary();\n\n            if (name.value.charAt(0) === '_') {\n              this.fail('parseFrom: names starting with an underscore cannot be imported', name.lineno, name.colno);\n            }\n\n            if (this.skipSymbol('as')) {\n              var alias = this.parsePrimary();\n              names.addChild(new nodes.Pair(name.lineno, name.colno, name, alias));\n            } else {\n              names.addChild(name);\n            }\n\n            withContext = this.parseWithContext();\n          }\n\n          return new nodes.FromImport(fromTok.lineno, fromTok.colno, template, names, withContext);\n        };\n\n        _proto.parseBlock = function parseBlock() {\n          var tag = this.peekToken();\n\n          if (!this.skipSymbol('block')) {\n            this.fail('parseBlock: expected block', tag.lineno, tag.colno);\n          }\n\n          var node = new nodes.Block(tag.lineno, tag.colno);\n          node.name = this.parsePrimary();\n\n          if (!(node.name instanceof nodes.Symbol)) {\n            this.fail('parseBlock: variable name expected', tag.lineno, tag.colno);\n          }\n\n          this.advanceAfterBlockEnd(tag.value);\n          node.body = this.parseUntilBlocks('endblock');\n          this.skipSymbol('endblock');\n          this.skipSymbol(node.name.value);\n          var tok = this.peekToken();\n\n          if (!tok) {\n            this.fail('parseBlock: expected endblock, got end of file');\n          }\n\n          this.advanceAfterBlockEnd(tok.value);\n          return node;\n        };\n\n        _proto.parseExtends = function parseExtends() {\n          var tagName = 'extends';\n          var tag = this.peekToken();\n\n          if (!this.skipSymbol(tagName)) {\n            this.fail('parseTemplateRef: expected ' + tagName);\n          }\n\n          var node = new nodes.Extends(tag.lineno, tag.colno);\n          node.template = this.parseExpression();\n          this.advanceAfterBlockEnd(tag.value);\n          return node;\n        };\n\n        _proto.parseInclude = function parseInclude() {\n          var tagName = 'include';\n          var tag = this.peekToken();\n\n          if (!this.skipSymbol(tagName)) {\n            this.fail('parseInclude: expected ' + tagName);\n          }\n\n          var node = new nodes.Include(tag.lineno, tag.colno);\n          node.template = this.parseExpression();\n\n          if (this.skipSymbol('ignore') && this.skipSymbol('missing')) {\n            node.ignoreMissing = true;\n          }\n\n          this.advanceAfterBlockEnd(tag.value);\n          return node;\n        };\n\n        _proto.parseIf = function parseIf() {\n          var tag = this.peekToken();\n          var node;\n\n          if (this.skipSymbol('if') || this.skipSymbol('elif') || this.skipSymbol('elseif')) {\n            node = new nodes.If(tag.lineno, tag.colno);\n          } else if (this.skipSymbol('ifAsync')) {\n            node = new nodes.IfAsync(tag.lineno, tag.colno);\n          } else {\n            this.fail('parseIf: expected if, elif, or elseif', tag.lineno, tag.colno);\n          }\n\n          node.cond = this.parseExpression();\n          this.advanceAfterBlockEnd(tag.value);\n          node.body = this.parseUntilBlocks('elif', 'elseif', 'else', 'endif');\n          var tok = this.peekToken();\n\n          switch (tok && tok.value) {\n            case 'elseif':\n            case 'elif':\n              node.else_ = this.parseIf();\n              break;\n\n            case 'else':\n              this.advanceAfterBlockEnd();\n              node.else_ = this.parseUntilBlocks('endif');\n              this.advanceAfterBlockEnd();\n              break;\n\n            case 'endif':\n              node.else_ = null;\n              this.advanceAfterBlockEnd();\n              break;\n\n            default:\n              this.fail('parseIf: expected elif, else, or endif, got end of file');\n          }\n\n          return node;\n        };\n\n        _proto.parseSet = function parseSet() {\n          var tag = this.peekToken();\n\n          if (!this.skipSymbol('set')) {\n            this.fail('parseSet: expected set', tag.lineno, tag.colno);\n          }\n\n          var node = new nodes.Set(tag.lineno, tag.colno, []);\n          var target;\n\n          while (target = this.parsePrimary()) {\n            node.targets.push(target);\n\n            if (!this.skip(lexer.TOKEN_COMMA)) {\n              break;\n            }\n          }\n\n          if (!this.skipValue(lexer.TOKEN_OPERATOR, '=')) {\n            if (!this.skip(lexer.TOKEN_BLOCK_END)) {\n              this.fail('parseSet: expected = or block end in set tag', tag.lineno, tag.colno);\n            } else {\n              node.body = new nodes.Capture(tag.lineno, tag.colno, this.parseUntilBlocks('endset'));\n              node.value = null;\n              this.advanceAfterBlockEnd();\n            }\n          } else {\n            node.value = this.parseExpression();\n            this.advanceAfterBlockEnd(tag.value);\n          }\n\n          return node;\n        };\n\n        _proto.parseSwitch = function parseSwitch() {\n          /*\n           * Store the tag names in variables in case someone ever wants to\n           * customize this.\n           */\n          var switchStart = 'switch';\n          var switchEnd = 'endswitch';\n          var caseStart = 'case';\n          var caseDefault = 'default'; // Get the switch tag.\n\n          var tag = this.peekToken(); // fail early if we get some unexpected tag.\n\n          if (!this.skipSymbol(switchStart) && !this.skipSymbol(caseStart) && !this.skipSymbol(caseDefault)) {\n            this.fail('parseSwitch: expected \"switch,\" \"case\" or \"default\"', tag.lineno, tag.colno);\n          } // parse the switch expression\n\n\n          var expr = this.parseExpression(); // advance until a start of a case, a default case or an endswitch.\n\n          this.advanceAfterBlockEnd(switchStart);\n          this.parseUntilBlocks(caseStart, caseDefault, switchEnd); // this is the first case. it could also be an endswitch, we'll check.\n\n          var tok = this.peekToken(); // create new variables for our cases and default case.\n\n          var cases = [];\n          var defaultCase; // while we're dealing with new cases nodes...\n\n          do {\n            // skip the start symbol and get the case expression\n            this.skipSymbol(caseStart);\n            var cond = this.parseExpression();\n            this.advanceAfterBlockEnd(switchStart); // get the body of the case node and add it to the array of cases.\n\n            var body = this.parseUntilBlocks(caseStart, caseDefault, switchEnd);\n            cases.push(new nodes.Case(tok.line, tok.col, cond, body)); // get our next case\n\n            tok = this.peekToken();\n          } while (tok && tok.value === caseStart); // we either have a default case or a switch end.\n\n\n          switch (tok.value) {\n            case caseDefault:\n              this.advanceAfterBlockEnd();\n              defaultCase = this.parseUntilBlocks(switchEnd);\n              this.advanceAfterBlockEnd();\n              break;\n\n            case switchEnd:\n              this.advanceAfterBlockEnd();\n              break;\n\n            default:\n              // otherwise bail because EOF\n              this.fail('parseSwitch: expected \"case,\" \"default\" or \"endswitch,\" got EOF.');\n          } // and return the switch node.\n\n\n          return new nodes.Switch(tag.lineno, tag.colno, expr, cases, defaultCase);\n        };\n\n        _proto.parseStatement = function parseStatement() {\n          var tok = this.peekToken();\n          var node;\n\n          if (tok.type !== lexer.TOKEN_SYMBOL) {\n            this.fail('tag name expected', tok.lineno, tok.colno);\n          }\n\n          if (this.breakOnBlocks && lib.indexOf(this.breakOnBlocks, tok.value) !== -1) {\n            return null;\n          }\n\n          switch (tok.value) {\n            case 'raw':\n              return this.parseRaw();\n\n            case 'verbatim':\n              return this.parseRaw('verbatim');\n\n            case 'if':\n            case 'ifAsync':\n              return this.parseIf();\n\n            case 'for':\n            case 'asyncEach':\n            case 'asyncAll':\n              return this.parseFor();\n\n            case 'block':\n              return this.parseBlock();\n\n            case 'extends':\n              return this.parseExtends();\n\n            case 'include':\n              return this.parseInclude();\n\n            case 'set':\n              return this.parseSet();\n\n            case 'macro':\n              return this.parseMacro();\n\n            case 'call':\n              return this.parseCall();\n\n            case 'import':\n              return this.parseImport();\n\n            case 'from':\n              return this.parseFrom();\n\n            case 'filter':\n              return this.parseFilterStatement();\n\n            case 'switch':\n              return this.parseSwitch();\n\n            default:\n              if (this.extensions.length) {\n                for (var i = 0; i < this.extensions.length; i++) {\n                  var ext = this.extensions[i];\n\n                  if (lib.indexOf(ext.tags || [], tok.value) !== -1) {\n                    return ext.parse(this, nodes, lexer);\n                  }\n                }\n              }\n\n              this.fail('unknown block tag: ' + tok.value, tok.lineno, tok.colno);\n          }\n\n          return node;\n        };\n\n        _proto.parseRaw = function parseRaw(tagName) {\n          tagName = tagName || 'raw';\n          var endTagName = 'end' + tagName; // Look for upcoming raw blocks (ignore all other kinds of blocks)\n\n          var rawBlockRegex = new RegExp('([\\\\s\\\\S]*?){%\\\\s*(' + tagName + '|' + endTagName + ')\\\\s*(?=%})%}');\n          var rawLevel = 1;\n          var str = '';\n          var matches = null; // Skip opening raw token\n          // Keep this token to track line and column numbers\n\n          var begun = this.advanceAfterBlockEnd(); // Exit when there's nothing to match\n          // or when we've found the matching \"endraw\" block\n\n          while ((matches = this.tokens._extractRegex(rawBlockRegex)) && rawLevel > 0) {\n            var all = matches[0];\n            var pre = matches[1];\n            var blockName = matches[2]; // Adjust rawlevel\n\n            if (blockName === tagName) {\n              rawLevel += 1;\n            } else if (blockName === endTagName) {\n              rawLevel -= 1;\n            } // Add to str\n\n\n            if (rawLevel === 0) {\n              // We want to exclude the last \"endraw\"\n              str += pre; // Move tokenizer to beginning of endraw block\n\n              this.tokens.backN(all.length - pre.length);\n            } else {\n              str += all;\n            }\n          }\n\n          return new nodes.Output(begun.lineno, begun.colno, [new nodes.TemplateData(begun.lineno, begun.colno, str)]);\n        };\n\n        _proto.parsePostfix = function parsePostfix(node) {\n          var lookup;\n          var tok = this.peekToken();\n\n          while (tok) {\n            if (tok.type === lexer.TOKEN_LEFT_PAREN) {\n              // Function call\n              node = new nodes.FunCall(tok.lineno, tok.colno, node, this.parseSignature());\n            } else if (tok.type === lexer.TOKEN_LEFT_BRACKET) {\n              // Reference\n              lookup = this.parseAggregate();\n\n              if (lookup.children.length > 1) {\n                this.fail('invalid index');\n              }\n\n              node = new nodes.LookupVal(tok.lineno, tok.colno, node, lookup.children[0]);\n            } else if (tok.type === lexer.TOKEN_OPERATOR && tok.value === '.') {\n              // Reference\n              this.nextToken();\n              var val = this.nextToken();\n\n              if (val.type !== lexer.TOKEN_SYMBOL) {\n                this.fail('expected name as lookup value, got ' + val.value, val.lineno, val.colno);\n              } // Make a literal string because it's not a variable\n              // reference\n\n\n              lookup = new nodes.Literal(val.lineno, val.colno, val.value);\n              node = new nodes.LookupVal(tok.lineno, tok.colno, node, lookup);\n            } else {\n              break;\n            }\n\n            tok = this.peekToken();\n          }\n\n          return node;\n        };\n\n        _proto.parseExpression = function parseExpression() {\n          var node = this.parseInlineIf();\n          return node;\n        };\n\n        _proto.parseInlineIf = function parseInlineIf() {\n          var node = this.parseOr();\n\n          if (this.skipSymbol('if')) {\n            var condNode = this.parseOr();\n            var bodyNode = node;\n            node = new nodes.InlineIf(node.lineno, node.colno);\n            node.body = bodyNode;\n            node.cond = condNode;\n\n            if (this.skipSymbol('else')) {\n              node.else_ = this.parseOr();\n            } else {\n              node.else_ = null;\n            }\n          }\n\n          return node;\n        };\n\n        _proto.parseOr = function parseOr() {\n          var node = this.parseAnd();\n\n          while (this.skipSymbol('or')) {\n            var node2 = this.parseAnd();\n            node = new nodes.Or(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseAnd = function parseAnd() {\n          var node = this.parseNot();\n\n          while (this.skipSymbol('and')) {\n            var node2 = this.parseNot();\n            node = new nodes.And(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseNot = function parseNot() {\n          var tok = this.peekToken();\n\n          if (this.skipSymbol('not')) {\n            return new nodes.Not(tok.lineno, tok.colno, this.parseNot());\n          }\n\n          return this.parseIn();\n        };\n\n        _proto.parseIn = function parseIn() {\n          var node = this.parseIs();\n\n          while (1) {\n            // eslint-disable-line no-constant-condition\n            // check if the next token is 'not'\n            var tok = this.nextToken();\n\n            if (!tok) {\n              break;\n            }\n\n            var invert = tok.type === lexer.TOKEN_SYMBOL && tok.value === 'not'; // if it wasn't 'not', put it back\n\n            if (!invert) {\n              this.pushToken(tok);\n            }\n\n            if (this.skipSymbol('in')) {\n              var node2 = this.parseIs();\n              node = new nodes.In(node.lineno, node.colno, node, node2);\n\n              if (invert) {\n                node = new nodes.Not(node.lineno, node.colno, node);\n              }\n            } else {\n              // if we'd found a 'not' but this wasn't an 'in', put back the 'not'\n              if (invert) {\n                this.pushToken(tok);\n              }\n\n              break;\n            }\n          }\n\n          return node;\n        } // I put this right after \"in\" in the operator precedence stack. That can\n        // obviously be changed to be closer to Jinja.\n        ;\n\n        _proto.parseIs = function parseIs() {\n          var node = this.parseCompare(); // look for an is\n\n          if (this.skipSymbol('is')) {\n            // look for a not\n            var not = this.skipSymbol('not'); // get the next node\n\n            var node2 = this.parseCompare(); // create an Is node using the next node and the info from our Is node.\n\n            node = new nodes.Is(node.lineno, node.colno, node, node2); // if we have a Not, create a Not node from our Is node.\n\n            if (not) {\n              node = new nodes.Not(node.lineno, node.colno, node);\n            }\n          } // return the node.\n\n\n          return node;\n        };\n\n        _proto.parseCompare = function parseCompare() {\n          var compareOps = ['==', '===', '!=', '!==', '<', '>', '<=', '>='];\n          var expr = this.parseConcat();\n          var ops = [];\n\n          while (1) {\n            // eslint-disable-line no-constant-condition\n            var tok = this.nextToken();\n\n            if (!tok) {\n              break;\n            } else if (compareOps.indexOf(tok.value) !== -1) {\n              ops.push(new nodes.CompareOperand(tok.lineno, tok.colno, this.parseConcat(), tok.value));\n            } else {\n              this.pushToken(tok);\n              break;\n            }\n          }\n\n          if (ops.length) {\n            return new nodes.Compare(ops[0].lineno, ops[0].colno, expr, ops);\n          } else {\n            return expr;\n          }\n        } // finds the '~' for string concatenation\n        ;\n\n        _proto.parseConcat = function parseConcat() {\n          var node = this.parseAdd();\n\n          while (this.skipValue(lexer.TOKEN_TILDE, '~')) {\n            var node2 = this.parseAdd();\n            node = new nodes.Concat(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseAdd = function parseAdd() {\n          var node = this.parseSub();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '+')) {\n            var node2 = this.parseSub();\n            node = new nodes.Add(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseSub = function parseSub() {\n          var node = this.parseMul();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '-')) {\n            var node2 = this.parseMul();\n            node = new nodes.Sub(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseMul = function parseMul() {\n          var node = this.parseDiv();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '*')) {\n            var node2 = this.parseDiv();\n            node = new nodes.Mul(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseDiv = function parseDiv() {\n          var node = this.parseFloorDiv();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '/')) {\n            var node2 = this.parseFloorDiv();\n            node = new nodes.Div(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseFloorDiv = function parseFloorDiv() {\n          var node = this.parseMod();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '//')) {\n            var node2 = this.parseMod();\n            node = new nodes.FloorDiv(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseMod = function parseMod() {\n          var node = this.parsePow();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '%')) {\n            var node2 = this.parsePow();\n            node = new nodes.Mod(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parsePow = function parsePow() {\n          var node = this.parseUnary();\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '**')) {\n            var node2 = this.parseUnary();\n            node = new nodes.Pow(node.lineno, node.colno, node, node2);\n          }\n\n          return node;\n        };\n\n        _proto.parseUnary = function parseUnary(noFilters) {\n          var tok = this.peekToken();\n          var node;\n\n          if (this.skipValue(lexer.TOKEN_OPERATOR, '-')) {\n            node = new nodes.Neg(tok.lineno, tok.colno, this.parseUnary(true));\n          } else if (this.skipValue(lexer.TOKEN_OPERATOR, '+')) {\n            node = new nodes.Pos(tok.lineno, tok.colno, this.parseUnary(true));\n          } else {\n            node = this.parsePrimary();\n          }\n\n          if (!noFilters) {\n            node = this.parseFilter(node);\n          }\n\n          return node;\n        };\n\n        _proto.parsePrimary = function parsePrimary(noPostfix) {\n          var tok = this.nextToken();\n          var val;\n          var node = null;\n\n          if (!tok) {\n            this.fail('expected expression, got end of file');\n          } else if (tok.type === lexer.TOKEN_STRING) {\n            val = tok.value;\n          } else if (tok.type === lexer.TOKEN_INT) {\n            val = parseInt(tok.value, 10);\n          } else if (tok.type === lexer.TOKEN_FLOAT) {\n            val = parseFloat(tok.value);\n          } else if (tok.type === lexer.TOKEN_BOOLEAN) {\n            if (tok.value === 'true') {\n              val = true;\n            } else if (tok.value === 'false') {\n              val = false;\n            } else {\n              this.fail('invalid boolean: ' + tok.value, tok.lineno, tok.colno);\n            }\n          } else if (tok.type === lexer.TOKEN_NONE) {\n            val = null;\n          } else if (tok.type === lexer.TOKEN_REGEX) {\n            val = new RegExp(tok.value.body, tok.value.flags);\n          }\n\n          if (val !== undefined) {\n            node = new nodes.Literal(tok.lineno, tok.colno, val);\n          } else if (tok.type === lexer.TOKEN_SYMBOL) {\n            node = new nodes.Symbol(tok.lineno, tok.colno, tok.value);\n          } else {\n            // See if it's an aggregate type, we need to push the\n            // current delimiter token back on\n            this.pushToken(tok);\n            node = this.parseAggregate();\n          }\n\n          if (!noPostfix) {\n            node = this.parsePostfix(node);\n          }\n\n          if (node) {\n            return node;\n          } else {\n            throw this.error(\"unexpected token: \" + tok.value, tok.lineno, tok.colno);\n          }\n        };\n\n        _proto.parseFilterName = function parseFilterName() {\n          var tok = this.expect(lexer.TOKEN_SYMBOL);\n          var name = tok.value;\n\n          while (this.skipValue(lexer.TOKEN_OPERATOR, '.')) {\n            name += '.' + this.expect(lexer.TOKEN_SYMBOL).value;\n          }\n\n          return new nodes.Symbol(tok.lineno, tok.colno, name);\n        };\n\n        _proto.parseFilterArgs = function parseFilterArgs(node) {\n          if (this.peekToken().type === lexer.TOKEN_LEFT_PAREN) {\n            // Get a FunCall node and add the parameters to the\n            // filter\n            var call = this.parsePostfix(node);\n            return call.args.children;\n          }\n\n          return [];\n        };\n\n        _proto.parseFilter = function parseFilter(node) {\n          while (this.skip(lexer.TOKEN_PIPE)) {\n            var name = this.parseFilterName();\n            node = new nodes.Filter(name.lineno, name.colno, name, new nodes.NodeList(name.lineno, name.colno, [node].concat(this.parseFilterArgs(node))));\n          }\n\n          return node;\n        };\n\n        _proto.parseFilterStatement = function parseFilterStatement() {\n          var filterTok = this.peekToken();\n\n          if (!this.skipSymbol('filter')) {\n            this.fail('parseFilterStatement: expected filter');\n          }\n\n          var name = this.parseFilterName();\n          var args = this.parseFilterArgs(name);\n          this.advanceAfterBlockEnd(filterTok.value);\n          var body = new nodes.Capture(name.lineno, name.colno, this.parseUntilBlocks('endfilter'));\n          this.advanceAfterBlockEnd();\n          var node = new nodes.Filter(name.lineno, name.colno, name, new nodes.NodeList(name.lineno, name.colno, [body].concat(args)));\n          return new nodes.Output(name.lineno, name.colno, [node]);\n        };\n\n        _proto.parseAggregate = function parseAggregate() {\n          var tok = this.nextToken();\n          var node;\n\n          switch (tok.type) {\n            case lexer.TOKEN_LEFT_PAREN:\n              node = new nodes.Group(tok.lineno, tok.colno);\n              break;\n\n            case lexer.TOKEN_LEFT_BRACKET:\n              node = new nodes.Array(tok.lineno, tok.colno);\n              break;\n\n            case lexer.TOKEN_LEFT_CURLY:\n              node = new nodes.Dict(tok.lineno, tok.colno);\n              break;\n\n            default:\n              return null;\n          }\n\n          while (1) {\n            // eslint-disable-line no-constant-condition\n            var type = this.peekToken().type;\n\n            if (type === lexer.TOKEN_RIGHT_PAREN || type === lexer.TOKEN_RIGHT_BRACKET || type === lexer.TOKEN_RIGHT_CURLY) {\n              this.nextToken();\n              break;\n            }\n\n            if (node.children.length > 0) {\n              if (!this.skip(lexer.TOKEN_COMMA)) {\n                this.fail('parseAggregate: expected comma after expression', tok.lineno, tok.colno);\n              }\n            }\n\n            if (node instanceof nodes.Dict) {\n              // TODO: check for errors\n              var key = this.parsePrimary(); // We expect a key/value pair for dicts, separated by a\n              // colon\n\n              if (!this.skip(lexer.TOKEN_COLON)) {\n                this.fail('parseAggregate: expected colon after dict key', tok.lineno, tok.colno);\n              } // TODO: check for errors\n\n\n              var value = this.parseExpression();\n              node.addChild(new nodes.Pair(key.lineno, key.colno, key, value));\n            } else {\n              // TODO: check for errors\n              var expr = this.parseExpression();\n              node.addChild(expr);\n            }\n          }\n\n          return node;\n        };\n\n        _proto.parseSignature = function parseSignature(tolerant, noParens) {\n          var tok = this.peekToken();\n\n          if (!noParens && tok.type !== lexer.TOKEN_LEFT_PAREN) {\n            if (tolerant) {\n              return null;\n            } else {\n              this.fail('expected arguments', tok.lineno, tok.colno);\n            }\n          }\n\n          if (tok.type === lexer.TOKEN_LEFT_PAREN) {\n            tok = this.nextToken();\n          }\n\n          var args = new nodes.NodeList(tok.lineno, tok.colno);\n          var kwargs = new nodes.KeywordArgs(tok.lineno, tok.colno);\n          var checkComma = false;\n\n          while (1) {\n            // eslint-disable-line no-constant-condition\n            tok = this.peekToken();\n\n            if (!noParens && tok.type === lexer.TOKEN_RIGHT_PAREN) {\n              this.nextToken();\n              break;\n            } else if (noParens && tok.type === lexer.TOKEN_BLOCK_END) {\n              break;\n            }\n\n            if (checkComma && !this.skip(lexer.TOKEN_COMMA)) {\n              this.fail('parseSignature: expected comma after expression', tok.lineno, tok.colno);\n            } else {\n              var arg = this.parseExpression();\n\n              if (this.skipValue(lexer.TOKEN_OPERATOR, '=')) {\n                kwargs.addChild(new nodes.Pair(arg.lineno, arg.colno, arg, this.parseExpression()));\n              } else {\n                args.addChild(arg);\n              }\n            }\n\n            checkComma = true;\n          }\n\n          if (kwargs.children.length) {\n            args.addChild(kwargs);\n          }\n\n          return args;\n        };\n\n        _proto.parseUntilBlocks = function parseUntilBlocks() {\n          var prev = this.breakOnBlocks;\n\n          for (var _len = arguments.length, blockNames = new Array(_len), _key = 0; _key < _len; _key++) {\n            blockNames[_key] = arguments[_key];\n          }\n\n          this.breakOnBlocks = blockNames;\n          var ret = this.parse();\n          this.breakOnBlocks = prev;\n          return ret;\n        };\n\n        _proto.parseNodes = function parseNodes() {\n          var tok;\n          var buf = [];\n\n          while (tok = this.nextToken()) {\n            if (tok.type === lexer.TOKEN_DATA) {\n              var data = tok.value;\n              var nextToken = this.peekToken();\n              var nextVal = nextToken && nextToken.value; // If the last token has \"-\" we need to trim the\n              // leading whitespace of the data. This is marked with\n              // the `dropLeadingWhitespace` variable.\n\n              if (this.dropLeadingWhitespace) {\n                // TODO: this could be optimized (don't use regex)\n                data = data.replace(/^\\s*/, '');\n                this.dropLeadingWhitespace = false;\n              } // Same for the succeeding block start token\n\n\n              if (nextToken && (nextToken.type === lexer.TOKEN_BLOCK_START && nextVal.charAt(nextVal.length - 1) === '-' || nextToken.type === lexer.TOKEN_VARIABLE_START && nextVal.charAt(this.tokens.tags.VARIABLE_START.length) === '-' || nextToken.type === lexer.TOKEN_COMMENT && nextVal.charAt(this.tokens.tags.COMMENT_START.length) === '-')) {\n                // TODO: this could be optimized (don't use regex)\n                data = data.replace(/\\s*$/, '');\n              }\n\n              buf.push(new nodes.Output(tok.lineno, tok.colno, [new nodes.TemplateData(tok.lineno, tok.colno, data)]));\n            } else if (tok.type === lexer.TOKEN_BLOCK_START) {\n              this.dropLeadingWhitespace = false;\n              var n = this.parseStatement();\n\n              if (!n) {\n                break;\n              }\n\n              buf.push(n);\n            } else if (tok.type === lexer.TOKEN_VARIABLE_START) {\n              var e = this.parseExpression();\n              this.dropLeadingWhitespace = false;\n              this.advanceAfterVariableEnd();\n              buf.push(new nodes.Output(tok.lineno, tok.colno, [e]));\n            } else if (tok.type === lexer.TOKEN_COMMENT) {\n              this.dropLeadingWhitespace = tok.value.charAt(tok.value.length - this.tokens.tags.COMMENT_END.length - 1) === '-';\n            } else {\n              // Ignore comments, otherwise this should be an error\n              this.fail('Unexpected token at top-level: ' + tok.type, tok.lineno, tok.colno);\n            }\n          }\n\n          return buf;\n        };\n\n        _proto.parse = function parse() {\n          return new nodes.NodeList(0, 0, this.parseNodes());\n        };\n\n        _proto.parseAsRoot = function parseAsRoot() {\n          return new nodes.Root(0, 0, this.parseNodes());\n        };\n\n        return Parser;\n      }(Obj); // var util = require('util');\n      // var l = lexer.lex('{%- if x -%}\\n hello {% endif %}');\n      // var t;\n      // while((t = l.nextToken())) {\n      //     console.log(util.inspect(t));\n      // }\n      // var p = new Parser(lexer.lex('hello {% filter title %}' +\n      //                              'Hello madam how are you' +\n      //                              '{% endfilter %}'));\n      // var n = p.parseAsRoot();\n      // nodes.printNodes(n);\n\n\n      module.exports = {\n        parse: function parse(src, extensions, opts) {\n          var p = new Parser(lexer.lex(src, opts));\n\n          if (extensions !== undefined) {\n            p.extensions = extensions;\n          }\n\n          return p.parseAsRoot();\n        },\n        Parser: Parser\n      };\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var lib = __webpack_require__(0);\n\n      var whitespaceChars = \" \\n\\t\\r\\xA0\";\n      var delimChars = '()[]{}%*-+~/#,:|.<>=!';\n      var intChars = '0123456789';\n      var BLOCK_START = '{%';\n      var BLOCK_END = '%}';\n      var VARIABLE_START = '{{';\n      var VARIABLE_END = '}}';\n      var COMMENT_START = '{#';\n      var COMMENT_END = '#}';\n      var TOKEN_STRING = 'string';\n      var TOKEN_WHITESPACE = 'whitespace';\n      var TOKEN_DATA = 'data';\n      var TOKEN_BLOCK_START = 'block-start';\n      var TOKEN_BLOCK_END = 'block-end';\n      var TOKEN_VARIABLE_START = 'variable-start';\n      var TOKEN_VARIABLE_END = 'variable-end';\n      var TOKEN_COMMENT = 'comment';\n      var TOKEN_LEFT_PAREN = 'left-paren';\n      var TOKEN_RIGHT_PAREN = 'right-paren';\n      var TOKEN_LEFT_BRACKET = 'left-bracket';\n      var TOKEN_RIGHT_BRACKET = 'right-bracket';\n      var TOKEN_LEFT_CURLY = 'left-curly';\n      var TOKEN_RIGHT_CURLY = 'right-curly';\n      var TOKEN_OPERATOR = 'operator';\n      var TOKEN_COMMA = 'comma';\n      var TOKEN_COLON = 'colon';\n      var TOKEN_TILDE = 'tilde';\n      var TOKEN_PIPE = 'pipe';\n      var TOKEN_INT = 'int';\n      var TOKEN_FLOAT = 'float';\n      var TOKEN_BOOLEAN = 'boolean';\n      var TOKEN_NONE = 'none';\n      var TOKEN_SYMBOL = 'symbol';\n      var TOKEN_SPECIAL = 'special';\n      var TOKEN_REGEX = 'regex';\n\n      function token(type, value, lineno, colno) {\n        return {\n          type: type,\n          value: value,\n          lineno: lineno,\n          colno: colno\n        };\n      }\n\n      var Tokenizer = /*#__PURE__*/function () {\n        function Tokenizer(str, opts) {\n          this.str = str;\n          this.index = 0;\n          this.len = str.length;\n          this.lineno = 0;\n          this.colno = 0;\n          this.in_code = false;\n          opts = opts || {};\n          var tags = opts.tags || {};\n          this.tags = {\n            BLOCK_START: tags.blockStart || BLOCK_START,\n            BLOCK_END: tags.blockEnd || BLOCK_END,\n            VARIABLE_START: tags.variableStart || VARIABLE_START,\n            VARIABLE_END: tags.variableEnd || VARIABLE_END,\n            COMMENT_START: tags.commentStart || COMMENT_START,\n            COMMENT_END: tags.commentEnd || COMMENT_END\n          };\n          this.trimBlocks = !!opts.trimBlocks;\n          this.lstripBlocks = !!opts.lstripBlocks;\n        }\n\n        var _proto = Tokenizer.prototype;\n\n        _proto.nextToken = function nextToken() {\n          var lineno = this.lineno;\n          var colno = this.colno;\n          var tok;\n\n          if (this.in_code) {\n            // Otherwise, if we are in a block parse it as code\n            var cur = this.current();\n\n            if (this.isFinished()) {\n              // We have nothing else to parse\n              return null;\n            } else if (cur === '\"' || cur === '\\'') {\n              // We've hit a string\n              return token(TOKEN_STRING, this._parseString(cur), lineno, colno);\n            } else if (tok = this._extract(whitespaceChars)) {\n              // We hit some whitespace\n              return token(TOKEN_WHITESPACE, tok, lineno, colno);\n            } else if ((tok = this._extractString(this.tags.BLOCK_END)) || (tok = this._extractString('-' + this.tags.BLOCK_END))) {\n              // Special check for the block end tag\n              //\n              // It is a requirement that start and end tags are composed of\n              // delimiter characters (%{}[] etc), and our code always\n              // breaks on delimiters so we can assume the token parsing\n              // doesn't consume these elsewhere\n              this.in_code = false;\n\n              if (this.trimBlocks) {\n                cur = this.current();\n\n                if (cur === '\\n') {\n                  // Skip newline\n                  this.forward();\n                } else if (cur === '\\r') {\n                  // Skip CRLF newline\n                  this.forward();\n                  cur = this.current();\n\n                  if (cur === '\\n') {\n                    this.forward();\n                  } else {\n                    // Was not a CRLF, so go back\n                    this.back();\n                  }\n                }\n              }\n\n              return token(TOKEN_BLOCK_END, tok, lineno, colno);\n            } else if ((tok = this._extractString(this.tags.VARIABLE_END)) || (tok = this._extractString('-' + this.tags.VARIABLE_END))) {\n              // Special check for variable end tag (see above)\n              this.in_code = false;\n              return token(TOKEN_VARIABLE_END, tok, lineno, colno);\n            } else if (cur === 'r' && this.str.charAt(this.index + 1) === '/') {\n              // Skip past 'r/'.\n              this.forwardN(2); // Extract until the end of the regex -- / ends it, \\/ does not.\n\n              var regexBody = '';\n\n              while (!this.isFinished()) {\n                if (this.current() === '/' && this.previous() !== '\\\\') {\n                  this.forward();\n                  break;\n                } else {\n                  regexBody += this.current();\n                  this.forward();\n                }\n              } // Check for flags.\n              // The possible flags are according to https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp)\n\n\n              var POSSIBLE_FLAGS = ['g', 'i', 'm', 'y'];\n              var regexFlags = '';\n\n              while (!this.isFinished()) {\n                var isCurrentAFlag = POSSIBLE_FLAGS.indexOf(this.current()) !== -1;\n\n                if (isCurrentAFlag) {\n                  regexFlags += this.current();\n                  this.forward();\n                } else {\n                  break;\n                }\n              }\n\n              return token(TOKEN_REGEX, {\n                body: regexBody,\n                flags: regexFlags\n              }, lineno, colno);\n            } else if (delimChars.indexOf(cur) !== -1) {\n              // We've hit a delimiter (a special char like a bracket)\n              this.forward();\n              var complexOps = ['==', '===', '!=', '!==', '<=', '>=', '//', '**'];\n              var curComplex = cur + this.current();\n              var type;\n\n              if (lib.indexOf(complexOps, curComplex) !== -1) {\n                this.forward();\n                cur = curComplex; // See if this is a strict equality/inequality comparator\n\n                if (lib.indexOf(complexOps, curComplex + this.current()) !== -1) {\n                  cur = curComplex + this.current();\n                  this.forward();\n                }\n              }\n\n              switch (cur) {\n                case '(':\n                  type = TOKEN_LEFT_PAREN;\n                  break;\n\n                case ')':\n                  type = TOKEN_RIGHT_PAREN;\n                  break;\n\n                case '[':\n                  type = TOKEN_LEFT_BRACKET;\n                  break;\n\n                case ']':\n                  type = TOKEN_RIGHT_BRACKET;\n                  break;\n\n                case '{':\n                  type = TOKEN_LEFT_CURLY;\n                  break;\n\n                case '}':\n                  type = TOKEN_RIGHT_CURLY;\n                  break;\n\n                case ',':\n                  type = TOKEN_COMMA;\n                  break;\n\n                case ':':\n                  type = TOKEN_COLON;\n                  break;\n\n                case '~':\n                  type = TOKEN_TILDE;\n                  break;\n\n                case '|':\n                  type = TOKEN_PIPE;\n                  break;\n\n                default:\n                  type = TOKEN_OPERATOR;\n              }\n\n              return token(type, cur, lineno, colno);\n            } else {\n              // We are not at whitespace or a delimiter, so extract the\n              // text and parse it\n              tok = this._extractUntil(whitespaceChars + delimChars);\n\n              if (tok.match(/^[-+]?[0-9]+$/)) {\n                if (this.current() === '.') {\n                  this.forward();\n\n                  var dec = this._extract(intChars);\n\n                  return token(TOKEN_FLOAT, tok + '.' + dec, lineno, colno);\n                } else {\n                  return token(TOKEN_INT, tok, lineno, colno);\n                }\n              } else if (tok.match(/^(true|false)$/)) {\n                return token(TOKEN_BOOLEAN, tok, lineno, colno);\n              } else if (tok === 'none') {\n                return token(TOKEN_NONE, tok, lineno, colno);\n                /*\n                 * Added to make the test `null is null` evaluate truthily.\n                 * Otherwise, Nunjucks will look up null in the context and\n                 * return `undefined`, which is not what we want. This *may* have\n                 * consequences is someone is using null in their templates as a\n                 * variable.\n                 */\n              } else if (tok === 'null') {\n                return token(TOKEN_NONE, tok, lineno, colno);\n              } else if (tok) {\n                return token(TOKEN_SYMBOL, tok, lineno, colno);\n              } else {\n                throw new Error('Unexpected value while parsing: ' + tok);\n              }\n            }\n          } else {\n            // Parse out the template text, breaking on tag\n            // delimiters because we need to look for block/variable start\n            // tags (don't use the full delimChars for optimization)\n            var beginChars = this.tags.BLOCK_START.charAt(0) + this.tags.VARIABLE_START.charAt(0) + this.tags.COMMENT_START.charAt(0) + this.tags.COMMENT_END.charAt(0);\n\n            if (this.isFinished()) {\n              return null;\n            } else if ((tok = this._extractString(this.tags.BLOCK_START + '-')) || (tok = this._extractString(this.tags.BLOCK_START))) {\n              this.in_code = true;\n              return token(TOKEN_BLOCK_START, tok, lineno, colno);\n            } else if ((tok = this._extractString(this.tags.VARIABLE_START + '-')) || (tok = this._extractString(this.tags.VARIABLE_START))) {\n              this.in_code = true;\n              return token(TOKEN_VARIABLE_START, tok, lineno, colno);\n            } else {\n              tok = '';\n              var data;\n              var inComment = false;\n\n              if (this._matches(this.tags.COMMENT_START)) {\n                inComment = true;\n                tok = this._extractString(this.tags.COMMENT_START);\n              } // Continually consume text, breaking on the tag delimiter\n              // characters and checking to see if it's a start tag.\n              //\n              // We could hit the end of the template in the middle of\n              // our looping, so check for the null return value from\n              // _extractUntil\n\n\n              while ((data = this._extractUntil(beginChars)) !== null) {\n                tok += data;\n\n                if ((this._matches(this.tags.BLOCK_START) || this._matches(this.tags.VARIABLE_START) || this._matches(this.tags.COMMENT_START)) && !inComment) {\n                  if (this.lstripBlocks && this._matches(this.tags.BLOCK_START) && this.colno > 0 && this.colno <= tok.length) {\n                    var lastLine = tok.slice(-this.colno);\n\n                    if (/^\\s+$/.test(lastLine)) {\n                      // Remove block leading whitespace from beginning of the string\n                      tok = tok.slice(0, -this.colno);\n\n                      if (!tok.length) {\n                        // All data removed, collapse to avoid unnecessary nodes\n                        // by returning next token (block start)\n                        return this.nextToken();\n                      }\n                    }\n                  } // If it is a start tag, stop looping\n\n\n                  break;\n                } else if (this._matches(this.tags.COMMENT_END)) {\n                  if (!inComment) {\n                    throw new Error('unexpected end of comment');\n                  }\n\n                  tok += this._extractString(this.tags.COMMENT_END);\n                  break;\n                } else {\n                  // It does not match any tag, so add the character and\n                  // carry on\n                  tok += this.current();\n                  this.forward();\n                }\n              }\n\n              if (data === null && inComment) {\n                throw new Error('expected end of comment, got end of file');\n              }\n\n              return token(inComment ? TOKEN_COMMENT : TOKEN_DATA, tok, lineno, colno);\n            }\n          }\n        };\n\n        _proto._parseString = function _parseString(delimiter) {\n          this.forward();\n          var str = '';\n\n          while (!this.isFinished() && this.current() !== delimiter) {\n            var cur = this.current();\n\n            if (cur === '\\\\') {\n              this.forward();\n\n              switch (this.current()) {\n                case 'n':\n                  str += '\\n';\n                  break;\n\n                case 't':\n                  str += '\\t';\n                  break;\n\n                case 'r':\n                  str += '\\r';\n                  break;\n\n                default:\n                  str += this.current();\n              }\n\n              this.forward();\n            } else {\n              str += cur;\n              this.forward();\n            }\n          }\n\n          this.forward();\n          return str;\n        };\n\n        _proto._matches = function _matches(str) {\n          if (this.index + str.length > this.len) {\n            return null;\n          }\n\n          var m = this.str.slice(this.index, this.index + str.length);\n          return m === str;\n        };\n\n        _proto._extractString = function _extractString(str) {\n          if (this._matches(str)) {\n            this.forwardN(str.length);\n            return str;\n          }\n\n          return null;\n        };\n\n        _proto._extractUntil = function _extractUntil(charString) {\n          // Extract all non-matching chars, with the default matching set\n          // to everything\n          return this._extractMatching(true, charString || '');\n        };\n\n        _proto._extract = function _extract(charString) {\n          // Extract all matching chars (no default, so charString must be\n          // explicit)\n          return this._extractMatching(false, charString);\n        };\n\n        _proto._extractMatching = function _extractMatching(breakOnMatch, charString) {\n          // Pull out characters until a breaking char is hit.\n          // If breakOnMatch is false, a non-matching char stops it.\n          // If breakOnMatch is true, a matching char stops it.\n          if (this.isFinished()) {\n            return null;\n          }\n\n          var first = charString.indexOf(this.current()); // Only proceed if the first character doesn't meet our condition\n\n          if (breakOnMatch && first === -1 || !breakOnMatch && first !== -1) {\n            var t = this.current();\n            this.forward(); // And pull out all the chars one at a time until we hit a\n            // breaking char\n\n            var idx = charString.indexOf(this.current());\n\n            while ((breakOnMatch && idx === -1 || !breakOnMatch && idx !== -1) && !this.isFinished()) {\n              t += this.current();\n              this.forward();\n              idx = charString.indexOf(this.current());\n            }\n\n            return t;\n          }\n\n          return '';\n        };\n\n        _proto._extractRegex = function _extractRegex(regex) {\n          var matches = this.currentStr().match(regex);\n\n          if (!matches) {\n            return null;\n          } // Move forward whatever was matched\n\n\n          this.forwardN(matches[0].length);\n          return matches;\n        };\n\n        _proto.isFinished = function isFinished() {\n          return this.index >= this.len;\n        };\n\n        _proto.forwardN = function forwardN(n) {\n          for (var i = 0; i < n; i++) {\n            this.forward();\n          }\n        };\n\n        _proto.forward = function forward() {\n          this.index++;\n\n          if (this.previous() === '\\n') {\n            this.lineno++;\n            this.colno = 0;\n          } else {\n            this.colno++;\n          }\n        };\n\n        _proto.backN = function backN(n) {\n          for (var i = 0; i < n; i++) {\n            this.back();\n          }\n        };\n\n        _proto.back = function back() {\n          this.index--;\n\n          if (this.current() === '\\n') {\n            this.lineno--;\n            var idx = this.src.lastIndexOf('\\n', this.index - 1);\n\n            if (idx === -1) {\n              this.colno = this.index;\n            } else {\n              this.colno = this.index - idx;\n            }\n          } else {\n            this.colno--;\n          }\n        } // current returns current character\n        ;\n\n        _proto.current = function current() {\n          if (!this.isFinished()) {\n            return this.str.charAt(this.index);\n          }\n\n          return '';\n        } // currentStr returns what's left of the unparsed string\n        ;\n\n        _proto.currentStr = function currentStr() {\n          if (!this.isFinished()) {\n            return this.str.substr(this.index);\n          }\n\n          return '';\n        };\n\n        _proto.previous = function previous() {\n          return this.str.charAt(this.index - 1);\n        };\n\n        return Tokenizer;\n      }();\n\n      module.exports = {\n        lex: function lex(src, opts) {\n          return new Tokenizer(src, opts);\n        },\n        TOKEN_STRING: TOKEN_STRING,\n        TOKEN_WHITESPACE: TOKEN_WHITESPACE,\n        TOKEN_DATA: TOKEN_DATA,\n        TOKEN_BLOCK_START: TOKEN_BLOCK_START,\n        TOKEN_BLOCK_END: TOKEN_BLOCK_END,\n        TOKEN_VARIABLE_START: TOKEN_VARIABLE_START,\n        TOKEN_VARIABLE_END: TOKEN_VARIABLE_END,\n        TOKEN_COMMENT: TOKEN_COMMENT,\n        TOKEN_LEFT_PAREN: TOKEN_LEFT_PAREN,\n        TOKEN_RIGHT_PAREN: TOKEN_RIGHT_PAREN,\n        TOKEN_LEFT_BRACKET: TOKEN_LEFT_BRACKET,\n        TOKEN_RIGHT_BRACKET: TOKEN_RIGHT_BRACKET,\n        TOKEN_LEFT_CURLY: TOKEN_LEFT_CURLY,\n        TOKEN_RIGHT_CURLY: TOKEN_RIGHT_CURLY,\n        TOKEN_OPERATOR: TOKEN_OPERATOR,\n        TOKEN_COMMA: TOKEN_COMMA,\n        TOKEN_COLON: TOKEN_COLON,\n        TOKEN_TILDE: TOKEN_TILDE,\n        TOKEN_PIPE: TOKEN_PIPE,\n        TOKEN_INT: TOKEN_INT,\n        TOKEN_FLOAT: TOKEN_FLOAT,\n        TOKEN_BOOLEAN: TOKEN_BOOLEAN,\n        TOKEN_NONE: TOKEN_NONE,\n        TOKEN_SYMBOL: TOKEN_SYMBOL,\n        TOKEN_SPECIAL: TOKEN_SPECIAL,\n        TOKEN_REGEX: TOKEN_REGEX\n      };\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var Loader = __webpack_require__(6);\n\n      var _require = __webpack_require__(19),\n          PrecompiledLoader = _require.PrecompiledLoader;\n\n      var WebLoader = /*#__PURE__*/function (_Loader) {\n        _inheritsLoose(WebLoader, _Loader);\n\n        function WebLoader(baseURL, opts) {\n          var _this;\n\n          _this = _Loader.call(this) || this;\n          _this.baseURL = baseURL || '.';\n          opts = opts || {}; // By default, the cache is turned off because there's no way\n          // to \"watch\" templates over HTTP, so they are re-downloaded\n          // and compiled each time. (Remember, PRECOMPILE YOUR\n          // TEMPLATES in production!)\n\n          _this.useCache = !!opts.useCache; // We default `async` to false so that the simple synchronous\n          // API can be used when you aren't doing anything async in\n          // your templates (which is most of the time). This performs a\n          // sync ajax request, but that's ok because it should *only*\n          // happen in development. PRECOMPILE YOUR TEMPLATES.\n\n          _this.async = !!opts.async;\n          return _this;\n        }\n\n        var _proto = WebLoader.prototype;\n\n        _proto.resolve = function resolve(from, to) {\n          throw new Error('relative templates not support in the browser yet');\n        };\n\n        _proto.getSource = function getSource(name, cb) {\n          var _this2 = this;\n\n          var useCache = this.useCache;\n          var result;\n          this.fetch(this.baseURL + '/' + name, function (err, src) {\n            if (err) {\n              if (cb) {\n                cb(err.content);\n              } else if (err.status === 404) {\n                result = null;\n              } else {\n                throw err.content;\n              }\n            } else {\n              result = {\n                src: src,\n                path: name,\n                noCache: !useCache\n              };\n\n              _this2.emit('load', name, result);\n\n              if (cb) {\n                cb(null, result);\n              }\n            }\n          }); // if this WebLoader isn't running asynchronously, the\n          // fetch above would actually run sync and we'll have a\n          // result here\n\n          return result;\n        };\n\n        _proto.fetch = function fetch(url, cb) {\n          // Only in the browser please\n          if (typeof window === 'undefined') {\n            throw new Error('WebLoader can only by used in a browser');\n          }\n\n          var ajax = new XMLHttpRequest();\n          var loading = true;\n\n          ajax.onreadystatechange = function () {\n            if (ajax.readyState === 4 && loading) {\n              loading = false;\n\n              if (ajax.status === 0 || ajax.status === 200) {\n                cb(null, ajax.responseText);\n              } else {\n                cb({\n                  status: ajax.status,\n                  content: ajax.responseText\n                });\n              }\n            }\n          };\n\n          url += (url.indexOf('?') === -1 ? '?' : '&') + 's=' + new Date().getTime();\n          ajax.open('GET', url, this.async);\n          ajax.send();\n        };\n\n        return WebLoader;\n      }(Loader);\n\n      module.exports = {\n        WebLoader: WebLoader,\n        PrecompiledLoader: PrecompiledLoader\n      };\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var lib = __webpack_require__(0);\n\n      var _require = __webpack_require__(7),\n          Environment = _require.Environment,\n          Template = _require.Template;\n\n      var Loader = __webpack_require__(6);\n\n      var loaders = __webpack_require__(10);\n\n      var precompile = __webpack_require__(23);\n\n      var compiler = __webpack_require__(5);\n\n      var parser = __webpack_require__(8);\n\n      var lexer = __webpack_require__(9);\n\n      var runtime = __webpack_require__(2);\n\n      var nodes = __webpack_require__(3);\n\n      var installJinjaCompat = __webpack_require__(25); // A single instance of an environment, since this is so commonly used\n\n\n      var e;\n\n      function configure(templatesPath, opts) {\n        opts = opts || {};\n\n        if (lib.isObject(templatesPath)) {\n          opts = templatesPath;\n          templatesPath = null;\n        }\n\n        var TemplateLoader;\n\n        if (loaders.FileSystemLoader) {\n          TemplateLoader = new loaders.FileSystemLoader(templatesPath, {\n            watch: opts.watch,\n            noCache: opts.noCache\n          });\n        } else if (loaders.WebLoader) {\n          TemplateLoader = new loaders.WebLoader(templatesPath, {\n            useCache: opts.web && opts.web.useCache,\n            async: opts.web && opts.web.async\n          });\n        }\n\n        e = new Environment(TemplateLoader, opts);\n\n        if (opts && opts.express) {\n          e.express(opts.express);\n        }\n\n        return e;\n      }\n\n      module.exports = {\n        Environment: Environment,\n        Template: Template,\n        Loader: Loader,\n        FileSystemLoader: loaders.FileSystemLoader,\n        NodeResolveLoader: loaders.NodeResolveLoader,\n        PrecompiledLoader: loaders.PrecompiledLoader,\n        WebLoader: loaders.WebLoader,\n        compiler: compiler,\n        parser: parser,\n        lexer: lexer,\n        runtime: runtime,\n        lib: lib,\n        nodes: nodes,\n        installJinjaCompat: installJinjaCompat,\n        configure: configure,\n        reset: function reset() {\n          e = undefined;\n        },\n        compile: function compile(src, env, path, eagerCompile) {\n          if (!e) {\n            configure();\n          }\n\n          return new Template(src, env, path, eagerCompile);\n        },\n        render: function render(name, ctx, cb) {\n          if (!e) {\n            configure();\n          }\n\n          return e.render(name, ctx, cb);\n        },\n        renderString: function renderString(src, ctx, cb) {\n          if (!e) {\n            configure();\n          }\n\n          return e.renderString(src, ctx, cb);\n        },\n        precompile: precompile ? precompile.precompile : undefined,\n        precompileString: precompile ? precompile.precompileString : undefined\n      };\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\"; // rawAsap provides everything we need except exception management.\n\n      var rawAsap = __webpack_require__(13); // RawTasks are recycled to reduce GC churn.\n\n\n      var freeTasks = []; // We queue errors to ensure they are thrown in right order (FIFO).\n      // Array-as-queue is good enough here, since we are just dealing with exceptions.\n\n      var pendingErrors = [];\n      var requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\n      function throwFirstError() {\n        if (pendingErrors.length) {\n          throw pendingErrors.shift();\n        }\n      }\n      /**\n       * Calls a task as soon as possible after returning, in its own event, with priority\n       * over other events like animation, reflow, and repaint. An error thrown from an\n       * event will not interrupt, nor even substantially slow down the processing of\n       * other events, but will be rather postponed to a lower priority event.\n       * @param {{call}} task A callable object, typically a function that takes no\n       * arguments.\n       */\n\n\n      module.exports = asap;\n\n      function asap(task) {\n        var rawTask;\n\n        if (freeTasks.length) {\n          rawTask = freeTasks.pop();\n        } else {\n          rawTask = new RawTask();\n        }\n\n        rawTask.task = task;\n        rawAsap(rawTask);\n      } // We wrap tasks with recyclable task objects.  A task object implements\n      // `call`, just like a function.\n\n\n      function RawTask() {\n        this.task = null;\n      } // The sole purpose of wrapping the task is to catch the exception and recycle\n      // the task object after its single use.\n\n\n      RawTask.prototype.call = function () {\n        try {\n          this.task.call();\n        } catch (error) {\n          if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n          } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n          }\n        } finally {\n          this.task = null;\n          freeTasks[freeTasks.length] = this;\n        }\n      };\n      /***/\n\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n      /* WEBPACK VAR INJECTION */\n\n      (function (global) {\n        // Use the fastest means possible to execute a task in its own turn, with\n        // priority over other events including IO, animation, reflow, and redraw\n        // events in browsers.\n        //\n        // An exception thrown by a task will permanently interrupt the processing of\n        // subsequent tasks. The higher level `asap` function ensures that if an\n        // exception is thrown by a task, that the task queue will continue flushing as\n        // soon as possible, but if you use `rawAsap` directly, you are responsible to\n        // either ensure that no exceptions are thrown from your task, or to manually\n        // call `rawAsap.requestFlush` if an exception is thrown.\n        module.exports = rawAsap;\n\n        function rawAsap(task) {\n          if (!queue.length) {\n            requestFlush();\n            flushing = true;\n          } // Equivalent to push, but avoids a function call.\n\n\n          queue[queue.length] = task;\n        }\n\n        var queue = []; // Once a flush has been requested, no further calls to `requestFlush` are\n        // necessary until the next `flush` completes.\n\n        var flushing = false; // `requestFlush` is an implementation-specific method that attempts to kick\n        // off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n        // the event queue before yielding to the browser's own event loop.\n\n        var requestFlush; // The position of the next task to execute in the task queue. This is\n        // preserved between calls to `flush` so that it can be resumed if\n        // a task throws an exception.\n\n        var index = 0; // If a task schedules additional tasks recursively, the task queue can grow\n        // unbounded. To prevent memory exhaustion, the task queue will periodically\n        // truncate already-completed tasks.\n\n        var capacity = 1024; // The flush function processes all tasks that have been scheduled with\n        // `rawAsap` unless and until one of those tasks throws an exception.\n        // If a task throws an exception, `flush` ensures that its state will remain\n        // consistent and will resume where it left off when called again.\n        // However, `flush` does not make any arrangements to be called again if an\n        // exception is thrown.\n\n        function flush() {\n          while (index < queue.length) {\n            var currentIndex = index; // Advance the index before calling the task. This ensures that we will\n            // begin flushing on the next task the task throws an error.\n\n            index = index + 1;\n            queue[currentIndex].call(); // Prevent leaking memory for long chains of recursive calls to `asap`.\n            // If we call `asap` within tasks scheduled by `asap`, the queue will\n            // grow, but to avoid an O(n) walk for every task we execute, we don't\n            // shift tasks off the queue after they have been executed.\n            // Instead, we periodically shift 1024 tasks off the queue.\n\n            if (index > capacity) {\n              // Manually shift all values starting at the index back to the\n              // beginning of the queue.\n              for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n              }\n\n              queue.length -= index;\n              index = 0;\n            }\n          }\n\n          queue.length = 0;\n          index = 0;\n          flushing = false;\n        } // `requestFlush` is implemented using a strategy based on data collected from\n        // every available SauceLabs Selenium web driver worker at time of writing.\n        // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n        // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n        // have WebKitMutationObserver but not un-prefixed MutationObserver.\n        // Must use `global` or `self` instead of `window` to work in both frames and web\n        // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n        /* globals self */\n\n\n        var scope = typeof global !== \"undefined\" ? global : self;\n        var BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver; // MutationObservers are desirable because they have high priority and work\n        // reliably everywhere they are implemented.\n        // They are implemented in all modern browsers.\n        //\n        // - Android 4-4.3\n        // - Chrome 26-34\n        // - Firefox 14-29\n        // - Internet Explorer 11\n        // - iPad Safari 6-7.1\n        // - iPhone Safari 7-7.1\n        // - Safari 6-7\n\n        if (typeof BrowserMutationObserver === \"function\") {\n          requestFlush = makeRequestCallFromMutationObserver(flush); // MessageChannels are desirable because they give direct access to the HTML\n          // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n          // 11-12, and in web workers in many engines.\n          // Although message channels yield to any queued rendering and IO tasks, they\n          // would be better than imposing the 4ms delay of timers.\n          // However, they do not work reliably in Internet Explorer or Safari.\n          // Internet Explorer 10 is the only browser that has setImmediate but does\n          // not have MutationObservers.\n          // Although setImmediate yields to the browser's renderer, it would be\n          // preferrable to falling back to setTimeout since it does not have\n          // the minimum 4ms penalty.\n          // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n          // Desktop to a lesser extent) that renders both setImmediate and\n          // MessageChannel useless for the purposes of ASAP.\n          // https://github.com/kriskowal/q/issues/396\n          // Timers are implemented universally.\n          // We fall back to timers in workers in most engines, and in foreground\n          // contexts in the following browsers.\n          // However, note that even this simple case requires nuances to operate in a\n          // broad spectrum of browsers.\n          //\n          // - Firefox 3-13\n          // - Internet Explorer 6-9\n          // - iPad Safari 4.3\n          // - Lynx 2.8.7\n        } else {\n          requestFlush = makeRequestCallFromTimer(flush);\n        } // `requestFlush` requests that the high priority event queue be flushed as\n        // soon as possible.\n        // This is useful to prevent an error thrown in a task from stalling the event\n        // queue if the exception handled by Node.js’s\n        // `process.on(\"uncaughtException\")` or by a domain.\n\n\n        rawAsap.requestFlush = requestFlush; // To request a high priority event, we induce a mutation observer by toggling\n        // the text of a text node between \"1\" and \"-1\".\n\n        function makeRequestCallFromMutationObserver(callback) {\n          var toggle = 1;\n          var observer = new BrowserMutationObserver(callback);\n          var node = document.createTextNode(\"\");\n          observer.observe(node, {\n            characterData: true\n          });\n          return function requestCall() {\n            toggle = -toggle;\n            node.data = toggle;\n          };\n        } // The message channel technique was discovered by Malte Ubl and was the\n        // original foundation for this library.\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        // Safari 6.0.5 (at least) intermittently fails to create message ports on a\n        // page's first load. Thankfully, this version of Safari supports\n        // MutationObservers, so we don't need to fall back in that case.\n        // function makeRequestCallFromMessageChannel(callback) {\n        //     var channel = new MessageChannel();\n        //     channel.port1.onmessage = callback;\n        //     return function requestCall() {\n        //         channel.port2.postMessage(0);\n        //     };\n        // }\n        // For reasons explained above, we are also unable to use `setImmediate`\n        // under any circumstances.\n        // Even if we were, there is another bug in Internet Explorer 10.\n        // It is not sufficient to assign `setImmediate` to `requestFlush` because\n        // `setImmediate` must be called *by name* and therefore must be wrapped in a\n        // closure.\n        // Never forget.\n        // function makeRequestCallFromSetImmediate(callback) {\n        //     return function requestCall() {\n        //         setImmediate(callback);\n        //     };\n        // }\n        // Safari 6.0 has a problem where timers will get lost while the user is\n        // scrolling. This problem does not impact ASAP because Safari 6.0 supports\n        // mutation observers, so that implementation is used instead.\n        // However, if we ever elect to use timers in Safari, the prevalent work-around\n        // is to add a scroll event listener that calls for a flush.\n        // `setTimeout` does not call the passed callback if the delay is less than\n        // approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n        // even then.\n\n\n        function makeRequestCallFromTimer(callback) {\n          return function requestCall() {\n            // We dispatch a timeout with a specified delay of 0 for engines that\n            // can reliably accommodate that request. This will usually be snapped\n            // to a 4 milisecond delay, but once we're flushing, there's no delay\n            // between events.\n            var timeoutHandle = setTimeout(handleTimer, 0); // However, since this timer gets frequently dropped in Firefox\n            // workers, we enlist an interval handle that will try to fire\n            // an event 20 times per second until it succeeds.\n\n            var intervalHandle = setInterval(handleTimer, 50);\n\n            function handleTimer() {\n              // Whichever timer succeeds will cancel both timers and\n              // execute the callback.\n              clearTimeout(timeoutHandle);\n              clearInterval(intervalHandle);\n              callback();\n            }\n          };\n        } // This is for `asap.js` only.\n        // Its name will be periodically randomized to break any code that depends on\n        // its existence.\n\n\n        rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer; // ASAP was originally a nextTick shim included in Q. This was factored out\n        // into this ASAP package. It was later adapted to RSVP which made further\n        // amendments. These decisions, particularly to marginalize MessageChannel and\n        // to capture the MutationObserver implementation in a closure, were integrated\n        // back into ASAP proper.\n        // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n        /* WEBPACK VAR INJECTION */\n      }).call(exports, __webpack_require__(14));\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports) {\n      var g; // This works in non-strict mode\n\n      g = function () {\n        return this;\n      }();\n\n      try {\n        // This works if eval is allowed (see CSP)\n        g = g || Function(\"return this\")() || (1, eval)(\"this\");\n      } catch (e) {\n        // This works if the window reference is available\n        if (typeof window === \"object\") g = window;\n      } // g can still be undefined, but nothing to do about it...\n      // We return undefined, instead of nothing here, so it's\n      // easier to handle this case. if(!global) { ...}\n\n\n      module.exports = g;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__; // MIT license (by Elan Shanker).\n\n\n      (function (globals) {\n        'use strict';\n\n        var executeSync = function () {\n          var args = Array.prototype.slice.call(arguments);\n\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, args.splice(1));\n          }\n        };\n\n        var executeAsync = function (fn) {\n          if (typeof setImmediate === 'function') {\n            setImmediate(fn);\n          } else if (typeof process !== 'undefined' && process.nextTick) {\n            process.nextTick(fn);\n          } else {\n            setTimeout(fn, 0);\n          }\n        };\n\n        var makeIterator = function (tasks) {\n          var makeCallback = function (index) {\n            var fn = function () {\n              if (tasks.length) {\n                tasks[index].apply(null, arguments);\n              }\n\n              return fn.next();\n            };\n\n            fn.next = function () {\n              return index < tasks.length - 1 ? makeCallback(index + 1) : null;\n            };\n\n            return fn;\n          };\n\n          return makeCallback(0);\n        };\n\n        var _isArray = Array.isArray || function (maybeArray) {\n          return Object.prototype.toString.call(maybeArray) === '[object Array]';\n        };\n\n        var waterfall = function (tasks, callback, forceAsync) {\n          var nextTick = forceAsync ? executeAsync : executeSync;\n\n          callback = callback || function () {};\n\n          if (!_isArray(tasks)) {\n            var err = new Error('First argument to waterfall must be an array of functions');\n            return callback(err);\n          }\n\n          if (!tasks.length) {\n            return callback();\n          }\n\n          var wrapIterator = function (iterator) {\n            return function (err) {\n              if (err) {\n                callback.apply(null, arguments);\n\n                callback = function () {};\n              } else {\n                var args = Array.prototype.slice.call(arguments, 1);\n                var next = iterator.next();\n\n                if (next) {\n                  args.push(wrapIterator(next));\n                } else {\n                  args.push(callback);\n                }\n\n                nextTick(function () {\n                  iterator.apply(null, args);\n                });\n              }\n            };\n          };\n\n          wrapIterator(makeIterator(tasks))();\n        };\n\n        if (true) {\n          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return waterfall;\n          }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // RequireJS\n        } else if (typeof module !== 'undefined' && module.exports) {\n          module.exports = waterfall; // CommonJS\n        } else {\n          globals.waterfall = waterfall; // <script>\n        }\n      })(this);\n      /***/\n\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\"; // Copyright Joyent, Inc. and other Node contributors.\n      //\n      // Permission is hereby granted, free of charge, to any person obtaining a\n      // copy of this software and associated documentation files (the\n      // \"Software\"), to deal in the Software without restriction, including\n      // without limitation the rights to use, copy, modify, merge, publish,\n      // distribute, sublicense, and/or sell copies of the Software, and to permit\n      // persons to whom the Software is furnished to do so, subject to the\n      // following conditions:\n      //\n      // The above copyright notice and this permission notice shall be included\n      // in all copies or substantial portions of the Software.\n      //\n      // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n      // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n      // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n      // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n      // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n      // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n      // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n      var R = typeof Reflect === 'object' ? Reflect : null;\n      var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n        return Function.prototype.apply.call(target, receiver, args);\n      };\n      var ReflectOwnKeys;\n\n      if (R && typeof R.ownKeys === 'function') {\n        ReflectOwnKeys = R.ownKeys;\n      } else if (Object.getOwnPropertySymbols) {\n        ReflectOwnKeys = function ReflectOwnKeys(target) {\n          return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n        };\n      } else {\n        ReflectOwnKeys = function ReflectOwnKeys(target) {\n          return Object.getOwnPropertyNames(target);\n        };\n      }\n\n      function ProcessEmitWarning(warning) {\n        if (console && console.warn) console.warn(warning);\n      }\n\n      var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n        return value !== value;\n      };\n\n      function EventEmitter() {\n        EventEmitter.init.call(this);\n      }\n\n      module.exports = EventEmitter;\n      module.exports.once = once; // Backwards-compat with node 0.10.x\n\n      EventEmitter.EventEmitter = EventEmitter;\n      EventEmitter.prototype._events = undefined;\n      EventEmitter.prototype._eventsCount = 0;\n      EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n      // added to it. This is a useful default which helps finding memory leaks.\n\n      var defaultMaxListeners = 10;\n\n      function checkListener(listener) {\n        if (typeof listener !== 'function') {\n          throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n        }\n      }\n\n      Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n        enumerable: true,\n        get: function () {\n          return defaultMaxListeners;\n        },\n        set: function (arg) {\n          if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n            throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n          }\n\n          defaultMaxListeners = arg;\n        }\n      });\n\n      EventEmitter.init = function () {\n        if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        }\n\n        this._maxListeners = this._maxListeners || undefined;\n      }; // Obviously not all Emitters should be limited to 10. This function allows\n      // that to be increased. Set to zero for unlimited.\n\n\n      EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n        if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n          throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n        }\n\n        this._maxListeners = n;\n        return this;\n      };\n\n      function _getMaxListeners(that) {\n        if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n        return that._maxListeners;\n      }\n\n      EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n        return _getMaxListeners(this);\n      };\n\n      EventEmitter.prototype.emit = function emit(type) {\n        var args = [];\n\n        for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n\n        var doError = type === 'error';\n        var events = this._events;\n        if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n        if (doError) {\n          var er;\n          if (args.length > 0) er = args[0];\n\n          if (er instanceof Error) {\n            // Note: The comments on the `throw` lines are intentional, they show\n            // up in Node's output if this results in an unhandled exception.\n            throw er; // Unhandled 'error' event\n          } // At least give some kind of context to the user\n\n\n          var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n          err.context = er;\n          throw err; // Unhandled 'error' event\n        }\n\n        var handler = events[type];\n        if (handler === undefined) return false;\n\n        if (typeof handler === 'function') {\n          ReflectApply(handler, this, args);\n        } else {\n          var len = handler.length;\n          var listeners = arrayClone(handler, len);\n\n          for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n        }\n\n        return true;\n      };\n\n      function _addListener(target, type, listener, prepend) {\n        var m;\n        var events;\n        var existing;\n        checkListener(listener);\n        events = target._events;\n\n        if (events === undefined) {\n          events = target._events = Object.create(null);\n          target._eventsCount = 0;\n        } else {\n          // To avoid recursion in the case that type === \"newListener\"! Before\n          // adding it to the listeners, first emit \"newListener\".\n          if (events.newListener !== undefined) {\n            target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n            // this._events to be assigned to a new object\n\n            events = target._events;\n          }\n\n          existing = events[type];\n        }\n\n        if (existing === undefined) {\n          // Optimize the case of one listener. Don't need the extra array object.\n          existing = events[type] = listener;\n          ++target._eventsCount;\n        } else {\n          if (typeof existing === 'function') {\n            // Adding the second element, need to change to array.\n            existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n          } else if (prepend) {\n            existing.unshift(listener);\n          } else {\n            existing.push(listener);\n          } // Check for listener leak\n\n\n          m = _getMaxListeners(target);\n\n          if (m > 0 && existing.length > m && !existing.warned) {\n            existing.warned = true; // No error code for this since it is a Warning\n            // eslint-disable-next-line no-restricted-syntax\n\n            var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n            w.name = 'MaxListenersExceededWarning';\n            w.emitter = target;\n            w.type = type;\n            w.count = existing.length;\n            ProcessEmitWarning(w);\n          }\n        }\n\n        return target;\n      }\n\n      EventEmitter.prototype.addListener = function addListener(type, listener) {\n        return _addListener(this, type, listener, false);\n      };\n\n      EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n      EventEmitter.prototype.prependListener = function prependListener(type, listener) {\n        return _addListener(this, type, listener, true);\n      };\n\n      function onceWrapper() {\n        if (!this.fired) {\n          this.target.removeListener(this.type, this.wrapFn);\n          this.fired = true;\n          if (arguments.length === 0) return this.listener.call(this.target);\n          return this.listener.apply(this.target, arguments);\n        }\n      }\n\n      function _onceWrap(target, type, listener) {\n        var state = {\n          fired: false,\n          wrapFn: undefined,\n          target: target,\n          type: type,\n          listener: listener\n        };\n        var wrapped = onceWrapper.bind(state);\n        wrapped.listener = listener;\n        state.wrapFn = wrapped;\n        return wrapped;\n      }\n\n      EventEmitter.prototype.once = function once(type, listener) {\n        checkListener(listener);\n        this.on(type, _onceWrap(this, type, listener));\n        return this;\n      };\n\n      EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n        checkListener(listener);\n        this.prependListener(type, _onceWrap(this, type, listener));\n        return this;\n      }; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\n      EventEmitter.prototype.removeListener = function removeListener(type, listener) {\n        var list, events, position, i, originalListener;\n        checkListener(listener);\n        events = this._events;\n        if (events === undefined) return this;\n        list = events[type];\n        if (list === undefined) return this;\n\n        if (list === listener || list.listener === listener) {\n          if (--this._eventsCount === 0) this._events = Object.create(null);else {\n            delete events[type];\n            if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n          }\n        } else if (typeof list !== 'function') {\n          position = -1;\n\n          for (i = list.length - 1; i >= 0; i--) {\n            if (list[i] === listener || list[i].listener === listener) {\n              originalListener = list[i].listener;\n              position = i;\n              break;\n            }\n          }\n\n          if (position < 0) return this;\n          if (position === 0) list.shift();else {\n            spliceOne(list, position);\n          }\n          if (list.length === 1) events[type] = list[0];\n          if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n        }\n\n        return this;\n      };\n\n      EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\n      EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n        var listeners, events, i;\n        events = this._events;\n        if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n        if (events.removeListener === undefined) {\n          if (arguments.length === 0) {\n            this._events = Object.create(null);\n            this._eventsCount = 0;\n          } else if (events[type] !== undefined) {\n            if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n          }\n\n          return this;\n        } // emit removeListener for all listeners on all events\n\n\n        if (arguments.length === 0) {\n          var keys = Object.keys(events);\n          var key;\n\n          for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n            if (key === 'removeListener') continue;\n            this.removeAllListeners(key);\n          }\n\n          this.removeAllListeners('removeListener');\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n          return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n          this.removeListener(type, listeners);\n        } else if (listeners !== undefined) {\n          // LIFO order\n          for (i = listeners.length - 1; i >= 0; i--) {\n            this.removeListener(type, listeners[i]);\n          }\n        }\n\n        return this;\n      };\n\n      function _listeners(target, type, unwrap) {\n        var events = target._events;\n        if (events === undefined) return [];\n        var evlistener = events[type];\n        if (evlistener === undefined) return [];\n        if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n        return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n      }\n\n      EventEmitter.prototype.listeners = function listeners(type) {\n        return _listeners(this, type, true);\n      };\n\n      EventEmitter.prototype.rawListeners = function rawListeners(type) {\n        return _listeners(this, type, false);\n      };\n\n      EventEmitter.listenerCount = function (emitter, type) {\n        if (typeof emitter.listenerCount === 'function') {\n          return emitter.listenerCount(type);\n        } else {\n          return listenerCount.call(emitter, type);\n        }\n      };\n\n      EventEmitter.prototype.listenerCount = listenerCount;\n\n      function listenerCount(type) {\n        var events = this._events;\n\n        if (events !== undefined) {\n          var evlistener = events[type];\n\n          if (typeof evlistener === 'function') {\n            return 1;\n          } else if (evlistener !== undefined) {\n            return evlistener.length;\n          }\n        }\n\n        return 0;\n      }\n\n      EventEmitter.prototype.eventNames = function eventNames() {\n        return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n      };\n\n      function arrayClone(arr, n) {\n        var copy = new Array(n);\n\n        for (var i = 0; i < n; ++i) copy[i] = arr[i];\n\n        return copy;\n      }\n\n      function spliceOne(list, index) {\n        for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n\n        list.pop();\n      }\n\n      function unwrapListeners(arr) {\n        var ret = new Array(arr.length);\n\n        for (var i = 0; i < ret.length; ++i) {\n          ret[i] = arr[i].listener || arr[i];\n        }\n\n        return ret;\n      }\n\n      function once(emitter, name) {\n        return new Promise(function (resolve, reject) {\n          function eventListener() {\n            if (errorListener !== undefined) {\n              emitter.removeListener('error', errorListener);\n            }\n\n            resolve([].slice.call(arguments));\n          }\n\n          ;\n          var errorListener; // Adding an error listener is not optional because\n          // if an error is thrown on an event emitter we cannot\n          // guarantee that the actual event we are waiting will\n          // be fired. The result could be a silent way to create\n          // memory or file descriptor leaks, which is something\n          // we should avoid.\n\n          if (name !== 'error') {\n            errorListener = function errorListener(err) {\n              emitter.removeListener(name, eventListener);\n              reject(err);\n            };\n\n            emitter.once('error', errorListener);\n          }\n\n          emitter.once(name, eventListener);\n        });\n      }\n      /***/\n\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var nodes = __webpack_require__(3);\n\n      var lib = __webpack_require__(0);\n\n      var sym = 0;\n\n      function gensym() {\n        return 'hole_' + sym++;\n      } // copy-on-write version of map\n\n\n      function mapCOW(arr, func) {\n        var res = null;\n\n        for (var i = 0; i < arr.length; i++) {\n          var item = func(arr[i]);\n\n          if (item !== arr[i]) {\n            if (!res) {\n              res = arr.slice();\n            }\n\n            res[i] = item;\n          }\n        }\n\n        return res || arr;\n      }\n\n      function walk(ast, func, depthFirst) {\n        if (!(ast instanceof nodes.Node)) {\n          return ast;\n        }\n\n        if (!depthFirst) {\n          var astT = func(ast);\n\n          if (astT && astT !== ast) {\n            return astT;\n          }\n        }\n\n        if (ast instanceof nodes.NodeList) {\n          var children = mapCOW(ast.children, function (node) {\n            return walk(node, func, depthFirst);\n          });\n\n          if (children !== ast.children) {\n            ast = new nodes[ast.typename](ast.lineno, ast.colno, children);\n          }\n        } else if (ast instanceof nodes.CallExtension) {\n          var args = walk(ast.args, func, depthFirst);\n          var contentArgs = mapCOW(ast.contentArgs, function (node) {\n            return walk(node, func, depthFirst);\n          });\n\n          if (args !== ast.args || contentArgs !== ast.contentArgs) {\n            ast = new nodes[ast.typename](ast.extName, ast.prop, args, contentArgs);\n          }\n        } else {\n          var props = ast.fields.map(function (field) {\n            return ast[field];\n          });\n          var propsT = mapCOW(props, function (prop) {\n            return walk(prop, func, depthFirst);\n          });\n\n          if (propsT !== props) {\n            ast = new nodes[ast.typename](ast.lineno, ast.colno);\n            propsT.forEach(function (prop, i) {\n              ast[ast.fields[i]] = prop;\n            });\n          }\n        }\n\n        return depthFirst ? func(ast) || ast : ast;\n      }\n\n      function depthWalk(ast, func) {\n        return walk(ast, func, true);\n      }\n\n      function _liftFilters(node, asyncFilters, prop) {\n        var children = [];\n        var walked = depthWalk(prop ? node[prop] : node, function (descNode) {\n          var symbol;\n\n          if (descNode instanceof nodes.Block) {\n            return descNode;\n          } else if (descNode instanceof nodes.Filter && lib.indexOf(asyncFilters, descNode.name.value) !== -1 || descNode instanceof nodes.CallExtensionAsync) {\n            symbol = new nodes.Symbol(descNode.lineno, descNode.colno, gensym());\n            children.push(new nodes.FilterAsync(descNode.lineno, descNode.colno, descNode.name, descNode.args, symbol));\n          }\n\n          return symbol;\n        });\n\n        if (prop) {\n          node[prop] = walked;\n        } else {\n          node = walked;\n        }\n\n        if (children.length) {\n          children.push(node);\n          return new nodes.NodeList(node.lineno, node.colno, children);\n        } else {\n          return node;\n        }\n      }\n\n      function liftFilters(ast, asyncFilters) {\n        return depthWalk(ast, function (node) {\n          if (node instanceof nodes.Output) {\n            return _liftFilters(node, asyncFilters);\n          } else if (node instanceof nodes.Set) {\n            return _liftFilters(node, asyncFilters, 'value');\n          } else if (node instanceof nodes.For) {\n            return _liftFilters(node, asyncFilters, 'arr');\n          } else if (node instanceof nodes.If) {\n            return _liftFilters(node, asyncFilters, 'cond');\n          } else if (node instanceof nodes.CallExtension) {\n            return _liftFilters(node, asyncFilters, 'args');\n          } else {\n            return undefined;\n          }\n        });\n      }\n\n      function liftSuper(ast) {\n        return walk(ast, function (blockNode) {\n          if (!(blockNode instanceof nodes.Block)) {\n            return;\n          }\n\n          var hasSuper = false;\n          var symbol = gensym();\n          blockNode.body = walk(blockNode.body, function (node) {\n            // eslint-disable-line consistent-return\n            if (node instanceof nodes.FunCall && node.name.value === 'super') {\n              hasSuper = true;\n              return new nodes.Symbol(node.lineno, node.colno, symbol);\n            }\n          });\n\n          if (hasSuper) {\n            blockNode.body.children.unshift(new nodes.Super(0, 0, blockNode.name, new nodes.Symbol(0, 0, symbol)));\n          }\n        });\n      }\n\n      function convertStatements(ast) {\n        return depthWalk(ast, function (node) {\n          if (!(node instanceof nodes.If) && !(node instanceof nodes.For)) {\n            return undefined;\n          }\n\n          var async = false;\n          walk(node, function (child) {\n            if (child instanceof nodes.FilterAsync || child instanceof nodes.IfAsync || child instanceof nodes.AsyncEach || child instanceof nodes.AsyncAll || child instanceof nodes.CallExtensionAsync) {\n              async = true; // Stop iterating by returning the node\n\n              return child;\n            }\n\n            return undefined;\n          });\n\n          if (async) {\n            if (node instanceof nodes.If) {\n              return new nodes.IfAsync(node.lineno, node.colno, node.cond, node.body, node.else_);\n            } else if (node instanceof nodes.For && !(node instanceof nodes.AsyncAll)) {\n              return new nodes.AsyncEach(node.lineno, node.colno, node.arr, node.name, node.body, node.else_);\n            }\n          }\n\n          return undefined;\n        });\n      }\n\n      function cps(ast, asyncFilters) {\n        return convertStatements(liftSuper(liftFilters(ast, asyncFilters)));\n      }\n\n      function transform(ast, asyncFilters) {\n        return cps(ast, asyncFilters || []);\n      } // var parser = require('./parser');\n      // var src = 'hello {% foo %}{% endfoo %} end';\n      // var ast = transform(parser.parse(src, [new FooExtension()]), ['bar']);\n      // nodes.printNodes(ast);\n\n\n      module.exports = {\n        transform: transform\n      };\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var lib = __webpack_require__(0);\n\n      var r = __webpack_require__(2);\n\n      var exports = module.exports = {};\n\n      function normalize(value, defaultValue) {\n        if (value === null || value === undefined || value === false) {\n          return defaultValue;\n        }\n\n        return value;\n      }\n\n      exports.abs = Math.abs;\n\n      function isNaN(num) {\n        return num !== num; // eslint-disable-line no-self-compare\n      }\n\n      function batch(arr, linecount, fillWith) {\n        var i;\n        var res = [];\n        var tmp = [];\n\n        for (i = 0; i < arr.length; i++) {\n          if (i % linecount === 0 && tmp.length) {\n            res.push(tmp);\n            tmp = [];\n          }\n\n          tmp.push(arr[i]);\n        }\n\n        if (tmp.length) {\n          if (fillWith) {\n            for (i = tmp.length; i < linecount; i++) {\n              tmp.push(fillWith);\n            }\n          }\n\n          res.push(tmp);\n        }\n\n        return res;\n      }\n\n      exports.batch = batch;\n\n      function capitalize(str) {\n        str = normalize(str, '');\n        var ret = str.toLowerCase();\n        return r.copySafeness(str, ret.charAt(0).toUpperCase() + ret.slice(1));\n      }\n\n      exports.capitalize = capitalize;\n\n      function center(str, width) {\n        str = normalize(str, '');\n        width = width || 80;\n\n        if (str.length >= width) {\n          return str;\n        }\n\n        var spaces = width - str.length;\n        var pre = lib.repeat(' ', spaces / 2 - spaces % 2);\n        var post = lib.repeat(' ', spaces / 2);\n        return r.copySafeness(str, pre + str + post);\n      }\n\n      exports.center = center;\n\n      function default_(val, def, bool) {\n        if (bool) {\n          return val || def;\n        } else {\n          return val !== undefined ? val : def;\n        }\n      } // TODO: it is confusing to export something called 'default'\n\n\n      exports['default'] = default_; // eslint-disable-line dot-notation\n\n      function dictsort(val, caseSensitive, by) {\n        if (!lib.isObject(val)) {\n          throw new lib.TemplateError('dictsort filter: val must be an object');\n        }\n\n        var array = []; // deliberately include properties from the object's prototype\n\n        for (var k in val) {\n          // eslint-disable-line guard-for-in, no-restricted-syntax\n          array.push([k, val[k]]);\n        }\n\n        var si;\n\n        if (by === undefined || by === 'key') {\n          si = 0;\n        } else if (by === 'value') {\n          si = 1;\n        } else {\n          throw new lib.TemplateError('dictsort filter: You can only sort by either key or value');\n        }\n\n        array.sort(function (t1, t2) {\n          var a = t1[si];\n          var b = t2[si];\n\n          if (!caseSensitive) {\n            if (lib.isString(a)) {\n              a = a.toUpperCase();\n            }\n\n            if (lib.isString(b)) {\n              b = b.toUpperCase();\n            }\n          }\n\n          return a > b ? 1 : a === b ? 0 : -1; // eslint-disable-line no-nested-ternary\n        });\n        return array;\n      }\n\n      exports.dictsort = dictsort;\n\n      function dump(obj, spaces) {\n        return JSON.stringify(obj, null, spaces);\n      }\n\n      exports.dump = dump;\n\n      function escape(str) {\n        if (str instanceof r.SafeString) {\n          return str;\n        }\n\n        str = str === null || str === undefined ? '' : str;\n        return r.markSafe(lib.escape(str.toString()));\n      }\n\n      exports.escape = escape;\n\n      function safe(str) {\n        if (str instanceof r.SafeString) {\n          return str;\n        }\n\n        str = str === null || str === undefined ? '' : str;\n        return r.markSafe(str.toString());\n      }\n\n      exports.safe = safe;\n\n      function first(arr) {\n        return arr[0];\n      }\n\n      exports.first = first;\n\n      function forceescape(str) {\n        str = str === null || str === undefined ? '' : str;\n        return r.markSafe(lib.escape(str.toString()));\n      }\n\n      exports.forceescape = forceescape;\n\n      function groupby(arr, attr) {\n        return lib.groupBy(arr, attr, this.env.opts.throwOnUndefined);\n      }\n\n      exports.groupby = groupby;\n\n      function indent(str, width, indentfirst) {\n        str = normalize(str, '');\n\n        if (str === '') {\n          return '';\n        }\n\n        width = width || 4; // let res = '';\n\n        var lines = str.split('\\n');\n        var sp = lib.repeat(' ', width);\n        var res = lines.map(function (l, i) {\n          return i === 0 && !indentfirst ? l : \"\" + sp + l;\n        }).join('\\n');\n        return r.copySafeness(str, res);\n      }\n\n      exports.indent = indent;\n\n      function join(arr, del, attr) {\n        del = del || '';\n\n        if (attr) {\n          arr = lib.map(arr, function (v) {\n            return v[attr];\n          });\n        }\n\n        return arr.join(del);\n      }\n\n      exports.join = join;\n\n      function last(arr) {\n        return arr[arr.length - 1];\n      }\n\n      exports.last = last;\n\n      function lengthFilter(val) {\n        var value = normalize(val, '');\n\n        if (value !== undefined) {\n          if (typeof Map === 'function' && value instanceof Map || typeof Set === 'function' && value instanceof Set) {\n            // ECMAScript 2015 Maps and Sets\n            return value.size;\n          }\n\n          if (lib.isObject(value) && !(value instanceof r.SafeString)) {\n            // Objects (besides SafeStrings), non-primative Arrays\n            return lib.keys(value).length;\n          }\n\n          return value.length;\n        }\n\n        return 0;\n      }\n\n      exports.length = lengthFilter;\n\n      function list(val) {\n        if (lib.isString(val)) {\n          return val.split('');\n        } else if (lib.isObject(val)) {\n          return lib._entries(val || {}).map(function (_ref) {\n            var key = _ref[0],\n                value = _ref[1];\n            return {\n              key: key,\n              value: value\n            };\n          });\n        } else if (lib.isArray(val)) {\n          return val;\n        } else {\n          throw new lib.TemplateError('list filter: type not iterable');\n        }\n      }\n\n      exports.list = list;\n\n      function lower(str) {\n        str = normalize(str, '');\n        return str.toLowerCase();\n      }\n\n      exports.lower = lower;\n\n      function nl2br(str) {\n        if (str === null || str === undefined) {\n          return '';\n        }\n\n        return r.copySafeness(str, str.replace(/\\r\\n|\\n/g, '<br />\\n'));\n      }\n\n      exports.nl2br = nl2br;\n\n      function random(arr) {\n        return arr[Math.floor(Math.random() * arr.length)];\n      }\n\n      exports.random = random;\n      /**\n       * Construct select or reject filter\n       *\n       * @param {boolean} expectedTestResult\n       * @returns {function(array, string, *): array}\n       */\n\n      function getSelectOrReject(expectedTestResult) {\n        function filter(arr, testName, secondArg) {\n          if (testName === void 0) {\n            testName = 'truthy';\n          }\n\n          var context = this;\n          var test = context.env.getTest(testName);\n          return lib.toArray(arr).filter(function examineTestResult(item) {\n            return test.call(context, item, secondArg) === expectedTestResult;\n          });\n        }\n\n        return filter;\n      }\n\n      exports.reject = getSelectOrReject(false);\n\n      function rejectattr(arr, attr) {\n        return arr.filter(function (item) {\n          return !item[attr];\n        });\n      }\n\n      exports.rejectattr = rejectattr;\n      exports.select = getSelectOrReject(true);\n\n      function selectattr(arr, attr) {\n        return arr.filter(function (item) {\n          return !!item[attr];\n        });\n      }\n\n      exports.selectattr = selectattr;\n\n      function replace(str, old, new_, maxCount) {\n        var originalStr = str;\n\n        if (old instanceof RegExp) {\n          return str.replace(old, new_);\n        }\n\n        if (typeof maxCount === 'undefined') {\n          maxCount = -1;\n        }\n\n        var res = ''; // Output\n        // Cast Numbers in the search term to string\n\n        if (typeof old === 'number') {\n          old = '' + old;\n        } else if (typeof old !== 'string') {\n          // If it is something other than number or string,\n          // return the original string\n          return str;\n        } // Cast numbers in the replacement to string\n\n\n        if (typeof str === 'number') {\n          str = '' + str;\n        } // If by now, we don't have a string, throw it back\n\n\n        if (typeof str !== 'string' && !(str instanceof r.SafeString)) {\n          return str;\n        } // ShortCircuits\n\n\n        if (old === '') {\n          // Mimic the python behaviour: empty string is replaced\n          // by replacement e.g. \"abc\"|replace(\"\", \".\") -> .a.b.c.\n          res = new_ + str.split('').join(new_) + new_;\n          return r.copySafeness(str, res);\n        }\n\n        var nextIndex = str.indexOf(old); // if # of replacements to perform is 0, or the string to does\n        // not contain the old value, return the string\n\n        if (maxCount === 0 || nextIndex === -1) {\n          return str;\n        }\n\n        var pos = 0;\n        var count = 0; // # of replacements made\n\n        while (nextIndex > -1 && (maxCount === -1 || count < maxCount)) {\n          // Grab the next chunk of src string and add it with the\n          // replacement, to the result\n          res += str.substring(pos, nextIndex) + new_; // Increment our pointer in the src string\n\n          pos = nextIndex + old.length;\n          count++; // See if there are any more replacements to be made\n\n          nextIndex = str.indexOf(old, pos);\n        } // We've either reached the end, or done the max # of\n        // replacements, tack on any remaining string\n\n\n        if (pos < str.length) {\n          res += str.substring(pos);\n        }\n\n        return r.copySafeness(originalStr, res);\n      }\n\n      exports.replace = replace;\n\n      function reverse(val) {\n        var arr;\n\n        if (lib.isString(val)) {\n          arr = list(val);\n        } else {\n          // Copy it\n          arr = lib.map(val, function (v) {\n            return v;\n          });\n        }\n\n        arr.reverse();\n\n        if (lib.isString(val)) {\n          return r.copySafeness(val, arr.join(''));\n        }\n\n        return arr;\n      }\n\n      exports.reverse = reverse;\n\n      function round(val, precision, method) {\n        precision = precision || 0;\n        var factor = Math.pow(10, precision);\n        var rounder;\n\n        if (method === 'ceil') {\n          rounder = Math.ceil;\n        } else if (method === 'floor') {\n          rounder = Math.floor;\n        } else {\n          rounder = Math.round;\n        }\n\n        return rounder(val * factor) / factor;\n      }\n\n      exports.round = round;\n\n      function slice(arr, slices, fillWith) {\n        var sliceLength = Math.floor(arr.length / slices);\n        var extra = arr.length % slices;\n        var res = [];\n        var offset = 0;\n\n        for (var i = 0; i < slices; i++) {\n          var start = offset + i * sliceLength;\n\n          if (i < extra) {\n            offset++;\n          }\n\n          var end = offset + (i + 1) * sliceLength;\n          var currSlice = arr.slice(start, end);\n\n          if (fillWith && i >= extra) {\n            currSlice.push(fillWith);\n          }\n\n          res.push(currSlice);\n        }\n\n        return res;\n      }\n\n      exports.slice = slice;\n\n      function sum(arr, attr, start) {\n        if (start === void 0) {\n          start = 0;\n        }\n\n        if (attr) {\n          arr = lib.map(arr, function (v) {\n            return v[attr];\n          });\n        }\n\n        return start + arr.reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      exports.sum = sum;\n      exports.sort = r.makeMacro(['value', 'reverse', 'case_sensitive', 'attribute'], [], function sortFilter(arr, reversed, caseSens, attr) {\n        var _this = this; // Copy it\n\n\n        var array = lib.map(arr, function (v) {\n          return v;\n        });\n        var getAttribute = lib.getAttrGetter(attr);\n        array.sort(function (a, b) {\n          var x = attr ? getAttribute(a) : a;\n          var y = attr ? getAttribute(b) : b;\n\n          if (_this.env.opts.throwOnUndefined && attr && (x === undefined || y === undefined)) {\n            throw new TypeError(\"sort: attribute \\\"\" + attr + \"\\\" resolved to undefined\");\n          }\n\n          if (!caseSens && lib.isString(x) && lib.isString(y)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n          }\n\n          if (x < y) {\n            return reversed ? 1 : -1;\n          } else if (x > y) {\n            return reversed ? -1 : 1;\n          } else {\n            return 0;\n          }\n        });\n        return array;\n      });\n\n      function string(obj) {\n        return r.copySafeness(obj, obj);\n      }\n\n      exports.string = string;\n\n      function striptags(input, preserveLinebreaks) {\n        input = normalize(input, '');\n        var tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>|<!--[\\s\\S]*?-->/gi;\n        var trimmedInput = trim(input.replace(tags, ''));\n        var res = '';\n\n        if (preserveLinebreaks) {\n          res = trimmedInput.replace(/^ +| +$/gm, '') // remove leading and trailing spaces\n          .replace(/ +/g, ' ') // squash adjacent spaces\n          .replace(/(\\r\\n)/g, '\\n') // normalize linebreaks (CRLF -> LF)\n          .replace(/\\n\\n\\n+/g, '\\n\\n'); // squash abnormal adjacent linebreaks\n        } else {\n          res = trimmedInput.replace(/\\s+/gi, ' ');\n        }\n\n        return r.copySafeness(input, res);\n      }\n\n      exports.striptags = striptags;\n\n      function title(str) {\n        str = normalize(str, '');\n        var words = str.split(' ').map(function (word) {\n          return capitalize(word);\n        });\n        return r.copySafeness(str, words.join(' '));\n      }\n\n      exports.title = title;\n\n      function trim(str) {\n        return r.copySafeness(str, str.replace(/^\\s*|\\s*$/g, ''));\n      }\n\n      exports.trim = trim;\n\n      function truncate(input, length, killwords, end) {\n        var orig = input;\n        input = normalize(input, '');\n        length = length || 255;\n\n        if (input.length <= length) {\n          return input;\n        }\n\n        if (killwords) {\n          input = input.substring(0, length);\n        } else {\n          var idx = input.lastIndexOf(' ', length);\n\n          if (idx === -1) {\n            idx = length;\n          }\n\n          input = input.substring(0, idx);\n        }\n\n        input += end !== undefined && end !== null ? end : '...';\n        return r.copySafeness(orig, input);\n      }\n\n      exports.truncate = truncate;\n\n      function upper(str) {\n        str = normalize(str, '');\n        return str.toUpperCase();\n      }\n\n      exports.upper = upper;\n\n      function urlencode(obj) {\n        var enc = encodeURIComponent;\n\n        if (lib.isString(obj)) {\n          return enc(obj);\n        } else {\n          var keyvals = lib.isArray(obj) ? obj : lib._entries(obj);\n          return keyvals.map(function (_ref2) {\n            var k = _ref2[0],\n                v = _ref2[1];\n            return enc(k) + \"=\" + enc(v);\n          }).join('&');\n        }\n      }\n\n      exports.urlencode = urlencode; // For the jinja regexp, see\n      // https://github.com/mitsuhiko/jinja2/blob/f15b814dcba6aa12bc74d1f7d0c881d55f7126be/jinja2/utils.py#L20-L23\n\n      var puncRe = /^(?:\\(|<|&lt;)?(.*?)(?:\\.|,|\\)|\\n|&gt;)?$/; // from http://blog.gerv.net/2011/05/html5_email_address_regexp/\n\n      var emailRe = /^[\\w.!#$%&'*+\\-\\/=?\\^`{|}~]+@[a-z\\d\\-]+(\\.[a-z\\d\\-]+)+$/i;\n      var httpHttpsRe = /^https?:\\/\\/.*$/;\n      var wwwRe = /^www\\./;\n      var tldRe = /\\.(?:org|net|com)(?:\\:|\\/|$)/;\n\n      function urlize(str, length, nofollow) {\n        if (isNaN(length)) {\n          length = Infinity;\n        }\n\n        var noFollowAttr = nofollow === true ? ' rel=\"nofollow\"' : '';\n        var words = str.split(/(\\s+)/).filter(function (word) {\n          // If the word has no length, bail. This can happen for str with\n          // trailing whitespace.\n          return word && word.length;\n        }).map(function (word) {\n          var matches = word.match(puncRe);\n          var possibleUrl = matches ? matches[1] : word;\n          var shortUrl = possibleUrl.substr(0, length); // url that starts with http or https\n\n          if (httpHttpsRe.test(possibleUrl)) {\n            return \"<a href=\\\"\" + possibleUrl + \"\\\"\" + noFollowAttr + \">\" + shortUrl + \"</a>\";\n          } // url that starts with www.\n\n\n          if (wwwRe.test(possibleUrl)) {\n            return \"<a href=\\\"http://\" + possibleUrl + \"\\\"\" + noFollowAttr + \">\" + shortUrl + \"</a>\";\n          } // an email address of the form username@domain.tld\n\n\n          if (emailRe.test(possibleUrl)) {\n            return \"<a href=\\\"mailto:\" + possibleUrl + \"\\\">\" + possibleUrl + \"</a>\";\n          } // url that ends in .com, .org or .net that is not an email address\n\n\n          if (tldRe.test(possibleUrl)) {\n            return \"<a href=\\\"http://\" + possibleUrl + \"\\\"\" + noFollowAttr + \">\" + shortUrl + \"</a>\";\n          }\n\n          return word;\n        });\n        return words.join('');\n      }\n\n      exports.urlize = urlize;\n\n      function wordcount(str) {\n        str = normalize(str, '');\n        var words = str ? str.match(/\\w+/g) : null;\n        return words ? words.length : null;\n      }\n\n      exports.wordcount = wordcount;\n\n      function float(val, def) {\n        var res = parseFloat(val);\n        return isNaN(res) ? def : res;\n      }\n\n      exports.float = float;\n      var intFilter = r.makeMacro(['value', 'default', 'base'], [], function doInt(value, defaultValue, base) {\n        if (base === void 0) {\n          base = 10;\n        }\n\n        var res = parseInt(value, base);\n        return isNaN(res) ? defaultValue : res;\n      });\n      exports.int = intFilter; // Aliases\n\n      exports.d = exports.default;\n      exports.e = exports.escape;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n\n        _setPrototypeOf(subClass, superClass);\n      }\n\n      function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        return _setPrototypeOf(o, p);\n      }\n\n      var Loader = __webpack_require__(6);\n\n      var PrecompiledLoader = /*#__PURE__*/function (_Loader) {\n        _inheritsLoose(PrecompiledLoader, _Loader);\n\n        function PrecompiledLoader(compiledTemplates) {\n          var _this;\n\n          _this = _Loader.call(this) || this;\n          _this.precompiled = compiledTemplates || {};\n          return _this;\n        }\n\n        var _proto = PrecompiledLoader.prototype;\n\n        _proto.getSource = function getSource(name) {\n          if (this.precompiled[name]) {\n            return {\n              src: {\n                type: 'code',\n                obj: this.precompiled[name]\n              },\n              path: name\n            };\n          }\n\n          return null;\n        };\n\n        return PrecompiledLoader;\n      }(Loader);\n\n      module.exports = {\n        PrecompiledLoader: PrecompiledLoader\n      };\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var SafeString = __webpack_require__(2).SafeString;\n      /**\n       * Returns `true` if the object is a function, otherwise `false`.\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n\n      function callable(value) {\n        return typeof value === 'function';\n      }\n\n      exports.callable = callable;\n      /**\n       * Returns `true` if the object is strictly not `undefined`.\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function defined(value) {\n        return value !== undefined;\n      }\n\n      exports.defined = defined;\n      /**\n       * Returns `true` if the operand (one) is divisble by the test's argument\n       * (two).\n       * @param { number } one\n       * @param { number } two\n       * @returns { boolean }\n       */\n\n      function divisibleby(one, two) {\n        return one % two === 0;\n      }\n\n      exports.divisibleby = divisibleby;\n      /**\n       * Returns true if the string has been escaped (i.e., is a SafeString).\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function escaped(value) {\n        return value instanceof SafeString;\n      }\n\n      exports.escaped = escaped;\n      /**\n       * Returns `true` if the arguments are strictly equal.\n       * @param { any } one\n       * @param { any } two\n       */\n\n      function equalto(one, two) {\n        return one === two;\n      }\n\n      exports.equalto = equalto; // Aliases\n\n      exports.eq = exports.equalto;\n      exports.sameas = exports.equalto;\n      /**\n       * Returns `true` if the value is evenly divisible by 2.\n       * @param { number } value\n       * @returns { boolean }\n       */\n\n      function even(value) {\n        return value % 2 === 0;\n      }\n\n      exports.even = even;\n      /**\n       * Returns `true` if the value is falsy - if I recall correctly, '', 0, false,\n       * undefined, NaN or null. I don't know if we should stick to the default JS\n       * behavior or attempt to replicate what Python believes should be falsy (i.e.,\n       * empty arrays, empty dicts, not 0...).\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function falsy(value) {\n        return !value;\n      }\n\n      exports.falsy = falsy;\n      /**\n       * Returns `true` if the operand (one) is greater or equal to the test's\n       * argument (two).\n       * @param { number } one\n       * @param { number } two\n       * @returns { boolean }\n       */\n\n      function ge(one, two) {\n        return one >= two;\n      }\n\n      exports.ge = ge;\n      /**\n       * Returns `true` if the operand (one) is greater than the test's argument\n       * (two).\n       * @param { number } one\n       * @param { number } two\n       * @returns { boolean }\n       */\n\n      function greaterthan(one, two) {\n        return one > two;\n      }\n\n      exports.greaterthan = greaterthan; // alias\n\n      exports.gt = exports.greaterthan;\n      /**\n       * Returns `true` if the operand (one) is less than or equal to the test's\n       * argument (two).\n       * @param { number } one\n       * @param { number } two\n       * @returns { boolean }\n       */\n\n      function le(one, two) {\n        return one <= two;\n      }\n\n      exports.le = le;\n      /**\n       * Returns `true` if the operand (one) is less than the test's passed argument\n       * (two).\n       * @param { number } one\n       * @param { number } two\n       * @returns { boolean }\n       */\n\n      function lessthan(one, two) {\n        return one < two;\n      }\n\n      exports.lessthan = lessthan; // alias\n\n      exports.lt = exports.lessthan;\n      /**\n       * Returns `true` if the string is lowercased.\n       * @param { string } value\n       * @returns { boolean }\n       */\n\n      function lower(value) {\n        return value.toLowerCase() === value;\n      }\n\n      exports.lower = lower;\n      /**\n       * Returns `true` if the operand (one) is less than or equal to the test's\n       * argument (two).\n       * @param { number } one\n       * @param { number } two\n       * @returns { boolean }\n       */\n\n      function ne(one, two) {\n        return one !== two;\n      }\n\n      exports.ne = ne;\n      /**\n       * Returns true if the value is strictly equal to `null`.\n       * @param { any }\n       * @returns { boolean }\n       */\n\n      function nullTest(value) {\n        return value === null;\n      }\n\n      exports.null = nullTest;\n      /**\n       * Returns true if value is a number.\n       * @param { any }\n       * @returns { boolean }\n       */\n\n      function number(value) {\n        return typeof value === 'number';\n      }\n\n      exports.number = number;\n      /**\n       * Returns `true` if the value is *not* evenly divisible by 2.\n       * @param { number } value\n       * @returns { boolean }\n       */\n\n      function odd(value) {\n        return value % 2 === 1;\n      }\n\n      exports.odd = odd;\n      /**\n       * Returns `true` if the value is a string, `false` if not.\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function string(value) {\n        return typeof value === 'string';\n      }\n\n      exports.string = string;\n      /**\n       * Returns `true` if the value is not in the list of things considered falsy:\n       * '', null, undefined, 0, NaN and false.\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function truthy(value) {\n        return !!value;\n      }\n\n      exports.truthy = truthy;\n      /**\n       * Returns `true` if the value is undefined.\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function undefinedTest(value) {\n        return value === undefined;\n      }\n\n      exports.undefined = undefinedTest;\n      /**\n       * Returns `true` if the string is uppercased.\n       * @param { string } value\n       * @returns { boolean }\n       */\n\n      function upper(value) {\n        return value.toUpperCase() === value;\n      }\n\n      exports.upper = upper;\n      /**\n       * If ES6 features are available, returns `true` if the value implements the\n       * `Symbol.iterator` method. If not, it's a string or Array.\n       *\n       * Could potentially cause issues if a browser exists that has Set and Map but\n       * not Symbol.\n       *\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function iterable(value) {\n        if (typeof Symbol !== 'undefined') {\n          return !!value[Symbol.iterator];\n        } else {\n          return Array.isArray(value) || typeof value === 'string';\n        }\n      }\n\n      exports.iterable = iterable;\n      /**\n       * If ES6 features are available, returns `true` if the value is an object hash\n       * or an ES6 Map. Otherwise just return if it's an object hash.\n       * @param { any } value\n       * @returns { boolean }\n       */\n\n      function mapping(value) {\n        // only maps and object hashes\n        var bool = value !== null && value !== undefined && typeof value === 'object' && !Array.isArray(value);\n\n        if (Set) {\n          return bool && !(value instanceof Set);\n        } else {\n          return bool;\n        }\n      }\n\n      exports.mapping = mapping;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function _cycler(items) {\n        var index = -1;\n        return {\n          current: null,\n          reset: function reset() {\n            index = -1;\n            this.current = null;\n          },\n          next: function next() {\n            index++;\n\n            if (index >= items.length) {\n              index = 0;\n            }\n\n            this.current = items[index];\n            return this.current;\n          }\n        };\n      }\n\n      function _joiner(sep) {\n        sep = sep || ',';\n        var first = true;\n        return function () {\n          var val = first ? '' : sep;\n          first = false;\n          return val;\n        };\n      } // Making this a function instead so it returns a new object\n      // each time it's called. That way, if something like an environment\n      // uses it, they will each have their own copy.\n\n\n      function globals() {\n        return {\n          range: function range(start, stop, step) {\n            if (typeof stop === 'undefined') {\n              stop = start;\n              start = 0;\n              step = 1;\n            } else if (!step) {\n              step = 1;\n            }\n\n            var arr = [];\n\n            if (step > 0) {\n              for (var i = start; i < stop; i += step) {\n                arr.push(i);\n              }\n            } else {\n              for (var _i = start; _i > stop; _i += step) {\n                // eslint-disable-line for-direction\n                arr.push(_i);\n              }\n            }\n\n            return arr;\n          },\n          cycler: function cycler() {\n            return _cycler(Array.prototype.slice.call(arguments));\n          },\n          joiner: function joiner(sep) {\n            return _joiner(sep);\n          }\n        };\n      }\n\n      module.exports = globals;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      var path = __webpack_require__(4);\n\n      module.exports = function express(env, app) {\n        function NunjucksView(name, opts) {\n          this.name = name;\n          this.path = name;\n          this.defaultEngine = opts.defaultEngine;\n          this.ext = path.extname(name);\n\n          if (!this.ext && !this.defaultEngine) {\n            throw new Error('No default engine was specified and no extension was provided.');\n          }\n\n          if (!this.ext) {\n            this.name += this.ext = (this.defaultEngine[0] !== '.' ? '.' : '') + this.defaultEngine;\n          }\n        }\n\n        NunjucksView.prototype.render = function render(opts, cb) {\n          env.render(this.name, opts, cb);\n        };\n\n        app.set('view', NunjucksView);\n        app.set('nunjucksEnv', env);\n        return env;\n      };\n      /***/\n\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var fs = __webpack_require__(4);\n\n      var path = __webpack_require__(4);\n\n      var _require = __webpack_require__(0),\n          _prettifyError = _require._prettifyError;\n\n      var compiler = __webpack_require__(5);\n\n      var _require2 = __webpack_require__(7),\n          Environment = _require2.Environment;\n\n      var precompileGlobal = __webpack_require__(24);\n\n      function match(filename, patterns) {\n        if (!Array.isArray(patterns)) {\n          return false;\n        }\n\n        return patterns.some(function (pattern) {\n          return filename.match(pattern);\n        });\n      }\n\n      function precompileString(str, opts) {\n        opts = opts || {};\n        opts.isString = true;\n        var env = opts.env || new Environment([]);\n        var wrapper = opts.wrapper || precompileGlobal;\n\n        if (!opts.name) {\n          throw new Error('the \"name\" option is required when compiling a string');\n        }\n\n        return wrapper([_precompile(str, opts.name, env)], opts);\n      }\n\n      function precompile(input, opts) {\n        // The following options are available:\n        //\n        // * name: name of the template (auto-generated when compiling a directory)\n        // * isString: input is a string, not a file path\n        // * asFunction: generate a callable function\n        // * force: keep compiling on error\n        // * env: the Environment to use (gets extensions and async filters from it)\n        // * include: which file/folders to include (folders are auto-included, files are auto-excluded)\n        // * exclude: which file/folders to exclude (folders are auto-included, files are auto-excluded)\n        // * wrapper: function(templates, opts) {...}\n        //       Customize the output format to store the compiled template.\n        //       By default, templates are stored in a global variable used by the runtime.\n        //       A custom loader will be necessary to load your custom wrapper.\n        opts = opts || {};\n        var env = opts.env || new Environment([]);\n        var wrapper = opts.wrapper || precompileGlobal;\n\n        if (opts.isString) {\n          return precompileString(input, opts);\n        }\n\n        var pathStats = fs.existsSync(input) && fs.statSync(input);\n        var precompiled = [];\n        var templates = [];\n\n        function addTemplates(dir) {\n          fs.readdirSync(dir).forEach(function (file) {\n            var filepath = path.join(dir, file);\n            var subpath = filepath.substr(path.join(input, '/').length);\n            var stat = fs.statSync(filepath);\n\n            if (stat && stat.isDirectory()) {\n              subpath += '/';\n\n              if (!match(subpath, opts.exclude)) {\n                addTemplates(filepath);\n              }\n            } else if (match(subpath, opts.include)) {\n              templates.push(filepath);\n            }\n          });\n        }\n\n        if (pathStats.isFile()) {\n          precompiled.push(_precompile(fs.readFileSync(input, 'utf-8'), opts.name || input, env));\n        } else if (pathStats.isDirectory()) {\n          addTemplates(input);\n\n          for (var i = 0; i < templates.length; i++) {\n            var name = templates[i].replace(path.join(input, '/'), '');\n\n            try {\n              precompiled.push(_precompile(fs.readFileSync(templates[i], 'utf-8'), name, env));\n            } catch (e) {\n              if (opts.force) {\n                // Don't stop generating the output if we're\n                // forcing compilation.\n                console.error(e); // eslint-disable-line no-console\n              } else {\n                throw e;\n              }\n            }\n          }\n        }\n\n        return wrapper(precompiled, opts);\n      }\n\n      function _precompile(str, name, env) {\n        env = env || new Environment([]);\n        var asyncFilters = env.asyncFilters;\n        var extensions = env.extensionsList;\n        var template;\n        name = name.replace(/\\\\/g, '/');\n\n        try {\n          template = compiler.compile(str, asyncFilters, extensions, name, env.opts);\n        } catch (err) {\n          throw _prettifyError(name, false, err);\n        }\n\n        return {\n          name: name,\n          template: template\n        };\n      }\n\n      module.exports = {\n        precompile: precompile,\n        precompileString: precompileString\n      };\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      function precompileGlobal(templates, opts) {\n        var out = '';\n        opts = opts || {};\n\n        for (var i = 0; i < templates.length; i++) {\n          var name = JSON.stringify(templates[i].name);\n          var template = templates[i].template;\n          out += '(function() {' + '(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})' + '[' + name + '] = (function() {\\n' + template + '\\n})();\\n';\n\n          if (opts.asFunction) {\n            out += 'return function(ctx, cb) { return nunjucks.render(' + name + ', ctx, cb); }\\n';\n          }\n\n          out += '})();\\n';\n        }\n\n        return out;\n      }\n\n      module.exports = precompileGlobal;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      function installCompat() {\n        'use strict';\n        /* eslint-disable camelcase */\n        // This must be called like `nunjucks.installCompat` so that `this`\n        // references the nunjucks instance\n\n        var runtime = this.runtime;\n        var lib = this.lib; // Handle slim case where these 'modules' are excluded from the built source\n\n        var Compiler = this.compiler.Compiler;\n        var Parser = this.parser.Parser;\n        var nodes = this.nodes;\n        var lexer = this.lexer;\n        var orig_contextOrFrameLookup = runtime.contextOrFrameLookup;\n        var orig_memberLookup = runtime.memberLookup;\n        var orig_Compiler_assertType;\n        var orig_Parser_parseAggregate;\n\n        if (Compiler) {\n          orig_Compiler_assertType = Compiler.prototype.assertType;\n        }\n\n        if (Parser) {\n          orig_Parser_parseAggregate = Parser.prototype.parseAggregate;\n        }\n\n        function uninstall() {\n          runtime.contextOrFrameLookup = orig_contextOrFrameLookup;\n          runtime.memberLookup = orig_memberLookup;\n\n          if (Compiler) {\n            Compiler.prototype.assertType = orig_Compiler_assertType;\n          }\n\n          if (Parser) {\n            Parser.prototype.parseAggregate = orig_Parser_parseAggregate;\n          }\n        }\n\n        runtime.contextOrFrameLookup = function contextOrFrameLookup(context, frame, key) {\n          var val = orig_contextOrFrameLookup.apply(this, arguments);\n\n          if (val !== undefined) {\n            return val;\n          }\n\n          switch (key) {\n            case 'True':\n              return true;\n\n            case 'False':\n              return false;\n\n            case 'None':\n              return null;\n\n            default:\n              return undefined;\n          }\n        };\n\n        function getTokensState(tokens) {\n          return {\n            index: tokens.index,\n            lineno: tokens.lineno,\n            colno: tokens.colno\n          };\n        }\n\n        if (\"STD\" !== 'SLIM' && nodes && Compiler && Parser) {\n          // i.e., not slim mode\n          var Slice = nodes.Node.extend('Slice', {\n            fields: ['start', 'stop', 'step'],\n            init: function init(lineno, colno, start, stop, step) {\n              start = start || new nodes.Literal(lineno, colno, null);\n              stop = stop || new nodes.Literal(lineno, colno, null);\n              step = step || new nodes.Literal(lineno, colno, 1);\n              this.parent(lineno, colno, start, stop, step);\n            }\n          });\n\n          Compiler.prototype.assertType = function assertType(node) {\n            if (node instanceof Slice) {\n              return;\n            }\n\n            orig_Compiler_assertType.apply(this, arguments);\n          };\n\n          Compiler.prototype.compileSlice = function compileSlice(node, frame) {\n            this._emit('(');\n\n            this._compileExpression(node.start, frame);\n\n            this._emit('),(');\n\n            this._compileExpression(node.stop, frame);\n\n            this._emit('),(');\n\n            this._compileExpression(node.step, frame);\n\n            this._emit(')');\n          };\n\n          Parser.prototype.parseAggregate = function parseAggregate() {\n            var _this = this;\n\n            var origState = getTokensState(this.tokens); // Set back one accounting for opening bracket/parens\n\n            origState.colno--;\n            origState.index--;\n\n            try {\n              return orig_Parser_parseAggregate.apply(this);\n            } catch (e) {\n              var errState = getTokensState(this.tokens);\n\n              var rethrow = function rethrow() {\n                lib._assign(_this.tokens, errState);\n\n                return e;\n              }; // Reset to state before original parseAggregate called\n\n\n              lib._assign(this.tokens, origState);\n\n              this.peeked = false;\n              var tok = this.peekToken();\n\n              if (tok.type !== lexer.TOKEN_LEFT_BRACKET) {\n                throw rethrow();\n              } else {\n                this.nextToken();\n              }\n\n              var node = new Slice(tok.lineno, tok.colno); // If we don't encounter a colon while parsing, this is not a slice,\n              // so re-raise the original exception.\n\n              var isSlice = false;\n\n              for (var i = 0; i <= node.fields.length; i++) {\n                if (this.skip(lexer.TOKEN_RIGHT_BRACKET)) {\n                  break;\n                }\n\n                if (i === node.fields.length) {\n                  if (isSlice) {\n                    this.fail('parseSlice: too many slice components', tok.lineno, tok.colno);\n                  } else {\n                    break;\n                  }\n                }\n\n                if (this.skip(lexer.TOKEN_COLON)) {\n                  isSlice = true;\n                } else {\n                  var field = node.fields[i];\n                  node[field] = this.parseExpression();\n                  isSlice = this.skip(lexer.TOKEN_COLON) || isSlice;\n                }\n              }\n\n              if (!isSlice) {\n                throw rethrow();\n              }\n\n              return new nodes.Array(tok.lineno, tok.colno, [node]);\n            }\n          };\n        }\n\n        function sliceLookup(obj, start, stop, step) {\n          obj = obj || [];\n\n          if (start === null) {\n            start = step < 0 ? obj.length - 1 : 0;\n          }\n\n          if (stop === null) {\n            stop = step < 0 ? -1 : obj.length;\n          } else if (stop < 0) {\n            stop += obj.length;\n          }\n\n          if (start < 0) {\n            start += obj.length;\n          }\n\n          var results = [];\n\n          for (var i = start;; i += step) {\n            if (i < 0 || i > obj.length) {\n              break;\n            }\n\n            if (step > 0 && i >= stop) {\n              break;\n            }\n\n            if (step < 0 && i <= stop) {\n              break;\n            }\n\n            results.push(runtime.memberLookup(obj, i));\n          }\n\n          return results;\n        }\n\n        function hasOwnProp(obj, key) {\n          return Object.prototype.hasOwnProperty.call(obj, key);\n        }\n\n        var ARRAY_MEMBERS = {\n          pop: function pop(index) {\n            if (index === undefined) {\n              return this.pop();\n            }\n\n            if (index >= this.length || index < 0) {\n              throw new Error('KeyError');\n            }\n\n            return this.splice(index, 1);\n          },\n          append: function append(element) {\n            return this.push(element);\n          },\n          remove: function remove(element) {\n            for (var i = 0; i < this.length; i++) {\n              if (this[i] === element) {\n                return this.splice(i, 1);\n              }\n            }\n\n            throw new Error('ValueError');\n          },\n          count: function count(element) {\n            var count = 0;\n\n            for (var i = 0; i < this.length; i++) {\n              if (this[i] === element) {\n                count++;\n              }\n            }\n\n            return count;\n          },\n          index: function index(element) {\n            var i;\n\n            if ((i = this.indexOf(element)) === -1) {\n              throw new Error('ValueError');\n            }\n\n            return i;\n          },\n          find: function find(element) {\n            return this.indexOf(element);\n          },\n          insert: function insert(index, elem) {\n            return this.splice(index, 0, elem);\n          }\n        };\n        var OBJECT_MEMBERS = {\n          items: function items() {\n            return lib._entries(this);\n          },\n          values: function values() {\n            return lib._values(this);\n          },\n          keys: function keys() {\n            return lib.keys(this);\n          },\n          get: function get(key, def) {\n            var output = this[key];\n\n            if (output === undefined) {\n              output = def;\n            }\n\n            return output;\n          },\n          has_key: function has_key(key) {\n            return hasOwnProp(this, key);\n          },\n          pop: function pop(key, def) {\n            var output = this[key];\n\n            if (output === undefined && def !== undefined) {\n              output = def;\n            } else if (output === undefined) {\n              throw new Error('KeyError');\n            } else {\n              delete this[key];\n            }\n\n            return output;\n          },\n          popitem: function popitem() {\n            var keys = lib.keys(this);\n\n            if (!keys.length) {\n              throw new Error('KeyError');\n            }\n\n            var k = keys[0];\n            var val = this[k];\n            delete this[k];\n            return [k, val];\n          },\n          setdefault: function setdefault(key, def) {\n            if (def === void 0) {\n              def = null;\n            }\n\n            if (!(key in this)) {\n              this[key] = def;\n            }\n\n            return this[key];\n          },\n          update: function update(kwargs) {\n            lib._assign(this, kwargs);\n\n            return null; // Always returns None\n          }\n        };\n        OBJECT_MEMBERS.iteritems = OBJECT_MEMBERS.items;\n        OBJECT_MEMBERS.itervalues = OBJECT_MEMBERS.values;\n        OBJECT_MEMBERS.iterkeys = OBJECT_MEMBERS.keys;\n\n        runtime.memberLookup = function memberLookup(obj, val, autoescape) {\n          if (arguments.length === 4) {\n            return sliceLookup.apply(this, arguments);\n          }\n\n          obj = obj || {}; // If the object is an object, return any of the methods that Python would\n          // otherwise provide.\n\n          if (lib.isArray(obj) && hasOwnProp(ARRAY_MEMBERS, val)) {\n            return ARRAY_MEMBERS[val].bind(obj);\n          }\n\n          if (lib.isObject(obj) && hasOwnProp(OBJECT_MEMBERS, val)) {\n            return OBJECT_MEMBERS[val].bind(obj);\n          }\n\n          return orig_memberLookup.apply(this, arguments);\n        };\n\n        return uninstall;\n      }\n\n      module.exports = installCompat;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"sources":["../webpack/universalModuleDefinition","../webpack/bootstrap 679ff8296d850238baf3","../nunjucks/src/lib.js","../nunjucks/src/object.js","../nunjucks/src/runtime.js","../nunjucks/src/nodes.js","../nunjucks/src/compiler.js","../nunjucks/src/loader.js","../nunjucks/src/environment.js","../nunjucks/src/parser.js","../nunjucks/src/lexer.js","../nunjucks/src/web-loaders.js","../nunjucks/index.js","../node_modules/asap/browser-asap.js","../node_modules/asap/browser-raw.js","../node_modules/webpack/buildin/global.js","../node_modules/a-sync-waterfall/index.js","../node_modules/webpack/node_modules/events/events.js","../nunjucks/src/transformer.js","../nunjucks/src/filters.js","../nunjucks/src/precompiled-loader.js","../nunjucks/src/tests.js","../nunjucks/src/globals.js","../nunjucks/src/express-app.js","../nunjucks/src/precompile.js","../nunjucks/src/precompile-global.js","../nunjucks/src/jinja-compat.js"],"names":["ArrayProto","Array","ObjProto","Object","escapeMap","escapeRegex","exports","module","err","old","message","cause","TemplateError","enumerable","writable","value","Error","stackDescriptor","getStack","stack","get","msg","path","constructor","val","attr","parts","_prepareAttributeParts","_item","i","part","hasOwnProp","result","iterator","isFunction","getAttrGetter","obj","key","throwOnUndefined","length","array","contains","toArray","index","indexOf","str","l","func","results","arr","iter","cb","next","keys","keys_","len","k","obj1","obj2","isArray","isString","isObject","EventEmitter","require","lib","tmp","res","prop","props","parentWrap","cls","subclass","Obj","init","extend","name","extendClass","EmitterObj","arrayFrom","supportsIterators","Symbol","Frame","set","frame","id","lookup","p","resolve","forWrite","push","pop","macroArgs","argCount","numArgs","kwargs","getKeywordArgs","argNames","args","kwargNames","arg","lastArg","isKeywordArgs","SafeString","String","configurable","dest","target","type","ret","autoescape","lineno","colno","context","error","item","finished","outputArr","makeMacro","makeKeywordArgs","suppressValue","ensureDefined","memberLookup","contextOrFrameLookup","callWrap","handleError","copySafeness","markSafe","asyncEach","asyncAll","inOperator","fromIterator","Node","arguments","findAll","traverseAndCheck","iterFields","Value","NodeList","nodes","addChild","Root","Literal","Group","ArrayNode","Pair","fields","Dict","LookupVal","If","IfAsync","InlineIf","For","AsyncEach","AsyncAll","Macro","Caller","Import","FromImport","names","FunCall","Filter","FilterAsync","KeywordArgs","Block","Super","TemplateRef","Extends","Include","Set","Switch","Case","Output","Capture","TemplateData","UnaryOp","BinOp","In","Is","Or","And","Not","Add","Concat","Sub","Mul","Div","FloorDiv","Mod","Pow","Neg","Pos","Compare","CompareOperand","CallExtension","ext","contentArgs","CallExtensionAsync","lines","line","inline","process","nl","indent","print","node","printNodes","JSON","fieldName","n","parser","transformer","compareOps","Compiler","fail","_pushBuffer","_popBuffer","_emit","_emitLine","code","_emitLines","_emitFuncBegin","_emitFuncEnd","_addScopeLevel","_closeScopeLevels","_withScopedSyntax","_scopeClosers","_makeCallback","_tmpid","_templateName","_compileChildren","_compileAggregate","_compileExpression","assertType","types","compileCallExtension","compileCallExtensionAsync","compileNodeList","compileLiteral","compileSymbol","v","compileGroup","compileArray","compileDict","compilePair","compileInlineIf","compileIn","compileIs","right","_binOpEmitter","compileOr","compileAnd","compileAdd","compileConcat","compileSub","compileMul","compileDiv","compileMod","compileNot","compileFloorDiv","compilePow","compileNeg","compilePos","compileCompare","op","compileLookupVal","_getNodeName","compileFunCall","compileFilter","compileFilterAsync","symbol","compileKeywordArgs","compileSet","ids","compileSwitch","c","compileIf","compileIfAsync","_emitLoopBindings","bindings","b","compileFor","tid","_compileAsyncLoop","asyncMethod","parallel","arrayLen","buf","output","compileAsyncEach","compileAsyncAll","_compileMacro","funcId","keepFrame","realNames","currFrame","pair","bufferId","compileMacro","compileCaller","_compileGetTemplate","parentTemplateId","parentName","eagerCompileArg","eagerCompile","ignoreMissingArg","ignoreMissing","compileImport","compileFromImport","importedId","nameNode","alias","compileBlock","compileSuper","compileExtends","compileInclude","id2","compileTemplateData","compileCapture","buffer","compileOutput","children","child","compileRoot","blockNames","blocks","block","tmpFrame","blockName","compile","_compile","getCode","opts","preprocessors","extensions","processedSrc","processor","isRelative","filename","asap","waterfall","compiler","filters","FileSystemLoader","WebLoader","PrecompiledLoader","tests","globals","globalRuntime","expressApp","noopTmplSrc","root","Environment","window","filter","test","_initLoaders","loader","invalidateCache","addExtension","extension","removeExtension","getExtension","hasExtension","addGlobal","getGlobal","addFilter","wrapped","getFilter","addTest","getTest","resolveTemplate","getTemplate","that","tmpl","createTemplate","newTmpl","info","syncResult","done","src","handle","express","render","ctx","callbackAsap","renderString","Context","env","setVariable","getVariables","addBlock","getBlock","getSuper","idx","blk","addExport","getExported","exported","Template","parentFrame","forceAsync","didError","source","_getBlocks","lexer","Parser","nextToken","tok","peekToken","pushToken","skip","expect","skipValue","skipSymbol","advanceAfterBlockEnd","advanceAfterVariableEnd","parseFor","forTok","endBlock","prim","parseMacro","macroTok","parseCall","callTok","callerArgs","macroCall","body","callerName","callerNode","parseWithContext","withContext","parseImport","importTok","template","parseFrom","fromTok","nextTok","parseBlock","tag","parseExtends","tagName","parseInclude","parseIf","parseSet","parseSwitch","switchStart","switchEnd","caseStart","caseDefault","expr","cases","cond","defaultCase","parseStatement","parseRaw","endTagName","rawBlockRegex","rawLevel","matches","begun","all","pre","parsePostfix","parseExpression","parseInlineIf","condNode","bodyNode","parseOr","node2","parseAnd","parseNot","parseIn","invert","parseIs","not","parseCompare","ops","parseConcat","parseAdd","parseSub","parseMul","parseDiv","parseFloorDiv","parseMod","parsePow","parseUnary","parsePrimary","parseInt","parseFloat","parseFilterName","parseFilterArgs","call","parseFilter","parseFilterStatement","filterTok","parseAggregate","parseSignature","checkComma","noParens","parseUntilBlocks","prev","parseNodes","data","nextVal","e","parse","parseAsRoot","whitespaceChars","delimChars","intChars","BLOCK_START","BLOCK_END","VARIABLE_START","VARIABLE_END","COMMENT_START","COMMENT_END","TOKEN_STRING","TOKEN_WHITESPACE","TOKEN_DATA","TOKEN_BLOCK_START","TOKEN_BLOCK_END","TOKEN_VARIABLE_START","TOKEN_VARIABLE_END","TOKEN_COMMENT","TOKEN_LEFT_PAREN","TOKEN_RIGHT_PAREN","TOKEN_LEFT_BRACKET","TOKEN_RIGHT_BRACKET","TOKEN_LEFT_CURLY","TOKEN_RIGHT_CURLY","TOKEN_OPERATOR","TOKEN_COMMA","TOKEN_COLON","TOKEN_TILDE","TOKEN_PIPE","TOKEN_INT","TOKEN_FLOAT","TOKEN_BOOLEAN","TOKEN_NONE","TOKEN_SYMBOL","TOKEN_SPECIAL","TOKEN_REGEX","Tokenizer","tags","cur","token","regexBody","POSSIBLE_FLAGS","regexFlags","isCurrentAFlag","flags","complexOps","curComplex","dec","beginChars","inComment","lastLine","_parseString","_matches","m","_extractString","_extractUntil","charString","_extract","_extractMatching","first","breakOnMatch","t","_extractRegex","isFinished","forwardN","forward","backN","back","current","currentStr","previous","lex","Loader","baseURL","getSource","useCache","noCache","fetch","ajax","loading","status","content","responseText","url","loaders","precompile","runtime","installJinjaCompat","templatesPath","TemplateLoader","watch","async","NodeResolveLoader","configure","reset","precompileString","undefined","sym","ast","astT","mapCOW","walk","propsT","depthFirst","walked","depthWalk","descNode","gensym","_liftFilters","blockNode","hasSuper","convertStatements","liftSuper","liftFilters","cps","asyncFilters","transform","r","Math","num","normalize","width","spaces","post","by","si","a","t1","t2","sp","del","testName","getSelectOrReject","originalStr","maxCount","new_","nextIndex","pos","count","list","precision","factor","method","rounder","sliceLength","extra","offset","start","end","currSlice","fillWith","getAttribute","x","y","reversed","input","trimmedInput","trim","words","capitalize","orig","enc","keyvals","puncRe","emailRe","httpHttpsRe","wwwRe","tldRe","isNaN","noFollowAttr","nofollow","word","possibleUrl","shortUrl","intFilter","base","compiledTemplates","one","bool","items","sep","range","stop","step","cycler","joiner","NunjucksView","app","fs","_prettifyError","precompileGlobal","wrapper","_precompile","pathStats","precompiled","templates","filepath","subpath","stat","match","addTemplates","console","out","orig_contextOrFrameLookup","orig_memberLookup","orig_Compiler_assertType","orig_Parser_parseAggregate","tokens","Slice","origState","getTokensState","errState","rethrow","isSlice","field","ARRAY_MEMBERS","append","remove","find","insert","OBJECT_MEMBERS","values","has_key","def","popitem","setdefault","update","sliceLookup"],"mappings":";AAAA,CAAA,SAAA,gCAAA,CAAA,IAAA,EAAA,OAAA,EAAA;AACA,MAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,MAAA,KAAA,QAAA,EACA,MAAA,CAAA,OAAA,GAAA,OAAA,EAAA,CADA,KAEA,IAAA,OAAA,MAAA,KAAA,UAAA,IAAA,MAAA,CAAA,GAAA,EACA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,CADA,KAEA,IAAA,OAAA,OAAA,KAAA,QAAA,EACA,OAAA,CAAA,UAAA,CAAA,GAAA,OAAA,EAAA,CADA,KAGA,IAAA,CAAA,UAAA,CAAA,GAAA,OAAA,EAAA;AACC,CATD,EASC,OAAA,IAAA,KAAA,WAAA,GAAA,IAAA,GAAA,IATD,EASC,YAAA;AACD;;;;;ACVA;AAAA;;AACA;AAAA,UAAA,gBAAA,GAAA,EAAA;;;AAEA;AAAA;;AACA;;AAAA,eAAA,mBAAA,CAAA,QAAA,EAAA;;;AAEA;AAAA;;AACA;AAAA,YAAA,gBAAA,CAAA,QAAA,CAAA,EAAA;AACA;AAAA,iBAAA,gBAAA,CAAA,QAAA,CAAA,CAAA,OAAA;AACA;AAAA;AACA;AAAA;;AACA;;;AAAA,YAAA,MAAA,GAAA,gBAAA,CAAA,QAAA,CAAA,GAAA;AACA;AAAA,UAAA,CAAA,EAAA,QADA;;AAEA;AAAA,UAAA,CAAA,EAAA,KAFA;;AAGA;AAAA,UAAA,OAAA,EAAA;AACA;;AAJA,SAAA;;;AAMA;AAAA;;AACA;;AAAA,QAAA,OAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,MAAA,CAAA,OAAA,EAAA,mBAAA;;;AAEA;AAAA;;AACA;;AAAA,QAAA,MAAA,CAAA,CAAA,GAAA,IAAA;;;AAEA;AAAA;;AACA;;AAAA,eAAA,MAAA,CAAA,OAAA;AACA;AAAA;;;;;AAGA;AAAA;;AACA;;;AAAA,MAAA,mBAAA,CAAA,CAAA,GAAA,OAAA;;;AAEA;AAAA;;AACA;;AAAA,MAAA,mBAAA,CAAA,CAAA,GAAA,gBAAA;;;AAEA;AAAA;;AACA;;AAAA,MAAA,mBAAA,CAAA,CAAA,GAAA,UAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA;AACA;AAAA,YAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA;AACA;AAAA,UAAA,MAAA,CAAA,cAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACA;AAAA,YAAA,YAAA,EAAA,KADA;;AAEA;AAAA,YAAA,UAAA,EAAA,IAFA;;AAGA;AAAA,YAAA,GAAA,EAAA;AACA;;AAJA,WAAA;AAKA;AAAA;AACA;;AAAA,OARA;;;AAUA;AAAA;;AACA;;;AAAA,MAAA,mBAAA,CAAA,CAAA,GAAA,UAAA,MAAA,EAAA;AACA;AAAA,YAAA,MAAA,GAAA,MAAA,IAAA,MAAA,CAAA,UAAA;AACA;AAAA,iBAAA,UAAA,GAAA;AAA2B,iBAAA,MAAA,CAAA,SAAA,CAAA;AAA4B,SADvD;AAEA;AAAA,iBAAA,gBAAA,GAAA;AAAiC,iBAAA,MAAA;AAAe,SAFhD;AAGA;;AAAA,QAAA,mBAAA,CAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA;AACA;;;AAAA,eAAA,MAAA;AACA;AAAA,OANA;;;AAQA;AAAA;;AACA;;;AAAA,MAAA,mBAAA,CAAA,CAAA,GAAA,UAAA,MAAA,EAAA,QAAA,EAAA;AAAsD,eAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAA+D,OAArH;;;AAEA;AAAA;;AACA;;;AAAA,MAAA,mBAAA,CAAA,CAAA,GAAA,EAAA;;;AAEA;AAAA;;AACA;;AAAA,aAAA,mBAAA,CAAA,mBAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;AC3DA,UAAIA,UAAU,GAAGC,KAAK,CAAtB,SAAA;AACA,UAAIC,QAAQ,GAAGC,MAAM,CAArB,SAAA;AAEA,UAAIC,SAAS,GAAG;AACd,aADc,OAAA;AAEd,aAFc,QAAA;AAGd,cAHc,OAAA;AAId,aAJc,MAAA;AAKd,aAAK;AALS,OAAhB;AAQA,UAAIC,WAAW,GAAf,UAAA;AAEA,UAAIC,OAAO,GAAGC,MAAM,CAANA,OAAAA,GAAd,EAAA;;AAEA,eAAA,UAAA,CAAA,GAAA,EAAA,CAAA,EAA4B;AAC1B,eAAOL,QAAQ,CAARA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAP,CAAOA,CAAP;AACD;;AAEDI,MAAAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;;AAEA,eAAA,YAAA,CAAA,EAAA,EAA0B;AACxB,eAAOF,SAAS,CAAhB,EAAgB,CAAhB;AACD;;AAED,eAAA,cAAA,CAAA,IAAA,EAAA,aAAA,EAAA,GAAA,EAAkD;AAChD,YAAI,CAACI,GAAG,CAAR,MAAA,EAAiB;AACf;AACAA,UAAAA,GAAG,GAAG,IAAIF,OAAO,CAAX,aAAA,CAANE,GAAM,CAANA;AACD;;AACDA,QAAAA,GAAG,CAAHA,MAAAA,CALgD,IAKhDA,EALgD,CAOhD;;AACA,YAAI,CAAJ,aAAA,EAAoB;AAClB,cAAMC,GAAG,GAAT,GAAA;AACAD,UAAAA,GAAG,GAAG,IAAA,KAAA,CAAUC,GAAG,CAAnBD,OAAM,CAANA;AACAA,UAAAA,GAAG,CAAHA,IAAAA,GAAWC,GAAG,CAAdD,IAAAA;AACD;;AAED,eAAA,GAAA;AACD;;AAEDF,MAAAA,OAAO,CAAPA,cAAAA,GAAAA,cAAAA;;AAEA,eAAA,aAAA,CAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAA+C;AAC7C,YAAA,GAAA;AACA,YAAA,KAAA;;AAEA,YAAII,OAAO,YAAX,KAAA,EAA8B;AAC5BC,UAAAA,KAAK,GAALA,OAAAA;AACAD,UAAAA,OAAO,GAAMC,KAAK,CAAX,IAAMA,GAAN,IAAMA,GAAeA,KAAK,CAAjCD,OAAAA;AACD;;AAED,YAAIP,MAAM,CAAV,cAAA,EAA2B;AACzBK,UAAAA,GAAG,GAAG,IAAA,KAAA,CAANA,OAAM,CAANA;AACAL,UAAAA,MAAM,CAANA,cAAAA,CAAAA,GAAAA,EAA2BS,aAAa,CAAxCT,SAAAA;AAFF,SAAA,MAGO;AACLK,UAAAA,GAAG,GAAHA,IAAAA;AACAL,UAAAA,MAAM,CAANA,cAAAA,CAAAA,GAAAA,EAAAA,SAAAA,EAAsC;AACpCU,YAAAA,UAAU,EAD0B,KAAA;AAEpCC,YAAAA,QAAQ,EAF4B,IAAA;AAGpCC,YAAAA,KAAK,EAAEL;AAH6B,WAAtCP;AAKD;;AAEDA,QAAAA,MAAM,CAANA,cAAAA,CAAAA,GAAAA,EAAAA,MAAAA,EAAmC;AACjCY,UAAAA,KAAK,EAAE;AAD0B,SAAnCZ;;AAIA,YAAIa,KAAK,CAAT,iBAAA,EAA6B;AAC3BA,UAAAA,KAAK,CAALA,iBAAAA,CAAAA,GAAAA,EAA6B,KAA7BA,WAAAA;AACD;;AAED,YAAA,QAAA;;AAEA,YAAA,KAAA,EAAW;AACT,cAAMC,eAAe,GAAGd,MAAM,CAANA,wBAAAA,CAAAA,KAAAA,EAAxB,OAAwBA,CAAxB;;AACAe,UAAAA,QAAQ,GAAGD,eAAe,KAAKA,eAAe,CAAfA,GAAAA,IAAwB,YAAA;AAAA,mBAAMA,eAAe,CAArB,KAAA;AAAvDC,WAA0B,CAA1BA;;AACA,cAAI,CAAJ,QAAA,EAAe;AACbA,YAAAA,QAAQ,GAAG,SAAA,QAAA,GAAA;AAAA,qBAAMP,KAAK,CAAX,KAAA;AAAXO,aAAAA;AACD;AALH,SAAA,MAMO;AACL,cAAMC,KAAK,GAAI,IAAA,KAAA,CAAD,OAAC,EAAf,KAAA;;AACAD,UAAAA,QAAQ,GAAI,SAAA,QAAA,GAAA;AAAA,mBAAA,KAAA;AAAZA,WAAAA;AACD;;AAEDf,QAAAA,MAAM,CAANA,cAAAA,CAAAA,GAAAA,EAAAA,OAAAA,EAAoC;AAClCiB,UAAAA,GAAG,EAAE,SAAA,GAAA,GAAA;AAAA,mBAAMF,QAAQ,CAARA,IAAAA,CAAN,GAAMA,CAAN;AAAA;AAD6B,SAApCf;AAIAA,QAAAA,MAAM,CAANA,cAAAA,CAAAA,GAAAA,EAAAA,OAAAA,EAAoC;AAClCY,UAAAA,KAAK,EAAEJ;AAD2B,SAApCR;AAIAK,QAAAA,GAAG,CAAHA,MAAAA,GAAAA,MAAAA;AACAA,QAAAA,GAAG,CAAHA,KAAAA,GAAAA,KAAAA;AACAA,QAAAA,GAAG,CAAHA,WAAAA,GAAAA,IAAAA;;AAEAA,QAAAA,GAAG,CAAHA,MAAAA,GAAa,SAAA,MAAA,CAAA,IAAA,EAAsB;AACjC,cAAIa,GAAG,GAAG,OAAOC,IAAI,IAAX,cAAA,IADuB,GACjC,CADiC,CAGjC;AACA;;AACA,cAAI,KAAJ,WAAA,EAAsB;AACpB,gBAAI,KAAA,MAAA,IAAe,KAAnB,KAAA,EAA+B;AAC7BD,cAAAA,GAAG,IAAA,YAAc,KAAd,MAAA,GAAA,WAAA,GAAqC,KAArC,KAAA,GAAHA,GAAAA;AADF,aAAA,MAEO,IAAI,KAAJ,MAAA,EAAiB;AACtBA,cAAAA,GAAG,IAAA,YAAc,KAAd,MAAA,GAAHA,GAAAA;AACD;AACF;;AAEDA,UAAAA,GAAG,IAAHA,KAAAA;;AACA,cAAI,KAAJ,WAAA,EAAsB;AACpBA,YAAAA,GAAG,IAAHA,GAAAA;AACD;;AAED,eAAA,OAAA,GAAeA,GAAG,IAAI,KAAA,OAAA,IAAtB,EAAkB,CAAlB;AACA,eAAA,WAAA,GAAA,KAAA;AACA,iBAAA,IAAA;AApBFb,SAAAA;;AAuBA,eAAA,GAAA;AACD;;AAGD,UAAIL,MAAM,CAAV,cAAA,EAA2B;AACzBA,QAAAA,MAAM,CAANA,cAAAA,CAAsBS,aAAa,CAAnCT,SAAAA,EAA+Ca,KAAK,CAApDb,SAAAA;AADF,OAAA,MAEO;AACLS,QAAAA,aAAa,CAAbA,SAAAA,GAA0B,MAAM,CAAN,MAAA,CAAcI,KAAK,CAAnB,SAAA,EAA+B;AACvDO,UAAAA,WAAW,EAAE;AACXR,YAAAA,KAAK,EAAEH;AADI;AAD0C,SAA/B,CAA1BA;AAKD;;AAEDN,MAAAA,OAAO,CAAPA,aAAAA,GAAAA,aAAAA;;AAEA,eAAA,MAAA,CAAA,GAAA,EAAqB;AACnB,eAAOkB,GAAG,CAAHA,OAAAA,CAAAA,WAAAA,EAAP,YAAOA,CAAP;AACD;;AAEDlB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,UAAA,CAAA,GAAA,EAAyB;AACvB,eAAOJ,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,CAAAA,GAAAA,MAAP,mBAAA;AACD;;AAEDI,MAAAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAsB;AACpB,eAAOJ,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,CAAAA,GAAAA,MAAP,gBAAA;AACD;;AAEDI,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,QAAA,CAAA,GAAA,EAAuB;AACrB,eAAOJ,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,CAAAA,GAAAA,MAAP,iBAAA;AACD;;AAEDI,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,eAAA,QAAA,CAAA,GAAA,EAAuB;AACrB,eAAOJ,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,CAAAA,GAAAA,MAAP,iBAAA;AACD;;AAEDI,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,sBAAA,CAAA,IAAA,EAAsC;AACpC,YAAI,CAAJ,IAAA,EAAW;AACT,iBAAA,EAAA;AACD;;AAED,YAAI,OAAA,IAAA,KAAJ,QAAA,EAA8B;AAC5B,iBAAOmB,IAAI,CAAJA,KAAAA,CAAP,GAAOA,CAAP;AACD;;AAED,eAAO,CAAP,IAAO,CAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,eAAA,aAAA,CAAA,SAAA,EAAkC;AAChC,YAAMC,KAAK,GAAGC,sBAAsB,CAApC,SAAoC,CAApC;;AAEA,eAAO,SAAA,UAAA,CAAA,IAAA,EAA0B;AAC/B,cAAIC,KAAK,GAAT,IAAA;;AAEA,eAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGH,KAAK,CAAzB,MAAA,EAAkCG,CAAlC,EAAA,EAAuC;AACrC,gBAAMC,IAAI,GAAGJ,KAAK,CADmB,CACnB,CAAlB,CADqC,CAGrC;AACA;;AACA,gBAAIK,UAAU,CAAA,KAAA,EAAd,IAAc,CAAd,EAA6B;AAC3BH,cAAAA,KAAK,GAAGA,KAAK,CAAbA,IAAa,CAAbA;AADF,aAAA,MAEO;AACL,qBAAA,SAAA;AACD;AACF;;AAED,iBAAA,KAAA;AAfF,SAAA;AAiBD;;AAEDtB,MAAAA,OAAO,CAAPA,aAAAA,GAAAA,aAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAA,GAAA,EAAA,gBAAA,EAA6C;AAC3C,YAAM0B,MAAM,GAAZ,EAAA;AACA,YAAMC,QAAQ,GAAGC,UAAU,CAAVA,GAAU,CAAVA,GAAAA,GAAAA,GAAwBC,aAAa,CAAtD,GAAsD,CAAtD;;AACA,aAAK,IAAIN,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGO,GAAG,CAAvB,MAAA,EAAgCP,CAAhC,EAAA,EAAqC;AACnC,cAAMd,KAAK,GAAGqB,GAAG,CAAjB,CAAiB,CAAjB;AACA,cAAMC,GAAG,GAAGJ,QAAQ,CAAA,KAAA,EAApB,CAAoB,CAApB;;AACA,cAAII,GAAG,KAAHA,SAAAA,IAAqBC,gBAAgB,KAAzC,IAAA,EAAoD;AAClD,kBAAM,IAAA,SAAA,CAAA,0BAAA,GAAA,GAAN,0BAAM,CAAN;AACD;;AACD,WAACN,MAAM,CAANA,GAAM,CAANA,KAAgBA,MAAM,CAANA,GAAM,CAANA,GAAjB,EAACA,CAAD,EAAA,IAAA,CAAA,KAAA;AACD;;AACD,eAAA,MAAA;AACD;;AAED1B,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAsB;AACpB,eAAOL,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAP,GAAOA,CAAP;AACD;;AAEDK,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,OAAA,CAAA,KAAA,EAAwB;AACtB,YAAM0B,MAAM,GAAZ,EAAA;;AACA,YAAI,CAAJ,KAAA,EAAY;AACV,iBAAA,MAAA;AACD;;AACD,YAAMO,MAAM,GAAGC,KAAK,CAApB,MAAA;AACA,YAAMC,QAAQ,GAAGC,OAAO,CAAPA,SAAO,CAAPA,CAAAA,KAAAA,CAAjB,CAAiBA,CAAjB;AACA,YAAIC,KAAK,GAAG,CAAZ,CAAA;;AAEA,eAAO,EAAA,KAAA,GAAP,MAAA,EAAyB;AACvB,cAAIC,OAAO,CAAA,QAAA,EAAWJ,KAAK,CAAvBI,KAAuB,CAAhB,CAAPA,KAAoC,CAAxC,CAAA,EAA4C;AAC1CZ,YAAAA,MAAM,CAANA,IAAAA,CAAYQ,KAAK,CAAjBR,KAAiB,CAAjBA;AACD;AACF;;AACD,eAAA,MAAA;AACD;;AAED1B,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EAA0B;AACxB,YAAIuC,GAAG,GAAP,EAAA;;AACA,aAAK,IAAIhB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,CAAA,EAAuBA,CAAvB,EAAA,EAA4B;AAC1BgB,UAAAA,GAAG,IAAHA,KAAAA;AACD;;AACD,eAAA,GAAA;AACD;;AAEDvC,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAkC;AAChC,YAAI8B,GAAG,IAAP,IAAA,EAAiB;AACf;AACD;;AAED,YAAIpC,UAAU,CAAVA,OAAAA,IAAsBoC,GAAG,CAAHA,OAAAA,KAAgBpC,UAAU,CAApD,OAAA,EAA8D;AAC5DoC,UAAAA,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,EAAAA,OAAAA;AADF,SAAA,MAEO,IAAIA,GAAG,CAAHA,MAAAA,KAAe,CAACA,GAAG,CAAvB,MAAA,EAAgC;AACrC,eAAK,IAAIP,CAAC,GAAL,CAAA,EAAWiB,CAAC,GAAGV,GAAG,CAAvB,MAAA,EAAgCP,CAAC,GAAjC,CAAA,EAAuCA,CAAvC,EAAA,EAA4C;AAC1CkB,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,OAAAA,EAAmBX,GAAG,CAAtBW,CAAsB,CAAtBA,EAAAA,CAAAA,EAAAA,GAAAA;AACD;AACF;AACF;;AAEDzC,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,GAAA,CAAA,GAAA,EAAA,IAAA,EAAwB;AACtB,YAAI0C,OAAO,GAAX,EAAA;;AACA,YAAIZ,GAAG,IAAP,IAAA,EAAiB;AACf,iBAAA,OAAA;AACD;;AAED,YAAIpC,UAAU,CAAVA,GAAAA,IAAkBoC,GAAG,CAAHA,GAAAA,KAAYpC,UAAU,CAA5C,GAAA,EAAkD;AAChD,iBAAOoC,GAAG,CAAHA,GAAAA,CAAP,IAAOA,CAAP;AACD;;AAED,aAAK,IAAIP,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGO,GAAG,CAAvB,MAAA,EAAgCP,CAAhC,EAAA,EAAqC;AACnCmB,UAAAA,OAAO,CAACA,OAAO,CAAfA,MAAO,CAAPA,GAA0BD,IAAI,CAACX,GAAG,CAAJ,CAAI,CAAJ,EAA9BY,CAA8B,CAA9BA;AACD;;AAED,YAAIZ,GAAG,CAAHA,MAAAA,KAAe,CAACA,GAAG,CAAvB,MAAA,EAAgC;AAC9BY,UAAAA,OAAO,CAAPA,MAAAA,GAAiBZ,GAAG,CAApBY,MAAAA;AACD;;AAED,eAAA,OAAA;AACD;;AAED1C,MAAAA,OAAO,CAAPA,GAAAA,GAAAA,GAAAA;;AAEA,eAAA,SAAA,CAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAkC;AAChC,YAAIuB,CAAC,GAAG,CAAR,CAAA;;AAEA,iBAAA,IAAA,GAAgB;AACdA,UAAAA,CAAC;;AAED,cAAIA,CAAC,GAAGoB,GAAG,CAAX,MAAA,EAAoB;AAClBC,YAAAA,IAAI,CAACD,GAAG,CAAJ,CAAI,CAAJ,EAAA,CAAA,EAAA,IAAA,EAAJC,EAAI,CAAJA;AADF,WAAA,MAEO;AACLC,YAAAA,EAAE;AACH;AACF;;AAEDC,QAAAA,IAAI;AACL;;AAED9C,MAAAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;;AAEA,eAAA,QAAA,CAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAiC;AAC/B,YAAM+C,IAAI,GAAGC,KAAK,CAAClB,GAAG,IAAtB,EAAkB,CAAlB;AACA,YAAMmB,GAAG,GAAGF,IAAI,CAAhB,MAAA;AACA,YAAIxB,CAAC,GAAG,CAAR,CAAA;;AAEA,iBAAA,IAAA,GAAgB;AACdA,UAAAA,CAAC;AACD,cAAM2B,CAAC,GAAGH,IAAI,CAAd,CAAc,CAAd;;AAEA,cAAIxB,CAAC,GAAL,GAAA,EAAa;AACXqB,YAAAA,IAAI,CAAA,CAAA,EAAId,GAAG,CAAP,CAAO,CAAP,EAAA,CAAA,EAAA,GAAA,EAAJc,IAAI,CAAJA;AADF,WAAA,MAEO;AACLC,YAAAA,EAAE;AACH;AACF;;AAEDC,QAAAA,IAAI;AACL;;AAED9C,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAA,aAAA,EAAA,SAAA,EAAgD;AAC9C,eAAOL,KAAK,CAALA,SAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAA6BgD,GAAG,IAAhChD,EAAAA,EAAAA,aAAAA,EAAP,SAAOA,CAAP;AACD;;AAEDK,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClB;AACA,YAAM2C,GAAG,GAAT,EAAA;;AACA,aAAK,IAAL,CAAA,IAAA,GAAA,EAAmB;AACjB,cAAIlB,UAAU,CAAA,GAAA,EAAd,CAAc,CAAd,EAAwB;AACtBkB,YAAAA,GAAG,CAAHA,IAAAA,CAAAA,CAAAA;AACD;AACF;;AACD,eAAA,GAAA;AACD;;AAED3C,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,KAAAA;;AAEA,eAAA,QAAA,CAAA,GAAA,EAAuB;AACrB,eAAO,KAAK,CAAL,GAAK,CAAL,CAAA,GAAA,CAAe,UAAA,CAAA,EAAA;AAAA,iBAAO,CAAA,CAAA,EAAI8B,GAAG,CAAd,CAAc,CAAP,CAAP;AAAtB,SAAO,CAAP;AACD;;AAED9B,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAsB;AACpB,eAAO,KAAK,CAAL,GAAK,CAAL,CAAA,GAAA,CAAe,UAAA,CAAA,EAAA;AAAA,iBAAO8B,GAAG,CAAV,CAAU,CAAV;AAAtB,SAAO,CAAP;AACD;;AAED9B,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,MAAA,CAAA,IAAA,EAAA,IAAA,EAA4B;AAC1BmD,QAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AACAH,QAAAA,KAAK,CAALA,IAAK,CAALA,CAAAA,OAAAA,CAAoB,UAAA,CAAA,EAAK;AACvBG,UAAAA,IAAI,CAAJA,CAAI,CAAJA,GAAUC,IAAI,CAAdD,CAAc,CAAdA;AADFH,SAAAA;AAGA,eAAA,IAAA;AACD;;AAEDhD,MAAAA,OAAO,CAAPA,OAAAA,GAAkBA,OAAO,CAAPA,MAAAA,GAAlBA,MAAAA;;AAEA,eAAA,UAAA,CAAA,GAAA,EAAA,GAAA,EAA8B;AAC5B,YAAIqD,OAAO,CAAPA,GAAO,CAAPA,IAAgBC,QAAQ,CAA5B,GAA4B,CAA5B,EAAmC;AACjC,iBAAOpC,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,MAAqB,CAA5B,CAAA;AADF,SAAA,MAEO,IAAIqC,QAAQ,CAAZ,GAAY,CAAZ,EAAmB;AACxB,iBAAOxB,GAAG,IAAV,GAAA;AACD;;AACD,cAAM,IAAA,KAAA,CAAU,6CAAA,GAAA,GAAhB,wBAAM,CAAN;AAED;;AAED/B,MAAAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;;;;;;;oBCxYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,UAAMwD,YAAY,GAAGC,mBAAO,CAA5B,EAA4B,CAA5B;;AACA,UAAMC,GAAG,GAAGD,mBAAO,CAAnB,CAAmB,CAAnB;;AAEA,eAAA,UAAA,CAAA,MAAA,EAAA,IAAA,EAAkC;AAChC,YAAI,OAAA,MAAA,KAAA,UAAA,IAAgC,OAAA,IAAA,KAApC,UAAA,EAAgE;AAC9D,iBAAA,IAAA;AACD;;AACD,eAAO,SAAA,IAAA,GAAgB;AACrB;AACA,cAAME,GAAG,GAAG,KAFS,MAErB,CAFqB,CAIrB;;AACA,eAAA,MAAA,GAAA,MAAA;AACA,cAAMC,GAAG,GAAGC,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EAAZ,SAAYA,CAAZ;AACA,eAAA,MAAA,GAAA,GAAA;AAEA,iBAAA,GAAA;AATF,SAAA;AAWD;;AAED,eAAA,WAAA,CAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAuC;AACrCC,QAAAA,KAAK,GAAGA,KAAK,IAAbA,EAAAA;AAEAJ,QAAAA,GAAG,CAAHA,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAAwB,UAAA,CAAA,EAAK;AAC3BI,UAAAA,KAAK,CAALA,CAAK,CAALA,GAAWC,UAAU,CAACC,GAAG,CAAHA,SAAAA,CAAD,CAACA,CAAD,EAAmBF,KAAK,CAA7CA,CAA6C,CAAxB,CAArBA;AADFJ,SAAAA;;AAHqC,YAO/BO,QAP+B,GAAA,aAAA,UAAA,IAAA,EAAA;AAAA,UAAA,cAAA,CAAA,QAAA,EAAA,IAAA,CAAA;;AAAA,mBAAA,QAAA,GAAA;AAAA,mBAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,KAAA,IAAA;AAAA;;AAAA,UAAA,YAAA,CAAA,QAAA,EAAA,CAAA;AAAA,YAAA,GAAA,EAAA,UAAA;AAAA,YAAA,GAAA,EAQnC,SAAA,GAAA,GAAe;AACb,qBAAA,IAAA;AACD;AAVkC,WAAA,CAAA,CAAA;;AAAA,iBAAA,QAAA;AAAA,SAAA,CAAA,GAAA,CAAA;;AAarCP,QAAAA,GAAG,CAAHA,OAAAA,CAAYO,QAAQ,CAApBP,SAAAA,EAAAA,KAAAA;;AAEA,eAAA,QAAA;AACD;;UAEKQ,G;AACJ,iBAAA,GAAA,GAAqB;AACnB;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA;AACD;;;;eAEDC,I,GAAAA,SAAAA,IAAAA,GAAO,C;;YAMAC,M,GAAP,SAAA,MAAA,CAAA,IAAA,EAAA,KAAA,EAA2B;AACzB,cAAI,OAAA,IAAA,KAAJ,QAAA,EAA8B;AAC5BN,YAAAA,KAAK,GAALA,IAAAA;AACAO,YAAAA,IAAI,GAAJA,WAAAA;AACD;;AACD,iBAAOC,WAAW,CAAA,IAAA,EAAA,IAAA,EAAlB,KAAkB,CAAlB;;;;;eATF,SAAA,GAAA,GAAe;AACb,mBAAO,KAAA,WAAA,CAAP,IAAA;AACD;;;;;;UAWGC,U;;;AACJ,iBAAA,UAAA,GAAqB;AAAA,cAAA,MAAA;;AAAA,cAAA,KAAA;;AACnB,UAAA,KAAA,GAAA,aAAA,CAAA,IAAA,CAAA,IAAA,KADmB,IACnB,CADmB,CAEnB;;AACA,WAAA,MAAA,GAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,SAAA;;AAHmB,iBAAA,KAAA;AAIpB;;;;gBAEDJ,I,GAAAA,SAAAA,IAAAA,GAAO,C;;mBAMAC,M,GAAP,SAAA,MAAA,CAAA,IAAA,EAAA,KAAA,EAA2B;AACzB,cAAI,OAAA,IAAA,KAAJ,QAAA,EAA8B;AAC5BN,YAAAA,KAAK,GAALA,IAAAA;AACAO,YAAAA,IAAI,GAAJA,WAAAA;AACD;;AACD,iBAAOC,WAAW,CAAA,IAAA,EAAA,IAAA,EAAlB,KAAkB,CAAlB;;;;;eATF,SAAA,GAAA,GAAe;AACb,mBAAO,KAAA,WAAA,CAAP,IAAA;AACD;;;;QAXsBd,Y;;AAsBzBvD,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AAAEiE,QAAAA,GAAG,EAAL,GAAA;AAAOK,QAAAA,UAAU,EAAVA;AAAP,OAAjBtE;;;;;;;;;AClFA,UAAIyD,GAAG,GAAGD,mBAAO,CAAjB,CAAiB,CAAjB;;AACA,UAAIe,SAAS,GAAG7E,KAAK,CAArB,IAAA;AACA,UAAI8E,iBAAiB,GACnB,OAAA,MAAA,KAAA,UAAA,IAAgCC,MAAM,CAAtC,QAAA,IAAmD,OAAA,SAAA,KADrD,UAAA,C,CAKA;AACA;AACA;;UACMC,K;AACJ,iBAAA,KAAA,CAAA,MAAA,EAAA,aAAA,EAAmC;AACjC,eAAA,SAAA,GAAiB9E,MAAM,CAANA,MAAAA,CAAjB,IAAiBA,CAAjB;AACA,eAAA,MAAA,GAAA,MAAA;AACA,eAAA,QAAA,GAHiC,KAGjC,CAHiC,CAIjC;AACA;;AACA,eAAA,aAAA,GAAA,aAAA;AACD;;;;eAED+E,G,GAAAA,SAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAA0B;AACxB;AACA;AACA,cAAIxD,KAAK,GAAGiD,IAAI,CAAJA,KAAAA,CAAZ,GAAYA,CAAZ;AACA,cAAIvC,GAAG,GAAG,KAAV,SAAA;AACA,cAAI+C,KAAK,GAAT,IAAA;;AAEA,cAAA,SAAA,EAAe;AACb,gBAAKA,KAAK,GAAG,KAAA,OAAA,CAAazD,KAAK,CAAlB,CAAkB,CAAlB,EAAb,IAAa,CAAb,EAA4C;AAC1CyD,cAAAA,KAAK,CAALA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA;AACA;AACD;AACF;;AAED,eAAK,IAAItD,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGH,KAAK,CAALA,MAAAA,GAApB,CAAA,EAAsCG,CAAtC,EAAA,EAA2C;AACzC,gBAAMuD,EAAE,GAAG1D,KAAK,CAAhB,CAAgB,CAAhB;;AAEA,gBAAI,CAACU,GAAG,CAAR,EAAQ,CAAR,EAAc;AACZA,cAAAA,GAAG,CAAHA,EAAG,CAAHA,GAAAA,EAAAA;AACD;;AACDA,YAAAA,GAAG,GAAGA,GAAG,CAATA,EAAS,CAATA;AACD;;AAEDA,UAAAA,GAAG,CAACV,KAAK,CAACA,KAAK,CAALA,MAAAA,GAAVU,CAAS,CAAN,CAAHA,GAAAA,GAAAA;;;eAGFhB,G,GAAAA,SAAAA,GAAAA,CAAAA,IAAAA,EAAU;AACR,cAAII,GAAG,GAAG,KAAA,SAAA,CAAV,IAAU,CAAV;;AACA,cAAIA,GAAG,KAAP,SAAA,EAAuB;AACrB,mBAAA,GAAA;AACD;;AACD,iBAAA,IAAA;;;eAGF6D,M,GAAAA,SAAAA,MAAAA,CAAAA,IAAAA,EAAa;AACX,cAAIC,CAAC,GAAG,KAAR,MAAA;AACA,cAAI9D,GAAG,GAAG,KAAA,SAAA,CAAV,IAAU,CAAV;;AACA,cAAIA,GAAG,KAAP,SAAA,EAAuB;AACrB,mBAAA,GAAA;AACD;;AACD,iBAAO8D,CAAC,IAAIA,CAAC,CAADA,MAAAA,CAAZ,IAAYA,CAAZ;;;eAGFC,O,GAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA,QAAAA,EAAwB;AACtB,cAAID,CAAC,GAAIE,QAAQ,IAAI,KAAb,aAACA,GAAD,SAACA,GAA8C,KAAvD,MAAA;AACA,cAAIhE,GAAG,GAAG,KAAA,SAAA,CAAV,IAAU,CAAV;;AACA,cAAIA,GAAG,KAAP,SAAA,EAAuB;AACrB,mBAAA,IAAA;AACD;;AACD,iBAAO8D,CAAC,IAAIA,CAAC,CAADA,OAAAA,CAAZ,IAAYA,CAAZ;;;eAGFG,I,GAAAA,SAAAA,IAAAA,CAAAA,aAAAA,EAAoB;AAClB,iBAAO,IAAA,KAAA,CAAA,IAAA,EAAP,aAAO,CAAP;;;eAGFC,G,GAAAA,SAAAA,GAAAA,GAAM;AACJ,iBAAO,KAAP,MAAA;;;;;;AAIJ,eAAA,SAAA,CAAA,QAAA,EAAA,UAAA,EAAA,IAAA,EAA+C;AAC7C,eAAO,SAAA,KAAA,GAA6B;AAAA,eAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAXC,SAAW,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAXA,YAAAA,SAAW,CAAA,IAAA,CAAXA,GAAW,SAAA,CAAA,IAAA,CAAXA;AAAW;;AAClC,cAAIC,QAAQ,GAAGC,OAAO,CAAtB,SAAsB,CAAtB;AACA,cAAA,IAAA;AACA,cAAIC,MAAM,GAAGC,cAAc,CAA3B,SAA2B,CAA3B;;AAEA,cAAIH,QAAQ,GAAGI,QAAQ,CAAvB,MAAA,EAAgC;AAC9BC,YAAAA,IAAI,GAAGN,SAAS,CAATA,KAAAA,CAAAA,CAAAA,EAAmBK,QAAQ,CADJ,MACvBL,CAAPM,CAD8B,CAG9B;AACA;;AACAN,YAAAA,SAAS,CAATA,KAAAA,CAAgBM,IAAI,CAApBN,MAAAA,EAAAA,QAAAA,EAAAA,OAAAA,CAA+C,UAAA,GAAA,EAAA,CAAA,EAAY;AACzD,kBAAI9D,CAAC,GAAGqE,UAAU,CAAlB,MAAA,EAA2B;AACzBJ,gBAAAA,MAAM,CAACI,UAAU,CAAjBJ,CAAiB,CAAX,CAANA,GAAAA,GAAAA;AACD;AAHHH,aAAAA;AAKAM,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,MAAAA;AAVF,WAAA,MAWO,IAAIL,QAAQ,GAAGI,QAAQ,CAAvB,MAAA,EAAgC;AACrCC,YAAAA,IAAI,GAAGN,SAAS,CAATA,KAAAA,CAAAA,CAAAA,EAAPM,QAAON,CAAPM;;AAEA,iBAAK,IAAIpE,CAAC,GAAV,QAAA,EAAuBA,CAAC,GAAGmE,QAAQ,CAAnC,MAAA,EAA4CnE,CAA5C,EAAA,EAAiD;AAC/C,kBAAMsE,GAAG,GAAGH,QAAQ,CAD2B,CAC3B,CAApB,CAD+C,CAG/C;AACA;AACA;;AACAC,cAAAA,IAAI,CAAJA,IAAAA,CAAUH,MAAM,CAAhBG,GAAgB,CAAhBA;AACA,qBAAOH,MAAM,CAAb,GAAa,CAAb;AACD;;AACDG,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,MAAAA;AAZK,WAAA,MAaA;AACLA,YAAAA,IAAI,GAAJA,SAAAA;AACD;;AAED,iBAAOlD,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EAAP,IAAOA,CAAP;AAjCF,SAAA;AAmCD;;AAED,eAAA,eAAA,CAAA,GAAA,EAA8B;AAC5BX,QAAAA,GAAG,CAAHA,UAAAA,GAAAA,IAAAA;AACA,eAAA,GAAA;AACD;;AAED,eAAA,aAAA,CAAA,GAAA,EAA4B;AAC1B,eAAOA,GAAG,IAAIjC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAd,YAAcA,CAAd;AACD;;AAED,eAAA,cAAA,CAAA,IAAA,EAA8B;AAC5B,YAAIoD,GAAG,GAAG0C,IAAI,CAAd,MAAA;;AACA,YAAA,GAAA,EAAS;AACP,cAAMG,OAAO,GAAGH,IAAI,CAAC1C,GAAG,GAAxB,CAAoB,CAApB;;AACA,cAAI8C,aAAa,CAAjB,OAAiB,CAAjB,EAA4B;AAC1B,mBAAA,OAAA;AACD;AACF;;AACD,eAAA,EAAA;AACD;;AAED,eAAA,OAAA,CAAA,IAAA,EAAuB;AACrB,YAAI9C,GAAG,GAAG0C,IAAI,CAAd,MAAA;;AACA,YAAI1C,GAAG,KAAP,CAAA,EAAe;AACb,iBAAA,CAAA;AACD;;AAED,YAAM6C,OAAO,GAAGH,IAAI,CAAC1C,GAAG,GAAxB,CAAoB,CAApB;;AACA,YAAI8C,aAAa,CAAjB,OAAiB,CAAjB,EAA4B;AAC1B,iBAAO9C,GAAG,GAAV,CAAA;AADF,SAAA,MAEO;AACL,iBAAA,GAAA;AACD;QAGH;AACA;AACA;;;AACA,eAAA,UAAA,CAAA,GAAA,EAAyB;AACvB,YAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3B,iBAAA,GAAA;AACD;;AAED,aAAA,GAAA,GAAA,GAAA;AACA,aAAA,MAAA,GAAc/B,GAAG,CAAjB,MAAA;AACD;;AAED8E,MAAAA,UAAU,CAAVA,SAAAA,GAAuB,MAAM,CAAN,MAAA,CAAcC,MAAM,CAApB,SAAA,EAAgC;AACrDhE,QAAAA,MAAM,EAAE;AACNzB,UAAAA,QAAQ,EADF,IAAA;AAEN0F,UAAAA,YAAY,EAFN,IAAA;AAGNzF,UAAAA,KAAK,EAAE;AAHD;AAD6C,OAAhC,CAAvBuF;;AAOAA,MAAAA,UAAU,CAAVA,SAAAA,CAAAA,OAAAA,GAA+B,SAAA,OAAA,GAAmB;AAChD,eAAO,KAAP,GAAA;AADFA,OAAAA;;AAGAA,MAAAA,UAAU,CAAVA,SAAAA,CAAAA,QAAAA,GAAgC,SAAA,QAAA,GAAoB;AAClD,eAAO,KAAP,GAAA;AADFA,OAAAA;;AAIA,eAAA,YAAA,CAAA,IAAA,EAAA,MAAA,EAAoC;AAClC,YAAIG,IAAI,YAAR,UAAA,EAAgC;AAC9B,iBAAO,IAAA,UAAA,CAAP,MAAO,CAAP;AACD;;AACD,eAAOC,MAAM,CAAb,QAAOA,EAAP;AACD;;AAED,eAAA,QAAA,CAAA,GAAA,EAAuB;AACrB,YAAIC,IAAI,GAAG,OAAX,GAAA;;AAEA,YAAIA,IAAI,KAAR,QAAA,EAAuB;AACrB,iBAAO,IAAA,UAAA,CAAP,GAAO,CAAP;AADF,SAAA,MAEO,IAAIA,IAAI,KAAR,UAAA,EAAyB;AAC9B,iBAAA,GAAA;AADK,SAAA,MAEA;AACL,iBAAO,SAAA,QAAA,CAAA,IAAA,EAAwB;AAC7B,gBAAIC,GAAG,GAAGpF,GAAG,CAAHA,KAAAA,CAAAA,IAAAA,EAAV,SAAUA,CAAV;;AAEA,gBAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3B,qBAAO,IAAA,UAAA,CAAP,GAAO,CAAP;AACD;;AAED,mBAAA,GAAA;AAPF,WAAA;AASD;AACF;;AAED,eAAA,aAAA,CAAA,GAAA,EAAA,UAAA,EAAwC;AACtCA,QAAAA,GAAG,GAAIA,GAAG,KAAHA,SAAAA,IAAqBA,GAAG,KAAzB,IAACA,GAAD,GAACA,GAAPA,EAAAA;;AAEA,YAAIqF,UAAU,IAAI,EAAErF,GAAG,YAAvB,UAAkB,CAAlB,EAAgD;AAC9CA,UAAAA,GAAG,GAAGwC,GAAG,CAAHA,MAAAA,CAAWxC,GAAG,CAApBA,QAAiBA,EAAXwC,CAANxC;AACD;;AAED,eAAA,GAAA;AACD;;AAED,eAAA,aAAA,CAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAA2C;AACzC,YAAIA,GAAG,KAAHA,IAAAA,IAAgBA,GAAG,KAAvB,SAAA,EAAuC;AACrC,gBAAM,IAAIwC,GAAG,CAAP,aAAA,CAAA,6CAAA,EAEJ8C,MAAM,GAFF,CAAA,EAGJC,KAAK,GAHP,CAAM,CAAN;AAKD;;AACD,eAAA,GAAA;AACD;;AAED,eAAA,YAAA,CAAA,GAAA,EAAA,GAAA,EAAgC;AAC9B,YAAI3E,GAAG,KAAHA,SAAAA,IAAqBA,GAAG,KAA5B,IAAA,EAAuC;AACrC,iBAAA,SAAA;AACD;;AAED,YAAI,OAAOA,GAAG,CAAV,GAAU,CAAV,KAAJ,UAAA,EAAoC;AAClC,iBAAO,YAAA;AAAA,iBAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAI6D,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,cAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,mBAAa7D,GAAG,CAAHA,GAAG,CAAHA,CAAAA,KAAAA,CAAAA,GAAAA,EAAb,IAAaA,CAAb;AAAP,WAAA;AACD;;AAED,eAAOA,GAAG,CAAV,GAAU,CAAV;AACD;;AAED,eAAA,QAAA,CAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAA4C;AAC1C,YAAI,CAAJ,GAAA,EAAU;AACR,gBAAM,IAAA,KAAA,CAAU,qBAAA,IAAA,GAAhB,iCAAM,CAAN;AADF,SAAA,MAEO,IAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AACpC,gBAAM,IAAA,KAAA,CAAU,qBAAA,IAAA,GAAhB,4BAAM,CAAN;AACD;;AAED,eAAOA,GAAG,CAAHA,KAAAA,CAAAA,OAAAA,EAAP,IAAOA,CAAP;AACD;;AAED,eAAA,oBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAoD;AAClD,YAAIZ,GAAG,GAAG2D,KAAK,CAALA,MAAAA,CAAV,IAAUA,CAAV;AACA,eAAQ3D,GAAG,KAAJ,SAACA,GAAD,GAACA,GAENwF,OAAO,CAAPA,MAAAA,CAFF,IAEEA,CAFF;AAGD;;AAED,eAAA,WAAA,CAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAA2C;AACzC,YAAIC,KAAK,CAAT,MAAA,EAAkB;AAChB,iBAAA,KAAA;AADF,SAAA,MAEO;AACL,iBAAO,IAAIjD,GAAG,CAAP,aAAA,CAAA,KAAA,EAAA,MAAA,EAAP,KAAO,CAAP;AACD;AACF;;AAED,eAAA,SAAA,CAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAyC;AACvC,YAAIA,GAAG,CAAHA,OAAAA,CAAJ,GAAIA,CAAJ,EAAsB;AACpB,cAAMT,GAAG,GAAGN,GAAG,CAAf,MAAA;AAEAe,UAAAA,GAAG,CAAHA,SAAAA,CAAAA,GAAAA,EAAmB,SAAA,YAAA,CAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAqC;AACtD,oBAAA,KAAA;AACE,mBAAA,CAAA;AACEd,gBAAAA,IAAI,CAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAJA,IAAI,CAAJA;AACA;;AACF,mBAAA,CAAA;AACEA,gBAAAA,IAAI,CAACgE,IAAI,CAAL,CAAK,CAAL,EAAUA,IAAI,CAAd,CAAc,CAAd,EAAA,CAAA,EAAA,GAAA,EAAJhE,IAAI,CAAJA;AACA;;AACF,mBAAA,CAAA;AACEA,gBAAAA,IAAI,CAACgE,IAAI,CAAL,CAAK,CAAL,EAAUA,IAAI,CAAd,CAAc,CAAd,EAAmBA,IAAI,CAAvB,CAAuB,CAAvB,EAAA,CAAA,EAAA,GAAA,EAAJhE,IAAI,CAAJA;AACA;;AACF;AACEgE,gBAAAA,IAAI,CAAJA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,IAAAA;AACAhE,gBAAAA,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA;AAZJ;AADFc,WAAAA,EAAAA,EAAAA;AAHF,SAAA,MAmBO;AACLA,UAAAA,GAAG,CAAHA,QAAAA,CAAAA,GAAAA,EAAkB,SAAA,YAAA,CAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAA8C;AAC9Dd,YAAAA,IAAI,CAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAJA,IAAI,CAAJA;AADFc,WAAAA,EAAAA,EAAAA;AAGD;AACF;;AAED,eAAA,QAAA,CAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAwC;AACtC,YAAImD,QAAQ,GAAZ,CAAA;AACA,YAAA,GAAA;AACA,YAAA,SAAA;;AAEA,iBAAA,IAAA,CAAA,CAAA,EAAA,MAAA,EAAyB;AACvBA,UAAAA,QAAQ;AACRC,UAAAA,SAAS,CAATA,CAAS,CAATA,GAAAA,MAAAA;;AAEA,cAAID,QAAQ,KAAZ,GAAA,EAAsB;AACpBhE,YAAAA,EAAE,CAAA,IAAA,EAAOiE,SAAS,CAATA,IAAAA,CAATjE,EAASiE,CAAP,CAAFjE;AACD;AACF;;AAED,YAAIa,GAAG,CAAHA,OAAAA,CAAJ,GAAIA,CAAJ,EAAsB;AACpBT,UAAAA,GAAG,GAAGN,GAAG,CAATM,MAAAA;AACA6D,UAAAA,SAAS,GAAG,IAAA,KAAA,CAAZA,GAAY,CAAZA;;AAEA,cAAI7D,GAAG,KAAP,CAAA,EAAe;AACbJ,YAAAA,EAAE,CAAA,IAAA,EAAFA,EAAE,CAAFA;AADF,WAAA,MAEO;AACL,iBAAK,IAAItB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGoB,GAAG,CAAvB,MAAA,EAAgCpB,CAAhC,EAAA,EAAqC;AACnC,kBAAMqF,IAAI,GAAGjE,GAAG,CAAhB,CAAgB,CAAhB;;AAEA,sBAAA,KAAA;AACE,qBAAA,CAAA;AACEF,kBAAAA,IAAI,CAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAJA,IAAI,CAAJA;AACA;;AACF,qBAAA,CAAA;AACEA,kBAAAA,IAAI,CAACmE,IAAI,CAAL,CAAK,CAAL,EAAUA,IAAI,CAAd,CAAc,CAAd,EAAA,CAAA,EAAA,GAAA,EAAJnE,IAAI,CAAJA;AACA;;AACF,qBAAA,CAAA;AACEA,kBAAAA,IAAI,CAACmE,IAAI,CAAL,CAAK,CAAL,EAAUA,IAAI,CAAd,CAAc,CAAd,EAAmBA,IAAI,CAAvB,CAAuB,CAAvB,EAAA,CAAA,EAAA,GAAA,EAAJnE,IAAI,CAAJA;AACA;;AACF;AACEmE,kBAAAA,IAAI,CAAJA,IAAAA,CAAAA,CAAAA,EAAAA,GAAAA,EAAAA,IAAAA;AACAnE,kBAAAA,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,EAAAA,IAAAA;AAZJ;AAcD;AACF;AAzBH,SAAA,MA0BO;AACL,cAAMM,IAAI,GAAGW,GAAG,CAAHA,IAAAA,CAASf,GAAG,IAAzB,EAAae,CAAb;AACAT,UAAAA,GAAG,GAAGF,IAAI,CAAVE,MAAAA;AACA6D,UAAAA,SAAS,GAAG,IAAA,KAAA,CAAZA,GAAY,CAAZA;;AAEA,cAAI7D,GAAG,KAAP,CAAA,EAAe;AACbJ,YAAAA,EAAE,CAAA,IAAA,EAAFA,EAAE,CAAFA;AADF,WAAA,MAEO;AACL,iBAAK,IAAItB,EAAC,GAAV,CAAA,EAAgBA,EAAC,GAAGwB,IAAI,CAAxB,MAAA,EAAiCxB,EAAjC,EAAA,EAAsC;AACpC,kBAAM2B,CAAC,GAAGH,IAAI,CAAd,EAAc,CAAd;AACAN,cAAAA,IAAI,CAAA,CAAA,EAAIE,GAAG,CAAP,CAAO,CAAP,EAAA,EAAA,EAAA,GAAA,EAAJF,IAAI,CAAJA;AACD;AACF;AACF;AACF;;AAED,eAAA,YAAA,CAAA,GAAA,EAA2B;AACzB,YAAI,OAAA,GAAA,KAAA,QAAA,IAA2BE,GAAG,KAA9B,IAAA,IAA2Ce,GAAG,CAAHA,OAAAA,CAA/C,GAA+CA,CAA/C,EAAiE;AAC/D,iBAAA,GAAA;AADF,SAAA,MAEO,IAAIe,iBAAiB,IAAIC,MAAM,CAANA,QAAAA,IAAzB,GAAA,EAAiD;AACtD,iBAAOF,SAAS,CAAhB,GAAgB,CAAhB;AADK,SAAA,MAEA;AACL,iBAAA,GAAA;AACD;AACF;;AAEDvE,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACf0E,QAAAA,KAAK,EADU,KAAA;AAEfoC,QAAAA,SAAS,EAFM,SAAA;AAGfC,QAAAA,eAAe,EAHA,eAAA;AAIfzB,QAAAA,OAAO,EAJQ,OAAA;AAKf0B,QAAAA,aAAa,EALE,aAAA;AAMfC,QAAAA,aAAa,EANE,aAAA;AAOfC,QAAAA,YAAY,EAPG,YAAA;AAQfC,QAAAA,oBAAoB,EARL,oBAAA;AASfC,QAAAA,QAAQ,EATO,QAAA;AAUfC,QAAAA,WAAW,EAVI,WAAA;AAWfjE,QAAAA,OAAO,EAAEK,GAAG,CAXG,OAAA;AAYfX,QAAAA,IAAI,EAAEW,GAAG,CAZM,IAAA;AAafsC,QAAAA,UAAU,EAbK,UAAA;AAcfuB,QAAAA,YAAY,EAdG,YAAA;AAefC,QAAAA,QAAQ,EAfO,QAAA;AAgBfC,QAAAA,SAAS,EAhBM,SAAA;AAiBfC,QAAAA,QAAQ,EAjBO,QAAA;AAkBfC,QAAAA,UAAU,EAAEjE,GAAG,CAlBA,UAAA;AAmBfkE,QAAAA,YAAY,EAAEA;AAnBC,OAAjB3H;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBCrWcwD,mBAAO,CAAA,CAAA,C;UAAdS,G,YAAAA,G;;AAEP,eAAA,gBAAA,CAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAA8C;AAC5C,YAAIpC,GAAG,YAAP,IAAA,EAAyB;AACvBY,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,GAAAA;AACD;;AAED,YAAIZ,GAAG,YAAP,IAAA,EAAyB;AACvBA,UAAAA,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,EAAAA,OAAAA;AACD;AACF;;UAEK+F,I;;;;;;;;;eACJ1D,I,GAAAA,SAAAA,IAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAA6B;AAAA,cAAA,UAAA,GAAA,SAAA;AAAA,cAAA,KAAA,GAAA,IAAA;;AAAA,eAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANwB,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,YAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAC3B,eAAA,MAAA,GAAA,MAAA;AACA,eAAA,KAAA,GAAA,KAAA;AAEA,eAAA,MAAA,CAAA,OAAA,CAAoB,UAAA,KAAA,EAAA,CAAA,EAAc;AAChC;AACA,gBAAIzE,GAAG,GAAG4G,UAAS,CAACvG,CAAC,GAFW,CAEb,CAAnB,CAFgC,CAIhC;AACA;;AACA,gBAAIL,GAAG,KAAP,SAAA,EAAuB;AACrBA,cAAAA,GAAG,GAAHA,IAAAA;AACD;;AAED,YAAA,KAAI,CAAJ,KAAI,CAAJ,GAAA,GAAA;AAVF,WAAA;;;eAcF6G,O,GAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA,OAAAA,EAAuB;AAAA,cAAA,MAAA,GAAA,IAAA;;AACrBrF,UAAAA,OAAO,GAAGA,OAAO,IAAjBA,EAAAA;;AAEA,cAAI,gBAAJ,QAAA,EAA8B;AAC5B,iBAAA,QAAA,CAAA,OAAA,CAAsB,UAAA,KAAA,EAAK;AAAA,qBAAIsF,gBAAgB,CAAA,KAAA,EAAA,IAAA,EAApB,OAAoB,CAApB;AAA3B,aAAA;AADF,WAAA,MAEO;AACL,iBAAA,MAAA,CAAA,OAAA,CAAoB,UAAA,KAAA,EAAK;AAAA,qBAAIA,gBAAgB,CAAC,MAAI,CAAL,KAAK,CAAL,EAAA,IAAA,EAApB,OAAoB,CAApB;AAAzB,aAAA;AACD;;AAED,iBAAA,OAAA;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAiB;AAAA,cAAA,MAAA,GAAA,IAAA;;AACf,eAAA,MAAA,CAAA,OAAA,CAAoB,UAAA,KAAA,EAAW;AAC7BxF,YAAAA,IAAI,CAAC,MAAI,CAAL,KAAK,CAAL,EAAJA,KAAI,CAAJA;AADF,WAAA;;;;QAhCeyB,G,GAsCnB;;;UACMgE,K;;;;;;;;;eACJ,SAAA,GAAA,GAAe;AAAE,mBAAA,OAAA;AAAiB;;;eAClC,SAAA,GAAA,GAAa;AACX,mBAAO,CAAP,OAAO,CAAP;AACD;;;;QAJiBL,I,GAOpB;;;UACMM,Q;;;;;;;;;gBAIJhE,I,GAAAA,SAAAA,IAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAA2B;AACzB,UAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAA0BiE,KAAK,IAA/B,EAAA;;;gBAGFC,Q,GAAAA,SAAAA,QAAAA,CAAAA,IAAAA,EAAe;AACb,eAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;;;;eARF,SAAA,GAAA,GAAe;AAAE,mBAAA,UAAA;AAAoB;;;eACrC,SAAA,GAAA,GAAa;AAAE,mBAAO,CAAP,UAAO,CAAP;AAAsB;;;;QAFhBR,I;;AAavB,UAAMS,IAAI,GAAGH,QAAQ,CAARA,MAAAA,CAAb,MAAaA,CAAb;AACA,UAAMI,OAAO,GAAGL,KAAK,CAALA,MAAAA,CAAhB,SAAgBA,CAAhB;AACA,UAAMxD,MAAM,GAAGwD,KAAK,CAALA,MAAAA,CAAf,QAAeA,CAAf;AACA,UAAMM,KAAK,GAAGL,QAAQ,CAARA,MAAAA,CAAd,OAAcA,CAAd;AACA,UAAMM,SAAS,GAAGN,QAAQ,CAARA,MAAAA,CAAlB,OAAkBA,CAAlB;AACA,UAAMO,IAAI,GAAG,IAAI,CAAJ,MAAA,CAAA,MAAA,EAAoB;AAAEC,QAAAA,MAAM,EAAE,CAAA,KAAA,EAAA,OAAA;AAAV,OAApB,CAAb;AACA,UAAMC,IAAI,GAAGT,QAAQ,CAARA,MAAAA,CAAb,MAAaA,CAAb;AACA,UAAMU,SAAS,GAAG,IAAI,CAAJ,MAAA,CAAA,WAAA,EAAyB;AAAEF,QAAAA,MAAM,EAAE,CAAA,QAAA,EAAA,KAAA;AAAV,OAAzB,CAAlB;AACA,UAAMG,EAAE,GAAG,IAAI,CAAJ,MAAA,CAAA,IAAA,EAAkB;AAAEH,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA;AAAV,OAAlB,CAAX;AACA,UAAMI,OAAO,GAAGD,EAAE,CAAFA,MAAAA,CAAhB,SAAgBA,CAAhB;AACA,UAAME,QAAQ,GAAG,IAAI,CAAJ,MAAA,CAAA,UAAA,EAAwB;AAAEL,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA;AAAV,OAAxB,CAAjB;AACA,UAAMM,GAAG,GAAG,IAAI,CAAJ,MAAA,CAAA,KAAA,EAAmB;AAAEN,QAAAA,MAAM,EAAE,CAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA;AAAV,OAAnB,CAAZ;AACA,UAAMO,SAAS,GAAGD,GAAG,CAAHA,MAAAA,CAAlB,WAAkBA,CAAlB;AACA,UAAME,QAAQ,GAAGF,GAAG,CAAHA,MAAAA,CAAjB,UAAiBA,CAAjB;AACA,UAAMG,KAAK,GAAG,IAAI,CAAJ,MAAA,CAAA,OAAA,EAAqB;AAAET,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA;AAAV,OAArB,CAAd;AACA,UAAMU,MAAM,GAAGD,KAAK,CAALA,MAAAA,CAAf,QAAeA,CAAf;AACA,UAAME,MAAM,GAAG,IAAI,CAAJ,MAAA,CAAA,QAAA,EAAsB;AAAEX,QAAAA,MAAM,EAAE,CAAA,UAAA,EAAA,QAAA,EAAA,aAAA;AAAV,OAAtB,CAAf;;UAEMY,U;;;;;;;;;gBAIJpF,I,GAAAA,SAAAA,IAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,WAAAA,EAAkD;AAChD,UAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAoCqF,KAAK,IAAI,IAA7C,QAA6C,EAA7C,EAAA,WAAA;;;;;eAJF,SAAA,GAAA,GAAe;AAAE,mBAAA,YAAA;AAAsB;;;eACvC,SAAA,GAAA,GAAa;AAAE,mBAAO,CAAA,UAAA,EAAA,OAAA,EAAP,aAAO,CAAP;AAA8C;;;;QAFtC3B,I;;AASzB,UAAM4B,OAAO,GAAG,IAAI,CAAJ,MAAA,CAAA,SAAA,EAAuB;AAAEd,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA;AAAV,OAAvB,CAAhB;AACA,UAAMe,MAAM,GAAGD,OAAO,CAAPA,MAAAA,CAAf,QAAeA,CAAf;AACA,UAAME,WAAW,GAAG,MAAM,CAAN,MAAA,CAAA,aAAA,EAA6B;AAAEhB,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA,EAAA,QAAA;AAAV,OAA7B,CAApB;AACA,UAAMiB,WAAW,GAAGhB,IAAI,CAAJA,MAAAA,CAApB,aAAoBA,CAApB;AACA,UAAMiB,KAAK,GAAG,IAAI,CAAJ,MAAA,CAAA,OAAA,EAAqB;AAAElB,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA;AAAV,OAArB,CAAd;AACA,UAAMmB,KAAK,GAAG,IAAI,CAAJ,MAAA,CAAA,OAAA,EAAqB;AAAEnB,QAAAA,MAAM,EAAE,CAAA,WAAA,EAAA,QAAA;AAAV,OAArB,CAAd;AACA,UAAMoB,WAAW,GAAG,IAAI,CAAJ,MAAA,CAAA,aAAA,EAA2B;AAAEpB,QAAAA,MAAM,EAAE,CAAA,UAAA;AAAV,OAA3B,CAApB;AACA,UAAMqB,OAAO,GAAGD,WAAW,CAAXA,MAAAA,CAAhB,SAAgBA,CAAhB;AACA,UAAME,OAAO,GAAG,IAAI,CAAJ,MAAA,CAAA,SAAA,EAAuB;AAAEtB,QAAAA,MAAM,EAAE,CAAA,UAAA,EAAA,eAAA;AAAV,OAAvB,CAAhB;AACA,UAAMuB,GAAG,GAAG,IAAI,CAAJ,MAAA,CAAA,KAAA,EAAmB;AAAEvB,QAAAA,MAAM,EAAE,CAAA,SAAA,EAAA,OAAA;AAAV,OAAnB,CAAZ;AACA,UAAMwB,MAAM,GAAG,IAAI,CAAJ,MAAA,CAAA,QAAA,EAAsB;AAAExB,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,OAAA,EAAA,SAAA;AAAV,OAAtB,CAAf;AACA,UAAMyB,IAAI,GAAG,IAAI,CAAJ,MAAA,CAAA,MAAA,EAAoB;AAAEzB,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA;AAAV,OAApB,CAAb;AACA,UAAM0B,MAAM,GAAGlC,QAAQ,CAARA,MAAAA,CAAf,QAAeA,CAAf;AACA,UAAMmC,OAAO,GAAG,IAAI,CAAJ,MAAA,CAAA,SAAA,EAAuB;AAAE3B,QAAAA,MAAM,EAAE,CAAA,MAAA;AAAV,OAAvB,CAAhB;AACA,UAAM4B,YAAY,GAAGhC,OAAO,CAAPA,MAAAA,CAArB,cAAqBA,CAArB;AACA,UAAMiC,OAAO,GAAG,IAAI,CAAJ,MAAA,CAAA,SAAA,EAAuB;AAAE7B,QAAAA,MAAM,EAAE,CAAA,QAAA;AAAV,OAAvB,CAAhB;AACA,UAAM8B,KAAK,GAAG,IAAI,CAAJ,MAAA,CAAA,OAAA,EAAqB;AAAE9B,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,OAAA;AAAV,OAArB,CAAd;AACA,UAAM+B,EAAE,GAAGD,KAAK,CAALA,MAAAA,CAAX,IAAWA,CAAX;AACA,UAAME,EAAE,GAAGF,KAAK,CAALA,MAAAA,CAAX,IAAWA,CAAX;AACA,UAAMG,EAAE,GAAGH,KAAK,CAALA,MAAAA,CAAX,IAAWA,CAAX;AACA,UAAMI,GAAG,GAAGJ,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMK,GAAG,GAAGN,OAAO,CAAPA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMO,GAAG,GAAGN,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMO,MAAM,GAAGP,KAAK,CAALA,MAAAA,CAAf,QAAeA,CAAf;AACA,UAAMQ,GAAG,GAAGR,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMS,GAAG,GAAGT,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMU,GAAG,GAAGV,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMW,QAAQ,GAAGX,KAAK,CAALA,MAAAA,CAAjB,UAAiBA,CAAjB;AACA,UAAMY,GAAG,GAAGZ,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMa,GAAG,GAAGb,KAAK,CAALA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMc,GAAG,GAAGf,OAAO,CAAPA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMgB,GAAG,GAAGhB,OAAO,CAAPA,MAAAA,CAAZ,KAAYA,CAAZ;AACA,UAAMiB,OAAO,GAAG,IAAI,CAAJ,MAAA,CAAA,SAAA,EAAuB;AAAE9C,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,KAAA;AAAV,OAAvB,CAAhB;AACA,UAAM+C,cAAc,GAAG,IAAI,CAAJ,MAAA,CAAA,gBAAA,EAA8B;AAAE/C,QAAAA,MAAM,EAAE,CAAA,MAAA,EAAA,MAAA;AAAV,OAA9B,CAAvB;AACA,UAAMgD,aAAa,GAAG,IAAI,CAAJ,MAAA,CAAA,eAAA,EAA6B;AACjDxH,QAAAA,IADiD,EAAA,SAAA,IAAA,CAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,WAAA,EACd;AACjC,eAAA,MAAA;AACA,eAAA,OAAA,GAAeyH,GAAG,CAAHA,MAAAA,IAAf,GAAA;AACA,eAAA,IAAA,GAAA,IAAA;AACA,eAAA,IAAA,GAAYjG,IAAI,IAAI,IAApB,QAAoB,EAApB;AACA,eAAA,WAAA,GAAmBkG,WAAW,IAA9B,EAAA;AACA,eAAA,UAAA,GAAkBD,GAAG,CAArB,UAAA;AAP+C,SAAA;AASjDjD,QAAAA,MAAM,EAAE,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,aAAA;AATyC,OAA7B,CAAtB;AAWA,UAAMmD,kBAAkB,GAAGH,aAAa,CAAbA,MAAAA,CAA3B,oBAA2BA,CAA3B,C,CAEA;;AACA,eAAA,KAAA,CAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAoC;AAClC,YAAII,KAAK,GAAGxJ,GAAG,CAAHA,KAAAA,CAAZ,IAAYA,CAAZ;AAEAwJ,QAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAA,CAAA,EAAa;AACzB,cAAIC,IAAI,KAAMC,MAAM,IAAI1K,CAAC,GAAZ,CAAC0K,IAAoB,CAAlC,MAAQ,CAAR,EAA4C;AAC1CC,YAAAA,OAAO,CAAPA,MAAAA,CAAAA,KAAAA,CAAqB,IAAA,MAAA,CAArBA,MAAqB,CAArBA;AACD;;AACD,cAAMC,EAAE,GAAI5K,CAAC,KAAKwK,KAAK,CAALA,MAAAA,GAAP,CAACxK,GAAD,EAACA,GAAZ,IAAA;AACA2K,UAAAA,OAAO,CAAPA,MAAAA,CAAAA,KAAAA,CAAAA,KAAAA,IAAAA,GAAAA,EAAAA;AALFH,SAAAA;QASF;;;AACA,eAAA,UAAA,CAAA,IAAA,EAAA,MAAA,EAAkC;AAChCK,QAAAA,MAAM,GAAGA,MAAM,IAAfA,CAAAA;AAEAC,QAAAA,KAAK,CAACC,IAAI,CAAJA,QAAAA,GAAD,IAAA,EAALD,MAAK,CAALA;;AAEA,YAAIC,IAAI,YAAR,QAAA,EAA8B;AAC5BD,UAAAA,KAAK,CAALA,IAAK,CAALA;AACAC,UAAAA,IAAI,CAAJA,QAAAA,CAAAA,OAAAA,CAAsB,UAAA,CAAA,EAAO;AAC3BC,YAAAA,UAAU,CAAA,CAAA,EAAIH,MAAM,GAApBG,CAAU,CAAVA;AADFD,WAAAA;AAFF,SAAA,MAKO,IAAIA,IAAI,YAAR,aAAA,EAAmC;AACxCD,UAAAA,KAAK,CAAIC,IAAI,CAAR,OAAIA,GAAJ,GAAIA,GAAgBA,IAAI,CAAxB,IAAIA,GAATD,IAAK,CAALA;;AAEA,cAAIC,IAAI,CAAR,IAAA,EAAe;AACbC,YAAAA,UAAU,CAACD,IAAI,CAAL,IAAA,EAAYF,MAAM,GAA5BG,CAAU,CAAVA;AACD;;AAED,cAAID,IAAI,CAAR,WAAA,EAAsB;AACpBA,YAAAA,IAAI,CAAJA,WAAAA,CAAAA,OAAAA,CAAyB,UAAA,CAAA,EAAO;AAC9BC,cAAAA,UAAU,CAAA,CAAA,EAAIH,MAAM,GAApBG,CAAU,CAAVA;AADFD,aAAAA;AAGD;AAXI,SAAA,MAYA;AACL,cAAIlE,KAAK,GAAT,EAAA;AACA,cAAItE,KAAK,GAAT,IAAA;AAEAwI,UAAAA,IAAI,CAAJA,UAAAA,CAAgB,UAAA,GAAA,EAAA,SAAA,EAAoB;AAClC,gBAAIpL,GAAG,YAAP,IAAA,EAAyB;AACvBkH,cAAAA,KAAK,CAALA,IAAAA,CAAW,CAAA,SAAA,EAAXA,GAAW,CAAXA;AADF,aAAA,MAEO;AACLtE,cAAAA,KAAK,GAAGA,KAAK,IAAbA,EAAAA;AACAA,cAAAA,KAAK,CAALA,SAAK,CAALA,GAAAA,GAAAA;AACD;AANHwI,WAAAA;;AASA,cAAA,KAAA,EAAW;AACTD,YAAAA,KAAK,CAACG,IAAI,CAAJA,SAAAA,CAAAA,KAAAA,EAAAA,IAAAA,EAAAA,CAAAA,IAAD,IAAA,EAAA,IAAA,EAALH,IAAK,CAALA;AADF,WAAA,MAEO;AACLA,YAAAA,KAAK,CAALA,IAAK,CAALA;AACD;;AAEDjE,UAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAoB;AAAA,gBAAlBqE,SAAkB,GAAA,IAAA,CAAA,CAAA,CAAA;AAAA,gBAAPC,CAAO,GAAA,IAAA,CAAA,CAAA,CAAA;AAChCL,YAAAA,KAAK,CAAA,MAAA,SAAA,GAAA,MAAA,EAAsBD,MAAM,GAAjCC,CAAK,CAALA;AACAE,YAAAA,UAAU,CAAA,CAAA,EAAIH,MAAM,GAApBG,CAAU,CAAVA;AAFFnE,WAAAA;AAID;AACF;;AAEDnI,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACf4H,QAAAA,IAAI,EADW,IAAA;AAEfS,QAAAA,IAAI,EAFW,IAAA;AAGfH,QAAAA,QAAQ,EAHO,QAAA;AAIfD,QAAAA,KAAK,EAJU,KAAA;AAKfK,QAAAA,OAAO,EALQ,OAAA;AAMf7D,QAAAA,MAAM,EANS,MAAA;AAOf8D,QAAAA,KAAK,EAPU,KAAA;AAQf7I,QAAAA,KAAK,EARU,SAAA;AASf+I,QAAAA,IAAI,EATW,IAAA;AAUfE,QAAAA,IAAI,EAVW,IAAA;AAWfyB,QAAAA,MAAM,EAXS,MAAA;AAYfC,QAAAA,OAAO,EAZQ,OAAA;AAafC,QAAAA,YAAY,EAbG,YAAA;AAcfzB,QAAAA,EAAE,EAda,EAAA;AAefC,QAAAA,OAAO,EAfQ,OAAA;AAgBfC,QAAAA,QAAQ,EAhBO,QAAA;AAiBfC,QAAAA,GAAG,EAjBY,GAAA;AAkBfC,QAAAA,SAAS,EAlBM,SAAA;AAmBfC,QAAAA,QAAQ,EAnBO,QAAA;AAoBfC,QAAAA,KAAK,EApBU,KAAA;AAqBfC,QAAAA,MAAM,EArBS,MAAA;AAsBfC,QAAAA,MAAM,EAtBS,MAAA;AAuBfC,QAAAA,UAAU,EAvBK,UAAA;AAwBfE,QAAAA,OAAO,EAxBQ,OAAA;AAyBfC,QAAAA,MAAM,EAzBS,MAAA;AA0BfC,QAAAA,WAAW,EA1BI,WAAA;AA2BfC,QAAAA,WAAW,EA3BI,WAAA;AA4BfC,QAAAA,KAAK,EA5BU,KAAA;AA6BfC,QAAAA,KAAK,EA7BU,KAAA;AA8BfE,QAAAA,OAAO,EA9BQ,OAAA;AA+BfC,QAAAA,OAAO,EA/BQ,OAAA;AAgCfC,QAAAA,GAAG,EAhCY,GAAA;AAiCfC,QAAAA,MAAM,EAjCS,MAAA;AAkCfC,QAAAA,IAAI,EAlCW,IAAA;AAmCfvB,QAAAA,SAAS,EAnCM,SAAA;AAoCf4B,QAAAA,KAAK,EApCU,KAAA;AAqCfC,QAAAA,EAAE,EArCa,EAAA;AAsCfC,QAAAA,EAAE,EAtCa,EAAA;AAuCfC,QAAAA,EAAE,EAvCa,EAAA;AAwCfC,QAAAA,GAAG,EAxCY,GAAA;AAyCfC,QAAAA,GAAG,EAzCY,GAAA;AA0CfC,QAAAA,GAAG,EA1CY,GAAA;AA2CfC,QAAAA,MAAM,EA3CS,MAAA;AA4CfC,QAAAA,GAAG,EA5CY,GAAA;AA6CfC,QAAAA,GAAG,EA7CY,GAAA;AA8CfC,QAAAA,GAAG,EA9CY,GAAA;AA+CfC,QAAAA,QAAQ,EA/CO,QAAA;AAgDfC,QAAAA,GAAG,EAhDY,GAAA;AAiDfC,QAAAA,GAAG,EAjDY,GAAA;AAkDfC,QAAAA,GAAG,EAlDY,GAAA;AAmDfC,QAAAA,GAAG,EAnDY,GAAA;AAoDfC,QAAAA,OAAO,EApDQ,OAAA;AAqDfC,QAAAA,cAAc,EArDC,cAAA;AAuDfC,QAAAA,aAAa,EAvDE,aAAA;AAwDfG,QAAAA,kBAAkB,EAxDH,kBAAA;AA0DfS,QAAAA,UAAU,EAAEA;AA1DG,OAAjBtM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChNA,UAAM0M,MAAM,GAAGlJ,mBAAO,CAAtB,CAAsB,CAAtB;;AACA,UAAMmJ,WAAW,GAAGnJ,mBAAO,CAA3B,EAA2B,CAA3B;;AACA,UAAM2E,KAAK,GAAG3E,mBAAO,CAArB,CAAqB,CAArB;;qBACwBA,mBAAO,CAAA,CAAA,C;UAAxBnD,a,YAAAA,a;;sBACSmD,mBAAO,CAAA,CAAA,C;UAAhBkB,K,aAAAA,K;;sBACOlB,mBAAO,CAAA,CAAA,C;UAAdS,G,aAAAA,G,EAEP;AACA;;;AACA,UAAM2I,UAAU,GAAG;AACjB,cADiB,IAAA;AAEjB,eAFiB,KAAA;AAGjB,cAHiB,IAAA;AAIjB,eAJiB,KAAA;AAKjB,aALiB,GAAA;AAMjB,aANiB,GAAA;AAOjB,cAPiB,IAAA;AAQjB,cAAM;AARW,OAAnB;;UAWMC,Q;;;;;;;;;eACJ3I,I,GAAAA,SAAAA,IAAAA,CAAAA,YAAAA,EAAAA,gBAAAA,EAAqC;AACnC,eAAA,YAAA,GAAA,YAAA;AACA,eAAA,OAAA,GAAA,EAAA;AACA,eAAA,MAAA,GAAA,CAAA;AACA,eAAA,MAAA,GAAA,IAAA;AACA,eAAA,WAAA,GAAA,EAAA;AACA,eAAA,aAAA,GAAA,EAAA;AACA,eAAA,OAAA,GAAA,KAAA;AACA,eAAA,gBAAA,GAAA,gBAAA;;;eAGF4I,I,GAAAA,SAAAA,IAAAA,CAAAA,GAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAyB;AACvB,cAAIvG,MAAM,KAAV,SAAA,EAA0B;AACxBA,YAAAA,MAAM,IAANA,CAAAA;AACD;;AACD,cAAIC,KAAK,KAAT,SAAA,EAAyB;AACvBA,YAAAA,KAAK,IAALA,CAAAA;AACD;;AAED,gBAAM,IAAA,aAAA,CAAA,GAAA,EAAA,MAAA,EAAN,KAAM,CAAN;;;eAGFuG,W,GAAAA,SAAAA,WAAAA,GAAc;AACZ,cAAMlI,EAAE,GAAG,KAAX,MAAW,EAAX;;AACA,eAAA,WAAA,CAAA,IAAA,CAAsB,KAAtB,MAAA;AACA,eAAA,MAAA,GAAA,EAAA;;AACA,eAAA,KAAA,CAAA,SAAkB,KAAlB,MAAA,GAAA,UAAA;;AACA,iBAAA,EAAA;;;eAGFmI,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,eAAA,MAAA,GAAc,KAAA,WAAA,CAAd,GAAc,EAAd;;;eAGFC,K,GAAAA,SAAAA,KAAAA,CAAAA,IAAAA,EAAY;AACV,eAAA,OAAA,CAAA,IAAA,CAAA,IAAA;;;eAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAgB;AACd,eAAA,KAAA,CAAWC,IAAI,GAAf,IAAA;;;eAGFC,U,GAAAA,SAAAA,UAAAA,GAAqB;AAAA,cAAA,KAAA,GAAA,IAAA;;AAAA,eAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAPtB,KAAO,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAPA,YAAAA,KAAO,CAAA,IAAA,CAAPA,GAAO,SAAA,CAAA,IAAA,CAAPA;AAAO;;AACnBA,UAAAA,KAAK,CAALA,OAAAA,CAAc,UAAA,IAAA,EAAA;AAAA,mBAAU,KAAI,CAAJ,SAAA,CAAV,IAAU,CAAV;AAAdA,WAAAA;;;eAGFuB,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAA2B;AACzB,eAAA,MAAA,GAAA,QAAA;AACA,eAAA,aAAA,GAAA,EAAA;;AACA,eAAA,SAAA,CAAA,cAAA,IAAA,GAAA,sCAAA;;AACA,eAAA,SAAA,CAAA,kBAA+BhB,IAAI,CAAnC,MAAA,GAAA,GAAA;;AACA,eAAA,SAAA,CAAA,iBAA8BA,IAAI,CAAlC,KAAA,GAAA,GAAA;;AACA,eAAA,SAAA,CAAA,SAAsB,KAAtB,MAAA,GAAA,UAAA;;AACA,eAAA,SAAA,CAAA,OAAA;;;eAGFiB,Y,GAAAA,SAAAA,YAAAA,CAAAA,QAAAA,EAAuB;AACrB,cAAI,CAAJ,QAAA,EAAe;AACb,iBAAA,SAAA,CAAe,cAAc,KAAd,MAAA,GAAf,IAAA;AACD;;AAED,eAAA,iBAAA;;AACA,eAAA,SAAA,CAAA,eAAA;;AACA,eAAA,SAAA,CAAA,8CAAA;;AACA,eAAA,SAAA,CAAA,GAAA;;AACA,eAAA,SAAA,CAAA,GAAA;;AACA,eAAA,MAAA,GAAA,IAAA;;;eAGFC,c,GAAAA,SAAAA,cAAAA,GAAiB;AACf,eAAA,aAAA,IAAA,IAAA;;;eAGFC,iB,GAAAA,SAAAA,iBAAAA,GAAoB;AAClB,eAAA,SAAA,CAAe,KAAA,aAAA,GAAf,GAAA;;AACA,eAAA,aAAA,GAAA,EAAA;;;eAGFC,iB,GAAAA,SAAAA,iBAAAA,CAAAA,IAAAA,EAAwB;AACtB,cAAIC,aAAa,GAAG,KAApB,aAAA;AACA,eAAA,aAAA,GAAA,EAAA;AAEAlL,UAAAA,IAAI,CAAJA,IAAAA,CAAAA,IAAAA;;AAEA,eAAA,iBAAA;;AACA,eAAA,aAAA,GAAA,aAAA;;;eAGFmL,a,GAAAA,SAAAA,aAAAA,CAAAA,GAAAA,EAAmB;AACjB,cAAI1N,GAAG,GAAG,KAAV,MAAU,EAAV;;AAEA,iBAAO,cAAA,GAAA,IAAqB0D,GAAG,GAAG,MAAH,GAAA,GAAxB,EAAA,IAAA,OAAA,GAAA,KAAA,GAAA,GAAA,GAAA,SAAA,GAAA,GAAA,GAAP,cAAA;;;eAIFiK,M,GAAAA,SAAAA,MAAAA,GAAS;AACP,eAAA,MAAA;AACA,iBAAO,OAAO,KAAd,MAAA;;;eAGFC,a,GAAAA,SAAAA,aAAAA,GAAgB;AACd,iBAAO,KAAA,YAAA,IAAA,IAAA,GAAA,WAAA,GAA0CtB,IAAI,CAAJA,SAAAA,CAAe,KAAhE,YAAiDA,CAAjD;;;eAGFuB,gB,GAAAA,SAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA8B;AAAA,cAAA,MAAA,GAAA,IAAA;;AAC5BzB,UAAAA,IAAI,CAAJA,QAAAA,CAAAA,OAAAA,CAAsB,UAAA,KAAA,EAAW;AAC/B,YAAA,MAAI,CAAJ,OAAA,CAAA,KAAA,EAAA,KAAA;AADFA,WAAAA;;;eAKF0B,iB,GAAAA,SAAAA,iBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,SAAAA,EAAAA,OAAAA,EAAmD;AAAA,cAAA,MAAA,GAAA,IAAA;;AACjD,cAAA,SAAA,EAAe;AACb,iBAAA,KAAA,CAAA,SAAA;AACD;;AAED1B,UAAAA,IAAI,CAAJA,QAAAA,CAAAA,OAAAA,CAAsB,UAAA,KAAA,EAAA,CAAA,EAAc;AAClC,gBAAI/K,CAAC,GAAL,CAAA,EAAW;AACT,cAAA,MAAI,CAAJ,KAAA,CAAA,GAAA;AACD;;AAED,YAAA,MAAI,CAAJ,OAAA,CAAA,KAAA,EAAA,KAAA;AALF+K,WAAAA;;AAQA,cAAA,OAAA,EAAa;AACX,iBAAA,KAAA,CAAA,OAAA;AACD;;;eAGH2B,kB,GAAAA,SAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAgC;AAC9B;AACA;AACA,eAAA,UAAA,CAAA,IAAA,EAEE7F,KAAK,CAFP,OAAA,EAGEA,KAAK,CAHP,MAAA,EAIEA,KAAK,CAJP,KAAA,EAKEA,KAAK,CALP,KAAA,EAMEA,KAAK,CANP,IAAA,EAOEA,KAAK,CAPP,OAAA,EAQEA,KAAK,CARP,MAAA,EASEA,KAAK,CATP,MAAA,EAUEA,KAAK,CAVP,SAAA,EAWEA,KAAK,CAXP,OAAA,EAYEA,KAAK,CAZP,QAAA,EAaEA,KAAK,CAbP,EAAA,EAcEA,KAAK,CAdP,EAAA,EAeEA,KAAK,CAfP,GAAA,EAgBEA,KAAK,CAhBP,EAAA,EAiBEA,KAAK,CAjBP,GAAA,EAkBEA,KAAK,CAlBP,GAAA,EAmBEA,KAAK,CAnBP,MAAA,EAoBEA,KAAK,CApBP,GAAA,EAqBEA,KAAK,CArBP,GAAA,EAsBEA,KAAK,CAtBP,GAAA,EAuBEA,KAAK,CAvBP,QAAA,EAwBEA,KAAK,CAxBP,GAAA,EAyBEA,KAAK,CAzBP,GAAA,EA0BEA,KAAK,CA1BP,GAAA,EA2BEA,KAAK,CA3BP,GAAA,EA4BEA,KAAK,CA5BP,OAAA,EA6BEA,KAAK,CA7BP,QAAA;AA+BA,eAAA,OAAA,CAAA,IAAA,EAAA,KAAA;;;eAGF8F,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAA2B;AAAA,eAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAPC,KAAO,GAAA,IAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAPA,YAAAA,KAAO,CAAA,KAAA,GAAA,CAAA,CAAPA,GAAO,SAAA,CAAA,KAAA,CAAPA;AAAO;;AACzB,cAAI,CAAC,KAAK,CAAL,IAAA,CAAW,UAAA,CAAA,EAAC;AAAA,mBAAI7B,IAAI,YAAR,CAAA;AAAjB,WAAK,CAAL,EAAyC;AACvC,iBAAA,IAAA,CAAA,+BAAuCA,IAAI,CAA3C,QAAA,EAAwDA,IAAI,CAA5D,MAAA,EAAqEA,IAAI,CAAzE,KAAA;AACD;;;eAGH8B,oB,GAAAA,SAAAA,oBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAAyC;AAAA,cAAA,MAAA,GAAA,IAAA;;AACvC,cAAIzI,IAAI,GAAG2G,IAAI,CAAf,IAAA;AACA,cAAIT,WAAW,GAAGS,IAAI,CAAtB,WAAA;AACA,cAAI/F,UAAU,GAAG,OAAO+F,IAAI,CAAX,UAAA,KAAA,SAAA,GAAuCA,IAAI,CAA3C,UAAA,GAAjB,IAAA;;AAEA,cAAI,CAAJ,KAAA,EAAY;AACV,iBAAA,KAAA,CAAc,KAAd,MAAc,GAAd,4BAAA;AACD;;AAED,eAAA,KAAA,CAAA,wBAAgCA,IAAI,CAApC,OAAA,GAAA,QAAA,GAAmDA,IAAI,CAAvD,IAAA,GAAA,MAAA;;AACA,eAAA,KAAA,CAAA,SAAA;;AAEA,cAAI3G,IAAI,IAAR,WAAA,EAAyB;AACvB,iBAAA,KAAA,CAAA,GAAA;AACD;;AAED,cAAA,IAAA,EAAU;AACR,gBAAI,EAAEA,IAAI,YAAYyC,KAAK,CAA3B,QAAI,CAAJ,EAAuC;AACrC,mBAAA,IAAA,CAAU,yDAAV,6BAAA;AAED;;AAEDzC,YAAAA,IAAI,CAAJA,QAAAA,CAAAA,OAAAA,CAAsB,UAAA,GAAA,EAAA,CAAA,EAAY;AAChC;AACA;AACA;AACA,cAAA,MAAI,CAAJ,kBAAA,CAAA,GAAA,EAAA,KAAA;;AAEA,kBAAIpE,CAAC,KAAKoE,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,GAANpE,CAAAA,IAAkCsK,WAAW,CAAjD,MAAA,EAA0D;AACxD,gBAAA,MAAI,CAAJ,KAAA,CAAA,GAAA;AACD;AARHlG,aAAAA;AAUD;;AAED,cAAIkG,WAAW,CAAf,MAAA,EAAwB;AACtBA,YAAAA,WAAW,CAAXA,OAAAA,CAAoB,UAAA,GAAA,EAAA,CAAA,EAAY;AAC9B,kBAAItK,CAAC,GAAL,CAAA,EAAW;AACT,gBAAA,MAAI,CAAJ,KAAA,CAAA,GAAA;AACD;;AAED,kBAAA,GAAA,EAAS;AACP,gBAAA,MAAI,CAAJ,SAAA,CAAA,gBAAA;;AACA,gBAAA,MAAI,CAAJ,SAAA,CAAA,yDAAA;;AACA,oBAAMuD,EAAE,GAAG,MAAI,CAAf,WAAW,EAAX;;AAEA,gBAAA,MAAI,CAAJ,iBAAA,CAAuB,YAAM;AAC3B,kBAAA,MAAI,CAAJ,OAAA,CAAA,GAAA,EAAA,KAAA;;AACA,kBAAA,MAAI,CAAJ,SAAA,CAAA,cAAA,EAAA,GAAA,IAAA;AAFF,iBAAA;;AAKA,gBAAA,MAAI,CAAJ,UAAA;;AACA,gBAAA,MAAI,CAAJ,SAAA,CAAA,YAAA,EAAA,GAAA,GAAA;;AACA,gBAAA,MAAI,CAAJ,SAAA,CAAA,GAAA;AAZF,eAAA,MAaO;AACL,gBAAA,MAAI,CAAJ,KAAA,CAAA,MAAA;AACD;AApBH+G,aAAAA;AAsBD;;AAED,cAAA,KAAA,EAAW;AACT,gBAAMjI,GAAG,GAAG,KAAZ,MAAY,EAAZ;;AACA,iBAAA,SAAA,CAAe,OAAO,KAAA,aAAA,CAAtB,GAAsB,CAAtB;;AACA,iBAAA,SAAA,CACK,KADL,MACK,GADL,4BACK,GADL,GACK,GADL,IACK,GADL,UACK,GADL,2BAAA;;AAEA,iBAAA,cAAA;AALF,WAAA,MAMO;AACL,iBAAA,KAAA,CAAA,GAAA;;AACA,iBAAA,KAAA,CAAA,OAAA,UAAA,GAAA,6BAAA;AACD;;;eAGHyK,yB,GAAAA,SAAAA,yBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAuC;AACrC,eAAA,oBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA;;;eAGFC,e,GAAAA,SAAAA,eAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA6B;AAC3B,eAAA,gBAAA,CAAA,IAAA,EAAA,KAAA;;;eAGFC,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAqB;AACnB,cAAI,OAAOjC,IAAI,CAAX,KAAA,KAAJ,QAAA,EAAoC;AAClC,gBAAIpL,GAAG,GAAGoL,IAAI,CAAJA,KAAAA,CAAAA,OAAAA,CAAAA,KAAAA,EAAV,MAAUA,CAAV;AACApL,YAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,EAANA,KAAMA,CAANA;AACAA,YAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,EAANA,KAAMA,CAANA;AACAA,YAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,EAANA,KAAMA,CAANA;AACAA,YAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,EAANA,KAAMA,CAANA;AACAA,YAAAA,GAAG,GAAGA,GAAG,CAAHA,OAAAA,CAAAA,SAAAA,EAANA,SAAMA,CAANA;;AACA,iBAAA,KAAA,CAAA,OAAA,GAAA,GAAA,IAAA;AAPF,WAAA,MAQO,IAAIoL,IAAI,CAAJA,KAAAA,KAAJ,IAAA,EAAyB;AAC9B,iBAAA,KAAA,CAAA,MAAA;AADK,WAAA,MAEA;AACL,iBAAA,KAAA,CAAWA,IAAI,CAAJA,KAAAA,CAAX,QAAWA,EAAX;AACD;;;eAGHkC,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AACzB,cAAInK,IAAI,GAAGiI,IAAI,CAAf,KAAA;AACA,cAAImC,CAAC,GAAG5J,KAAK,CAALA,MAAAA,CAAR,IAAQA,CAAR;;AAEA,cAAA,CAAA,EAAO;AACL,iBAAA,KAAA,CAAA,CAAA;AADF,WAAA,MAEO;AACL,iBAAA,KAAA,CAAW,kCAAA,mBAAA,GAAA,IAAA,GAAX,IAAA;AAED;;;eAGH6J,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA0B;AACxB,eAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA;;;eAGFC,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA0B;AACxB,eAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA;;;eAGFC,W,GAAAA,SAAAA,WAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAyB;AACvB,eAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA;;;eAGFC,W,GAAAA,SAAAA,WAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAyB;AACvB,cAAI9M,GAAG,GAAGuK,IAAI,CAAd,GAAA;AACA,cAAIpL,GAAG,GAAGoL,IAAI,CAAd,KAAA;;AAEA,cAAIvK,GAAG,YAAYqG,KAAK,CAAxB,MAAA,EAAiC;AAC/BrG,YAAAA,GAAG,GAAG,IAAIqG,KAAK,CAAT,OAAA,CAAkBrG,GAAG,CAArB,MAAA,EAA8BA,GAAG,CAAjC,KAAA,EAAyCA,GAAG,CAAlDA,KAAM,CAANA;AADF,WAAA,MAEO,IAAI,EAAEA,GAAG,YAAYqG,KAAK,CAApBrG,OAAAA,IACX,OAAOA,GAAG,CAAV,KAAA,KADK,QAAI,CAAJ,EAC2B;AAChC,iBAAA,IAAA,CAAA,iDAAA,EACEA,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;;AAED,eAAA,OAAA,CAAA,GAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,IAAA;;AACA,eAAA,kBAAA,CAAA,GAAA,EAAA,KAAA;;;eAGF+M,e,GAAAA,SAAAA,eAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA6B;AAC3B,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAaxC,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAaA,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;AACA,cAAIA,IAAI,CAAJA,KAAAA,KAAJ,IAAA,EAAyB;AACvB,iBAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;AADF,WAAA,MAEO;AACL,iBAAA,KAAA,CAAA,IAAA;AACD;;AACD,eAAA,KAAA,CAAA,GAAA;;;eAGFyC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAuB;AACrB,eAAA,KAAA,CAAA,qBAAA;;AACA,eAAA,OAAA,CAAazC,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;;eAGF0C,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAuB;AACrB;AACA;AACA,cAAIC,KAAK,GAAG,IAAI,CAAJ,KAAA,CAAA,IAAA,GACR3C,IAAI,CAAJA,KAAAA,CAAAA,IAAAA,CADQ,KAAA,CAEV;AAFU,YAGRA,IAAI,CAAJA,KAAAA,CAHJ,KAAA;;AAIA,eAAA,KAAA,CAAW,kBAAA,KAAA,GAAX,mBAAA;;AACA,eAAA,OAAA,CAAaA,IAAI,CAAjB,IAAA,EARqB,KAQrB,EARqB,CASrB;;AACA,cAAIA,IAAI,CAAJA,KAAAA,CAAJ,IAAA,EAAqB;AACnB,iBAAA,KAAA,CAAA,GAAA;;AACA,iBAAA,OAAA,CAAaA,IAAI,CAAJA,KAAAA,CAAb,IAAA,EAAA,KAAA;AACD;;AACD,eAAA,KAAA,CAAA,YAAA;;;eAGF4C,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAgC;AAC9B,eAAA,OAAA,CAAa5C,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;UAGF;AACA;;;eACA6C,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAuB;AACrB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,MAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,MAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,KAAO,CAAP;;;eAGFC,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AACzB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,UAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,KAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,KAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,KAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,iBAAO,KAAA,aAAA,CAAA,IAAA,EAAA,KAAA,EAAP,KAAO,CAAP;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAarD,IAAI,CAAjB,MAAA,EAAA,KAAA;;;eAGFsD,e,GAAAA,SAAAA,eAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA6B;AAC3B,eAAA,KAAA,CAAA,aAAA;;AACA,eAAA,OAAA,CAAatD,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,KAAA;;AACA,eAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;;eAGFuD,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,eAAA,KAAA,CAAA,WAAA;;AACA,eAAA,OAAA,CAAavD,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,IAAA;;AACA,eAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;;eAGFwD,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAaxD,IAAI,CAAjB,MAAA,EAAA,KAAA;;;eAGFyD,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AACtB,eAAA,KAAA,CAAA,GAAA;;AACA,eAAA,OAAA,CAAazD,IAAI,CAAjB,MAAA,EAAA,KAAA;;;eAGF0D,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA4B;AAAA,cAAA,MAAA,GAAA,IAAA;;AAC1B,eAAA,OAAA,CAAa1D,IAAI,CAAjB,IAAA,EAAA,KAAA;AAEAA,UAAAA,IAAI,CAAJA,GAAAA,CAAAA,OAAAA,CAAiB,UAAA,EAAA,EAAQ;AACvB,YAAA,MAAI,CAAJ,KAAA,CAAA,MAAeO,UAAU,CAACoD,EAAE,CAA5B,IAAyB,CAAzB,GAAA,GAAA;;AACA,YAAA,MAAI,CAAJ,OAAA,CAAaA,EAAE,CAAf,IAAA,EAAA,KAAA;AAFF3D,WAAAA;;;eAMF4D,gB,GAAAA,SAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA8B;AAC5B,eAAA,KAAA,CAAA,wBAAA;;AACA,eAAA,kBAAA,CAAwB5D,IAAI,CAA5B,MAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,IAAA;;AACA,eAAA,kBAAA,CAAwBA,IAAI,CAA5B,GAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;;eAGF6D,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAmB;AACjB,kBAAQ7D,IAAI,CAAZ,QAAA;AACE,iBAAA,QAAA;AACE,qBAAOA,IAAI,CAAX,KAAA;;AACF,iBAAA,SAAA;AACE,qBAAO,0BAA0B,KAAA,YAAA,CAAkBA,IAAI,CAAhD,IAA0B,CAA1B,GAAP,GAAA;;AACF,iBAAA,WAAA;AACE,qBAAO,KAAA,YAAA,CAAkBA,IAAI,CAAtB,MAAA,IAAA,IAAA,GACL,KAAA,YAAA,CAAkBA,IAAI,CADjB,GACL,CADK,GAAP,IAAA;;AAEF,iBAAA,SAAA;AACE,qBAAOA,IAAI,CAAJA,KAAAA,CAAP,QAAOA,EAAP;;AACF;AACE,qBAAA,gBAAA;AAXJ;;;eAeF8D,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA4B;AAC1B;AACA;AACA;AACA;AACA,eAAA,KAAA,CAAW,eAAe9D,IAAI,CAAnB,MAAA,GAAA,YAAA,GACMA,IAAI,CADV,KAAA,GAAX,IAAA;;AAGA,eAAA,KAAA,CAR0B,mBAQ1B,EAR0B,CAS1B;;;AACA,eAAA,kBAAA,CAAwBA,IAAI,CAA5B,IAAA,EAV0B,KAU1B,EAV0B,CAY1B;AACA;;;AACA,eAAA,KAAA,CAAW,QAAQ,KAAA,YAAA,CAAkBA,IAAI,CAAtB,IAAA,EAAA,OAAA,CAAA,IAAA,EAAR,KAAQ,CAAR,GAAX,cAAA;;AAEA,eAAA,iBAAA,CAAuBA,IAAI,CAA3B,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA;;AAEA,eAAA,KAAA,CAAA,GAAA;;;eAGF+D,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AACzB,cAAIhM,IAAI,GAAGiI,IAAI,CAAf,IAAA;AACA,eAAA,UAAA,CAAA,IAAA,EAAsBlE,KAAK,CAA3B,MAAA;;AACA,eAAA,KAAA,CAAW,oBAAoB/D,IAAI,CAAxB,KAAA,GAAX,mBAAA;;AACA,eAAA,iBAAA,CAAuBiI,IAAI,CAA3B,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;;eAGFgE,kB,GAAAA,SAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAgC;AAC9B,cAAIjM,IAAI,GAAGiI,IAAI,CAAf,IAAA;AACA,cAAIiE,MAAM,GAAGjE,IAAI,CAAJA,MAAAA,CAAb,KAAA;AAEA,eAAA,UAAA,CAAA,IAAA,EAAsBlE,KAAK,CAA3B,MAAA;AAEAvD,UAAAA,KAAK,CAALA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA;;AAEA,eAAA,KAAA,CAAW,oBAAoBR,IAAI,CAAxB,KAAA,GAAX,mBAAA;;AACA,eAAA,iBAAA,CAAuBiI,IAAI,CAA3B,IAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAe,OAAO,KAAA,aAAA,CAAtB,MAAsB,CAAtB;;AAEA,eAAA,cAAA;;;eAGFkE,kB,GAAAA,SAAAA,kBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAgC;AAC9B,eAAA,KAAA,CAAA,0BAAA;;AACA,eAAA,WAAA,CAAA,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,GAAA;;;eAGFC,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AAAA,cAAA,MAAA,GAAA,IAAA;;AACtB,cAAIC,GAAG,GADe,EACtB,CADsB,CAGtB;AACA;;AACApE,UAAAA,IAAI,CAAJA,OAAAA,CAAAA,OAAAA,CAAqB,UAAA,MAAA,EAAY;AAC/B,gBAAIjI,IAAI,GAAG+B,MAAM,CAAjB,KAAA;AACA,gBAAItB,EAAE,GAAGD,KAAK,CAALA,MAAAA,CAAT,IAASA,CAAT;;AAEA,gBAAIC,EAAE,KAAFA,IAAAA,IAAeA,EAAE,KAArB,SAAA,EAAqC;AACnCA,cAAAA,EAAE,GAAG,MAAI,CAD0B,MAC9B,EAALA,CADmC,CAGnC;AACA;;AACA,cAAA,MAAI,CAAJ,SAAA,CAAe,SAAA,EAAA,GAAf,GAAA;AACD;;AAED4L,YAAAA,GAAG,CAAHA,IAAAA,CAAAA,EAAAA;AAZFpE,WAAAA;;AAeA,cAAIA,IAAI,CAAR,KAAA,EAAgB;AACd,iBAAA,KAAA,CAAWoE,GAAG,CAAHA,IAAAA,CAAAA,KAAAA,IAAX,KAAA;;AACA,iBAAA,kBAAA,CAAwBpE,IAAI,CAA5B,KAAA,EAAA,KAAA;;AACA,iBAAA,SAAA,CAAA,GAAA;AAHF,WAAA,MAIO;AACL,iBAAA,KAAA,CAAWoE,GAAG,CAAHA,IAAAA,CAAAA,KAAAA,IAAX,KAAA;;AACA,iBAAA,OAAA,CAAapE,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,iBAAA,SAAA,CAAA,GAAA;AACD;;AAEDA,UAAAA,IAAI,CAAJA,OAAAA,CAAAA,OAAAA,CAAqB,UAAA,MAAA,EAAA,CAAA,EAAe;AAClC,gBAAIxH,EAAE,GAAG4L,GAAG,CAAZ,CAAY,CAAZ;AACA,gBAAIrM,IAAI,GAAG+B,MAAM,CAFiB,KAElC,CAFkC,CAIlC;AACA;;AACA,YAAA,MAAI,CAAJ,SAAA,CAAA,iBAAA,IAAA,GAAA,MAAA,GAAA,EAAA,GAAA,UAAA;;AAEA,YAAA,MAAI,CAAJ,SAAA,CAAA,sBAAA;;AACA,YAAA,MAAI,CAAJ,SAAA,CAAA,2BAAA,IAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;;AACA,YAAA,MAAI,CAAJ,SAAA,CAAA,GAAA;;AAEA,gBAAI/B,IAAI,CAAJA,MAAAA,CAAAA,CAAAA,MAAJ,GAAA,EAA4B;AAC1B,cAAA,MAAI,CAAJ,SAAA,CAAA,sBAAA;;AACA,cAAA,MAAI,CAAJ,SAAA,CAAA,yBAAA,IAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;;AACA,cAAA,MAAI,CAAJ,SAAA,CAAA,GAAA;AACD;AAhBHiI,WAAAA;;;eAoBFqE,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AAAA,cAAA,MAAA,GAAA,IAAA;;AACzB,eAAA,KAAA,CAAA,UAAA;;AACA,eAAA,OAAA,CAAarE,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,eAAA,KAAA,CAAA,KAAA;;AACAA,UAAAA,IAAI,CAAJA,KAAAA,CAAAA,OAAAA,CAAmB,UAAA,CAAA,EAAA,CAAA,EAAU;AAC3B,YAAA,MAAI,CAAJ,KAAA,CAAA,OAAA;;AACA,YAAA,MAAI,CAAJ,OAAA,CAAasE,CAAC,CAAd,IAAA,EAAA,KAAA;;AACA,YAAA,MAAI,CAAJ,KAAA,CAAA,IAAA;;AACA,YAAA,MAAI,CAAJ,OAAA,CAAaA,CAAC,CAAd,IAAA,EAJ2B,KAI3B,EAJ2B,CAK3B;;;AACA,gBAAIA,CAAC,CAADA,IAAAA,CAAAA,QAAAA,CAAJ,MAAA,EAA4B;AAC1B,cAAA,MAAI,CAAJ,SAAA,CAAA,QAAA;AACD;AARHtE,WAAAA;;AAUA,cAAIA,IAAI,CAAR,OAAA,EAAkB;AAChB,iBAAA,KAAA,CAAA,UAAA;;AACA,iBAAA,OAAA,CAAaA,IAAI,CAAjB,OAAA,EAAA,KAAA;AACD;;AACD,eAAA,KAAA,CAAA,GAAA;;;eAGFuE,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAA8B;AAAA,cAAA,MAAA,GAAA,IAAA;;AAC5B,eAAA,KAAA,CAAA,KAAA;;AACA,eAAA,kBAAA,CAAwBvE,IAAI,CAA5B,IAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAA,KAAA;;AAEA,eAAA,iBAAA,CAAuB,YAAM;AAC3B,YAAA,MAAI,CAAJ,OAAA,CAAaA,IAAI,CAAjB,IAAA,EAAA,KAAA;;AAEA,gBAAA,KAAA,EAAW;AACT,cAAA,MAAI,CAAJ,KAAA,CAAA,MAAA;AACD;AALH,WAAA;;AAQA,cAAIA,IAAI,CAAR,KAAA,EAAgB;AACd,iBAAA,SAAA,CAAA,WAAA;;AAEA,iBAAA,iBAAA,CAAuB,YAAM;AAC3B,cAAA,MAAI,CAAJ,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;;AAEA,kBAAA,KAAA,EAAW;AACT,gBAAA,MAAI,CAAJ,KAAA,CAAA,MAAA;AACD;AALH,aAAA;AAHF,WAAA,MAUO,IAAA,KAAA,EAAW;AAChB,iBAAA,SAAA,CAAA,WAAA;;AACA,iBAAA,KAAA,CAAA,MAAA;AACD;;AAED,eAAA,SAAA,CAAA,GAAA;;;eAGFwE,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA4B;AAC1B,eAAA,KAAA,CAAA,iBAAA;;AACA,eAAA,SAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA;;AACA,eAAA,KAAA,CAAW,QAAQ,KAAnB,aAAmB,EAAnB;;AACA,eAAA,cAAA;;;eAGFC,iB,GAAAA,SAAAA,iBAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAqC;AAAA,cAAA,MAAA,GAAA,IAAA;;AACnC,cAAMC,QAAQ,GAAG,CACf;AAAC3M,YAAAA,IAAI,EAAL,OAAA;AAAgBnD,YAAAA,GAAG,EAAKK,CAAL,GAAA;AAAnB,WADe,EAEf;AAAC8C,YAAAA,IAAI,EAAL,QAAA;AAAiBnD,YAAAA,GAAG,EAAEK;AAAtB,WAFe,EAGf;AAAC8C,YAAAA,IAAI,EAAL,UAAA;AAAmBnD,YAAAA,GAAG,EAAK+B,GAAL,GAAA,KAAKA,GAAS1B;AAApC,WAHe,EAIf;AAAC8C,YAAAA,IAAI,EAAL,WAAA;AAAoBnD,YAAAA,GAAG,EAAK+B,GAAL,GAAA,KAAKA,GAAL,CAAKA,GAAL;AAAvB,WAJe,EAKf;AAACoB,YAAAA,IAAI,EAAL,OAAA;AAAgBnD,YAAAA,GAAG,EAAKK,CAAL,GAAA;AAAnB,WALe,EAMf;AAAC8C,YAAAA,IAAI,EAAL,MAAA;AAAenD,YAAAA,GAAG,EAAKK,CAAL,GAAA,OAAKA,GAAL,GAAKA,GAAL;AAAlB,WANe,EAOf;AAAC8C,YAAAA,IAAI,EAAL,QAAA;AAAiBnD,YAAAA,GAAG,EAAE+B;AAAtB,WAPe,CAAjB;AAUA+N,UAAAA,QAAQ,CAARA,OAAAA,CAAiB,UAAA,CAAA,EAAO;AACtB,YAAA,MAAI,CAAJ,SAAA,CAAA,sBAAkCC,CAAC,CAAnC,IAAA,GAAA,MAAA,GAA8CA,CAAC,CAA/C,GAAA,GAAA,IAAA;AADFD,WAAAA;;;eAKFE,U,GAAAA,SAAAA,UAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAwB;AAAA,cAAA,OAAA,GAAA,IAAA,CAAA,CACtB;AACA;AACA;;;AAEA,cAAM3P,CAAC,GAAG,KAAV,MAAU,EAAV;;AACA,cAAM0B,GAAG,GAAG,KAAZ,MAAY,EAAZ;;AACA,cAAMN,GAAG,GAAG,KAAZ,MAAY,EAAZ;;AACAkC,UAAAA,KAAK,GAAGA,KAAK,CAAbA,IAAQA,EAARA;;AAEA,eAAA,SAAA,CAAA,uBAAA;;AAEA,eAAA,KAAA,CAAA,SAAA,GAAA,GAAA,KAAA;;AACA,eAAA,kBAAA,CAAwByH,IAAI,CAA5B,GAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAA,GAAA;;AAEA,eAAA,KAAA,CAAA,QAAA,GAAA,GAAA,KAAA;;AACA,eAAA,SAAA,CAAe3J,GAAG,GAAHA,0BAAAA,GAAAA,GAAAA,GAjBO,IAiBtB,EAjBsB,CAmBtB;AACA;;;AACA,cAAI2J,IAAI,CAAJA,IAAAA,YAAqBlE,KAAK,CAA9B,KAAA,EAAsC;AACpC,iBAAA,SAAA,CAAA,SAAA,CAAA,GADoC,GACpC,EADoC,CAGpC;AACA;AACA;;;AACA,iBAAA,SAAA,CAAA,wBAAA,GAAA,GAAA,MAAA;;AACA,iBAAA,SAAA,CAAA,SAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,UAAA;;AACA,iBAAA,SAAA,CAAA,SAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,GAAA,GAAA,WAAA,GAAA,CAAA,GARoC,OAQpC,EARoC,CAUpC;;;AACAkE,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAA2B,UAAA,KAAA,EAAA,CAAA,EAAc;AACvC,kBAAI6E,GAAG,GAAG,OAAI,CAAd,MAAU,EAAV;;AACA,cAAA,OAAI,CAAJ,SAAA,CAAA,SAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,IAAA;;AACA,cAAA,OAAI,CAAJ,SAAA,CAAA,iBAAA,KAAA,GAAA,MAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,KAAA;;AACAtM,cAAAA,KAAK,CAALA,GAAAA,CAAUyH,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,CAAAA,EAAVzH,KAAAA,EAAAA,GAAAA;AAJFyH,aAAAA;;AAOA,iBAAA,iBAAA,CAAA,IAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA;;AACA,iBAAA,iBAAA,CAAuB,YAAM;AAC3B,cAAA,OAAI,CAAJ,OAAA,CAAaA,IAAI,CAAjB,IAAA,EAAA,KAAA;AADF,aAAA;;AAGA,iBAAA,SAAA,CAAA,GAAA;;AAEA,iBAAA,SAAA,CAxBoC,UAwBpC,EAxBoC,CAyBpC;;;AAzBoC,gBAAA,mBAAA,GA0BjBA,IAAI,CAAJA,IAAAA,CA1BiB,QAAA;AAAA,gBA0B7BvK,GA1B6B,GAAA,mBAAA,CAAA,CAAA,CAAA;AAAA,gBA0BxBb,GA1BwB,GAAA,mBAAA,CAAA,CAAA,CAAA;;AA2BpC,gBAAMgC,CAAC,GAAG,KAAV,MAAU,EAAV;;AACA,gBAAMuL,CAAC,GAAG,KAAV,MAAU,EAAV;;AACA5J,YAAAA,KAAK,CAALA,GAAAA,CAAU9C,GAAG,CAAb8C,KAAAA,EAAAA,CAAAA;AACAA,YAAAA,KAAK,CAALA,GAAAA,CAAU3D,GAAG,CAAb2D,KAAAA,EAAAA,CAAAA;;AAEA,iBAAA,SAAA,CAAkBtD,CAAlB,GAAA,QAAA;;AACA,iBAAA,SAAA,CAAA,SAAA,GAAA,GAAA,kBAAA,GAAA,GAAA,GAAA,WAAA;;AACA,iBAAA,SAAA,CAAA,aAAA,CAAA,GAAA,MAAA,GAAA,GAAA,GAAA,KAAA;;AACA,iBAAA,SAAA,CAAkBA,CAAlB,GAAA,KAAA;;AACA,iBAAA,SAAA,CAAA,SAAA,CAAA,GAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA,IAAA;;AACA,iBAAA,SAAA,CAAA,iBAA6BQ,GAAG,CAAhC,KAAA,GAAA,MAAA,GAAA,CAAA,GAAA,IAAA;;AACA,iBAAA,SAAA,CAAA,iBAA6Bb,GAAG,CAAhC,KAAA,GAAA,MAAA,GAAA,CAAA,GAAA,IAAA;;AAEA,iBAAA,iBAAA,CAAA,IAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA;;AACA,iBAAA,iBAAA,CAAuB,YAAM;AAC3B,cAAA,OAAI,CAAJ,OAAA,CAAaoL,IAAI,CAAjB,IAAA,EAAA,KAAA;AADF,aAAA;;AAGA,iBAAA,SAAA,CAAA,GAAA;;AAEA,iBAAA,SAAA,CAAA,GAAA;AA9CF,WAAA,MA+CO;AACL;AACA,gBAAMmC,EAAC,GAAG,KAAV,MAAU,EAAV;;AACA5J,YAAAA,KAAK,CAALA,GAAAA,CAAUyH,IAAI,CAAJA,IAAAA,CAAVzH,KAAAA,EAAAA,EAAAA;;AAEA,iBAAA,SAAA,CAAA,SAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,UAAA;;AACA,iBAAA,SAAA,CAAA,aAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,KAAA,GAAA,GAAA,GAAA,WAAA,GAAA,CAAA,GAAA,OAAA;;AACA,iBAAA,SAAA,CAAA,SAAA,EAAA,GAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,GAAA,IAAA;;AACA,iBAAA,SAAA,CAAA,iBAA6ByH,IAAI,CAAJA,IAAAA,CAA7B,KAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;;AAEA,iBAAA,iBAAA,CAAA,IAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA;;AAEA,iBAAA,iBAAA,CAAuB,YAAM;AAC3B,cAAA,OAAI,CAAJ,OAAA,CAAaA,IAAI,CAAjB,IAAA,EAAA,KAAA;AADF,aAAA;;AAIA,iBAAA,SAAA,CAAA,GAAA;AACD;;AAED,eAAA,SAAA,CAAA,GAAA;;AACA,cAAIA,IAAI,CAAR,KAAA,EAAgB;AACd,iBAAA,SAAA,CAAe,UAAA,GAAA,GAAf,KAAA;;AACA,iBAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;;AACA,iBAAA,SAAA,CAAA,GAAA;AACD;;AAED,eAAA,SAAA,CAAA,sBAAA;;;eAGF8E,iB,GAAAA,SAAAA,iBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,QAAAA,EAAyC;AAAA,cAAA,OAAA,GAAA,IAAA,CAAA,CACvC;AACA;AACA;;;AAEA,cAAI7P,CAAC,GAAG,KAAR,MAAQ,EAAR;;AACA,cAAI0B,GAAG,GAAG,KAAV,MAAU,EAAV;;AACA,cAAIN,GAAG,GAAG,KAAV,MAAU,EAAV;;AACA,cAAI0O,WAAW,GAAGC,QAAQ,GAAA,UAAA,GAA1B,WAAA;AACAzM,UAAAA,KAAK,GAAGA,KAAK,CAAbA,IAAQA,EAARA;;AAEA,eAAA,SAAA,CAAA,uBAAA;;AAEA,eAAA,KAAA,CAAW,SAAA,GAAA,GAAX,0BAAA;;AACA,eAAA,kBAAA,CAAwByH,IAAI,CAA5B,GAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAA,IAAA;;AAEA,cAAIA,IAAI,CAAJA,IAAAA,YAAqBlE,KAAK,CAA9B,KAAA,EAAsC;AACpC,gBAAMmJ,QAAQ,GAAGjF,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAjB,MAAA;;AACA,iBAAA,KAAA,CAAA,aAAA,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,IAAA,GAAA,QAAA,GAAA,aAAA;;AAEAA,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAA2B,UAAA,IAAA,EAAU;AACnC,cAAA,OAAI,CAAJ,KAAA,CAAcjI,IAAI,CAAlB,KAAcA,GAAd,GAAA;AADFiI,aAAAA;;AAIA,iBAAA,KAAA,CAAW/K,CAAC,GAADA,GAAAA,GAAAA,GAAAA,GAAX,UAAA;;AAEA+K,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAA2B,UAAA,IAAA,EAAU;AACnC,kBAAMxH,EAAE,GAAGT,IAAI,CAAf,KAAA;AACAQ,cAAAA,KAAK,CAALA,GAAAA,CAAAA,EAAAA,EAAAA,EAAAA;;AACA,cAAA,OAAI,CAAJ,SAAA,CAAA,iBAAA,EAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;AAHFyH,aAAAA;AAVF,WAAA,MAeO;AACL,gBAAMxH,EAAE,GAAGwH,IAAI,CAAJA,IAAAA,CAAX,KAAA;;AACA,iBAAA,SAAA,CAAA,aAAA,WAAA,GAAA,GAAA,GAAA,GAAA,GAAA,gBAAA,GAAA,EAAA,GAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,GAAA,GAAA,UAAA;;AACA,iBAAA,SAAA,CAAe,gBAAA,EAAA,GAAA,KAAA,GAAA,EAAA,GAAf,IAAA;;AACAzH,YAAAA,KAAK,CAALA,GAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AACD;;AAED,eAAA,iBAAA,CAAA,IAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA;;AAEA,eAAA,iBAAA,CAAuB,YAAM;AAC3B,gBAAA,GAAA;;AACA,gBAAA,QAAA,EAAc;AACZ2M,cAAAA,GAAG,GAAG,OAAI,CAAVA,WAAM,EAANA;AACD;;AAED,YAAA,OAAI,CAAJ,OAAA,CAAalF,IAAI,CAAjB,IAAA,EAAA,KAAA;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAe,UAAA,CAAA,IAAekF,GAAG,GAAG,MAAH,GAAA,GAAlB,EAAA,IAAf,IAAA;;AAEA,gBAAA,QAAA,EAAc;AACZ,cAAA,OAAI,CAAJ,UAAA;AACD;AAXH,WAAA;;AAcA,cAAMC,MAAM,GAAG,KAAf,MAAe,EAAf;;AACA,eAAA,SAAA,CAAe,QAAQ,KAAA,aAAA,CAAvB,MAAuB,CAAvB;;AACA,eAAA,cAAA;;AAEA,cAAA,QAAA,EAAc;AACZ,iBAAA,SAAA,CAAe,KAAA,MAAA,GAAA,MAAA,GAAA,MAAA,GAAf,GAAA;AACD;;AAED,cAAInF,IAAI,CAAR,KAAA,EAAgB;AACd,iBAAA,SAAA,CAAe,UAAA,GAAA,GAAf,YAAA;;AACA,iBAAA,OAAA,CAAaA,IAAI,CAAjB,KAAA,EAAA,KAAA;;AACA,iBAAA,SAAA,CAAA,GAAA;AACD;;AAED,eAAA,SAAA,CAAA,sBAAA;;;eAGFoF,gB,GAAAA,SAAAA,gBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA8B;AAC5B,eAAA,iBAAA,CAAA,IAAA,EAAA,KAAA;;;eAGFC,e,GAAAA,SAAAA,eAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA6B;AAC3B,eAAA,iBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA;;;eAGFC,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AAAA,cAAA,OAAA,GAAA,IAAA;;AACzB,cAAIjM,IAAI,GAAR,EAAA;AACA,cAAIH,MAAM,GAAV,IAAA;;AACA,cAAIqM,MAAM,GAAG,WAAW,KAAxB,MAAwB,EAAxB;;AACA,cAAIC,SAAS,GAAIjN,KAAK,KAJG,SAIzB,CAJyB,CAMzB;;AACAyH,UAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAA2B,UAAA,GAAA,EAAA,CAAA,EAAY;AACrC,gBAAI/K,CAAC,KAAK+K,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,MAAAA,GAAN/K,CAAAA,IAAuCsE,GAAG,YAAYuC,KAAK,CAA/D,IAAA,EAAsE;AACpE5C,cAAAA,MAAM,GAANA,GAAAA;AADF,aAAA,MAEO;AACL,cAAA,OAAI,CAAJ,UAAA,CAAA,GAAA,EAAqB4C,KAAK,CAA1B,MAAA;;AACAzC,cAAAA,IAAI,CAAJA,IAAAA,CAAAA,GAAAA;AACD;AANH2G,WAAAA;AASA,cAAMyF,SAAS,GAAA,GAAA,MAAA,CAAO,IAAI,CAAJ,GAAA,CAAS,UAAA,CAAA,EAAA;AAAA,mBAAA,OAAYrF,CAAC,CAAb,KAAA;AAAhB,WAAO,CAAP,EAAA,CAhBU,QAgBV,CAAA,CAAf,CAhByB,CAkBzB;;AACA,cAAMhH,QAAQ,GAAG,IAAI,CAAJ,GAAA,CAAS,UAAA,CAAA,EAAA;AAAA,mBAAA,OAAWgH,CAAC,CAAZ,KAAA,GAAA,IAAA;AAA1B,WAAiB,CAAjB;AACA,cAAM9G,UAAU,GAAG,CAAEJ,MAAM,IAAIA,MAAM,CAAjB,QAACA,IAAF,EAAA,EAAA,GAAA,CAAwC,UAAA,CAAA,EAAA;AAAA,mBAAA,OAAWkH,CAAC,CAADA,GAAAA,CAAX,KAAA,GAAA,IAAA;AApBlC,WAoBN,CAAnB,CApByB,CAsBzB;AACA;AACA;AACA;;AACA,cAAA,SAAA;;AACA,cAAA,SAAA,EAAe;AACbsF,YAAAA,SAAS,GAAGnN,KAAK,CAALA,IAAAA,CAAZmN,IAAYnN,CAAZmN;AADF,WAAA,MAEO;AACLA,YAAAA,SAAS,GAAG,IAAZA,KAAY,EAAZA;AACD;;AACD,eAAA,UAAA,CAAA,SAAA,MAAA,GAAA,uBAAA,EAAA,MAEMtM,QAAQ,CAARA,IAAAA,CAFN,IAEMA,CAFN,GAAA,KAAA,EAAA,MAGME,UAAU,CAAVA,IAAAA,CAHN,IAGMA,CAHN,GAAA,KAAA,EAAA,eAIemM,SAAS,CAATA,IAAAA,CAJf,IAIeA,CAJf,GAAA,KAAA,EAAA,0BAAA,EAME,cAAeD,SAAD,GAAA,mBAAA,GANhB,sBAME,CANF,EAAA,wBAAA,EAAA,+DAAA,EAhCyB,uCAgCzB,EAhCyB,CA2CzB;AACA;AACA;;;AACAnM,UAAAA,IAAI,CAAJA,OAAAA,CAAa,UAAA,GAAA,EAAS;AACpB,YAAA,OAAI,CAAJ,SAAA,CAAA,iBAA6BE,GAAG,CAAhC,KAAA,GAAA,QAAA,GAA8CA,GAAG,CAAjD,KAAA,GAAA,IAAA;;AACAmM,YAAAA,SAAS,CAATA,GAAAA,CAAcnM,GAAG,CAAjBmM,KAAAA,EAAAA,OAA8BnM,GAAG,CAAjCmM,KAAAA;AAhDuB,WA8CzBrM,EA9CyB,CAmDzB;;AACA,cAAA,MAAA,EAAY;AACVH,YAAAA,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAwB,UAAA,IAAA,EAAU;AAChC,kBAAMnB,IAAI,GAAG4N,IAAI,CAAJA,GAAAA,CAAb,KAAA;;AACA,cAAA,OAAI,CAAJ,KAAA,CAAA,iBAAA,IAAA,GAAA,MAAA;;AACA,cAAA,OAAI,CAAJ,KAAA,CAAA,oDAAA,IAAA,GAAA,KAAA;;AACA,cAAA,OAAI,CAAJ,KAAA,CAAA,iBAAA,IAAA,GAAA,QAAA;;AACA,cAAA,OAAI,CAAJ,kBAAA,CAAwBA,IAAI,CAA5B,KAAA,EAAA,SAAA;;AACA,cAAA,OAAI,CAAJ,KAAA,CAAA,IAAA;AANFzM,aAAAA;AAQD;;AAED,cAAM0M,QAAQ,GAAG,KAAjB,WAAiB,EAAjB;;AAEA,eAAA,iBAAA,CAAuB,YAAM;AAC3B,YAAA,OAAI,CAAJ,OAAA,CAAa5F,IAAI,CAAjB,IAAA,EAAA,SAAA;AADF,WAAA;;AAIA,eAAA,SAAA,CAAe,cAAewF,SAAD,GAAA,cAAA,GAA7B,cAAe,CAAf;;AACA,eAAA,SAAA,CAAA,mCAAA,QAAA,GAAA,IAAA;;AACA,eAAA,SAAA,CAAA,KAAA;;AACA,eAAA,UAAA;;AAEA,iBAAA,MAAA;;;eAGFK,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA0B;AACxB,cAAIN,MAAM,GAAG,KAAA,aAAA,CADW,IACX,CAAb,CADwB,CAGxB;;;AACA,cAAIxN,IAAI,GAAGiI,IAAI,CAAJA,IAAAA,CAAX,KAAA;AACAzH,UAAAA,KAAK,CAALA,GAAAA,CAAAA,IAAAA,EAAAA,MAAAA;;AAEA,cAAIA,KAAK,CAAT,MAAA,EAAkB;AAChB,iBAAA,SAAA,CAAA,iBAAA,IAAA,GAAA,MAAA,GAAA,MAAA,GAAA,IAAA;AADF,WAAA,MAEO;AACL,gBAAIyH,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,CAAAA,MAAAA,CAAAA,CAAAA,MAAJ,GAAA,EAAuC;AACrC,mBAAA,SAAA,CAAA,yBAAA,IAAA,GAAA,MAAA;AACD;;AACD,iBAAA,SAAA,CAAA,2BAAA,IAAA,GAAA,MAAA,GAAA,MAAA,GAAA,IAAA;AACD;;;eAGH8F,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AACzB;AACA,eAAA,KAAA,CAAA,eAAA;;AACA,cAAMP,MAAM,GAAG,KAAA,aAAA,CAAA,IAAA,EAAf,KAAe,CAAf;;AACA,eAAA,KAAA,CAAA,YAAA,MAAA,GAAA,OAAA;;;eAGFQ,mB,GAAAA,SAAAA,mBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAAA,YAAAA,EAAAA,aAAAA,EAA8D;AAC5D,cAAMC,gBAAgB,GAAG,KAAzB,MAAyB,EAAzB;;AACA,cAAMC,UAAU,GAAG,KAAnB,aAAmB,EAAnB;;AACA,cAAM1P,EAAE,GAAG,KAAA,aAAA,CAAX,gBAAW,CAAX;;AACA,cAAM2P,eAAe,GAAIC,YAAD,GAAA,MAAA,GAAxB,OAAA;AACA,cAAMC,gBAAgB,GAAIC,aAAD,GAAA,MAAA,GAAzB,OAAA;;AACA,eAAA,KAAA,CAAA,kBAAA;;AACA,eAAA,kBAAA,CAAwBrG,IAAI,CAA5B,QAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAA,OAAA,eAAA,GAAA,IAAA,GAAA,UAAA,GAAA,IAAA,GAAA,gBAAA,GAAA,IAAA,GAAA,EAAA;;AACA,iBAAA,gBAAA;;;eAGFsG,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AACzB,cAAMxM,MAAM,GAAGkG,IAAI,CAAJA,MAAAA,CAAf,KAAA;;AACA,cAAMxH,EAAE,GAAG,KAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAX,KAAW,CAAX;;AACA,eAAA,cAAA;;AAEA,eAAA,SAAA,CAAeA,EAAE,GAAFA,eAAAA,IACZwH,IAAI,CAAJA,WAAAA,GAAAA,iCAAAA,GADYxH,EAAAA,IAEb,KAAA,aAAA,CAFF,EAEE,CAFF;;AAGA,eAAA,cAAA;;AAEAD,UAAAA,KAAK,CAALA,GAAAA,CAAAA,MAAAA,EAAAA,EAAAA;;AAEA,cAAIA,KAAK,CAAT,MAAA,EAAkB;AAChB,iBAAA,SAAA,CAAA,iBAAA,MAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;AADF,WAAA,MAEO;AACL,iBAAA,SAAA,CAAA,2BAAA,MAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;AACD;;;eAGHgO,iB,GAAAA,SAAAA,iBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA+B;AAAA,cAAA,OAAA,GAAA,IAAA;;AAC7B,cAAMC,UAAU,GAAG,KAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAnB,KAAmB,CAAnB;;AACA,eAAA,cAAA;;AAEA,eAAA,SAAA,CAAeA,UAAU,GAAVA,eAAAA,IACZxG,IAAI,CAAJA,WAAAA,GAAAA,iCAAAA,GADYwG,EAAAA,IAEb,KAAA,aAAA,CAFF,UAEE,CAFF;;AAGA,eAAA,cAAA;;AAEAxG,UAAAA,IAAI,CAAJA,KAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAA4B,UAAA,QAAA,EAAc;AACxC,gBAAA,IAAA;AACA,gBAAA,KAAA;;AACA,gBAAIxH,EAAE,GAAG,OAAI,CAAb,MAAS,EAAT;;AAEA,gBAAIiO,QAAQ,YAAY3K,KAAK,CAA7B,IAAA,EAAoC;AAClC/D,cAAAA,IAAI,GAAG0O,QAAQ,CAARA,GAAAA,CAAP1O,KAAAA;AACA2O,cAAAA,KAAK,GAAGD,QAAQ,CAARA,KAAAA,CAARC,KAAAA;AAFF,aAAA,MAGO;AACL3O,cAAAA,IAAI,GAAG0O,QAAQ,CAAf1O,KAAAA;AACA2O,cAAAA,KAAK,GAALA,IAAAA;AACD;;AAED,YAAA,OAAI,CAAJ,SAAA,CAAA,6CAAA,UAAA,GAAA,MAAA,GAAA,IAAA,GAAA,QAAA;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAA,SAAA,EAAA,GAAA,KAAA,GAAA,UAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAA,UAAA;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAA,mCAAA,IAAA,GAAA,gBAAA;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAA,GAAA;;AAEAnO,YAAAA,KAAK,CAALA,GAAAA,CAAAA,KAAAA,EAAAA,EAAAA;;AAEA,gBAAIA,KAAK,CAAT,MAAA,EAAkB;AAChB,cAAA,OAAI,CAAJ,SAAA,CAAA,iBAAA,KAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;AADF,aAAA,MAEO;AACL,cAAA,OAAI,CAAJ,SAAA,CAAA,2BAAA,KAAA,GAAA,MAAA,GAAA,EAAA,GAAA,IAAA;AACD;AAzBHyH,WAAAA;;;eA6BF2G,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAmB;AACjB,cAAInO,EAAE,GAAG,KADQ,MACR,EAAT,CADiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAI,CAAC,KAAL,OAAA,EAAmB;AACjB,iBAAA,KAAA,CAAA,2DAAA;AACD;;AACD,eAAA,KAAA,CAAA,wBAAgCwH,IAAI,CAAJA,IAAAA,CAAhC,KAAA,GAAA,KAAA;;AACA,cAAI,CAAC,KAAL,OAAA,EAAmB;AACjB,iBAAA,KAAA,CAAA,GAAA;AACD;;AACD,eAAA,SAAA,CAAe,oCAAoC,KAAA,aAAA,CAAnD,EAAmD,CAAnD;;AACA,eAAA,SAAA,CAAkB,KAAlB,MAAkB,GAAlB,MAAkB,GAAlB,EAAkB,GAAlB,GAAA;;AACA,eAAA,cAAA;;;eAGF4G,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA0B;AACxB,cAAI7O,IAAI,GAAGiI,IAAI,CAAJA,SAAAA,CAAX,KAAA;AACA,cAAIxH,EAAE,GAAGwH,IAAI,CAAJA,MAAAA,CAAT,KAAA;;AAEA,cAAMzJ,EAAE,GAAG,KAAA,aAAA,CAAX,EAAW,CAAX;;AACA,eAAA,SAAA,CAAA,6BAAA,IAAA,GAAA,QAAA,GAAA,IAAA,GAAA,oBAAA,GAAA,EAAA;;AACA,eAAA,SAAA,CAAkBiC,EAAlB,GAAA,sBAAkBA,GAAlB,EAAkBA,GAAlB,IAAA;;AACA,eAAA,cAAA;;AACAD,UAAAA,KAAK,CAALA,GAAAA,CAAAA,EAAAA,EAAAA,EAAAA;;;eAGFsO,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA4B;AAC1B,cAAIjQ,CAAC,GAAG,KAAR,MAAQ,EAAR;;AAEA,cAAMoP,gBAAgB,GAAG,KAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAHC,KAGD,CAAzB,CAH0B,CAK1B;AACA;AACA;;;AACA,eAAA,SAAA,CAAA,sBAAA,gBAAA;;AAEA,eAAA,SAAA,CAAA,aAAA,CAAA,GAAA,8BAAA;;AACA,eAAA,SAAA,CAAA,sBAAA,CAAA,GAAA,0BAAA,GAAA,CAAA,GAAA,KAAA;;AACA,eAAA,SAAA,CAAA,GAAA;;AAEA,eAAA,cAAA;;;eAGFc,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA4B;AAC1B,eAAA,SAAA,CAAA,iBAAA;;AACA,eAAA,SAAA,CAAA,aAAA;;AACA,eAAA,SAAA,CAAA,sBAAA;;AACA,cAAMtO,EAAE,GAAG,KAAA,mBAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAA6CwH,IAAI,CAA5D,aAAW,CAAX;;AACA,eAAA,SAAA,CAAA,mBAAA,EAAA,GAAA,OAAA;;AACA,eAAA,SAAA,CAAA,KAAA;;AAEA,cAAM+G,GAAG,GAAG,KAAZ,MAAY,EAAZ;;AACA,eAAA,SAAA,CAAA,aAAA;;AACA,eAAA,SAAA,CAAA,+BAAA;;AACA,eAAA,SAAA,CAAe,oDAAoD,KAAA,aAAA,CAAnE,GAAmE,CAAnE;;AACA,eAAA,SAAA,CAAe,mBAAA,GAAA,GAAf,OAAA;;AACA,eAAA,SAAA,CAAA,KAAA;;AAEA,eAAA,SAAA,CAAA,aAAA;;AACA,eAAA,SAAA,CAAA,6BAAA;;AACA,eAAA,SAAA,CAAkB,KAAlB,MAAkB,GAAlB,aAAA;;AACA,eAAA,SAAA,CAAA,iBAAA;;AACA,eAAA,SAAA,CAAA,KAAA;;AACA,eAAA,SAAA,CAAA,kCAAA;;AACA,eAAA,cAAA;;;eAGFC,mB,GAAAA,SAAAA,mBAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAiC;AAC/B,eAAA,cAAA,CAAA,IAAA,EAAA,KAAA;;;eAGFC,c,GAAAA,SAAAA,cAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA4B;AAAA,cAAA,OAAA,GAAA,IAAA,CAAA,CAC1B;AACA;;;AACA,cAAIC,MAAM,GAAG,KAAb,MAAA;AACA,eAAA,MAAA,GAAA,QAAA;;AACA,eAAA,SAAA,CAAA,eAAA;;AACA,eAAA,SAAA,CAAA,kBAAA;;AACA,eAAA,iBAAA,CAAuB,YAAM;AAC3B,YAAA,OAAI,CAAJ,OAAA,CAAalH,IAAI,CAAjB,IAAA,EAAA,KAAA;AADF,WAAA;;AAGA,eAAA,SAAA,CAAA,gBAAA;;AACA,eAAA,SAAA,CAX0B,MAW1B,EAX0B,CAY1B;;;AACA,eAAA,MAAA,GAAA,MAAA;;;eAGFmH,a,GAAAA,SAAAA,aAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAA2B;AAAA,cAAA,OAAA,GAAA,IAAA;;AACzB,cAAMC,QAAQ,GAAGpH,IAAI,CAArB,QAAA;AACAoH,UAAAA,QAAQ,CAARA,OAAAA,CAAiB,UAAA,KAAA,EAAS;AACxB;AACA;AACA,gBAAIC,KAAK,YAAYvL,KAAK,CAA1B,YAAA,EAAyC;AACvC,kBAAIuL,KAAK,CAAT,KAAA,EAAiB;AACf,gBAAA,OAAI,CAAJ,KAAA,CAAc,OAAI,CAAlB,MAAc,GAAd,MAAA;;AACA,gBAAA,OAAI,CAAJ,cAAA,CAAA,KAAA,EAAA,KAAA;;AACA,gBAAA,OAAI,CAAJ,SAAA,CAAA,GAAA;AACD;AALH,aAAA,MAMO;AACL,cAAA,OAAI,CAAJ,KAAA,CAAc,OAAI,CAAlB,MAAc,GAAd,4BAAA;;AACA,kBAAI,OAAI,CAAR,gBAAA,EAA2B;AACzB,gBAAA,OAAI,CAAJ,KAAA,CAAA,wBAAA;AACD;;AACD,cAAA,OAAI,CAAJ,OAAA,CAAA,KAAA,EAAA,KAAA;;AACA,kBAAI,OAAI,CAAR,gBAAA,EAA2B;AACzB,gBAAA,OAAI,CAAJ,KAAA,CAAA,MAAerH,IAAI,CAAnB,MAAA,GAAA,GAAA,GAA8BA,IAAI,CAAlC,KAAA,GAAA,GAAA;AACD;;AACD,cAAA,OAAI,CAAJ,KAAA,CAAA,2BAAA;AACD;AAnBHoH,WAAAA;;;eAuBFE,W,GAAAA,SAAAA,WAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAyB;AAAA,cAAA,OAAA,GAAA,IAAA;;AACvB,cAAA,KAAA,EAAW;AACT,iBAAA,IAAA,CAAA,0CAAA;AACD;;AAED/O,UAAAA,KAAK,GAAG,IAARA,KAAQ,EAARA;;AAEA,eAAA,cAAA,CAAA,IAAA,EAAA,MAAA;;AACA,eAAA,SAAA,CAAA,4BAAA;;AACA,eAAA,gBAAA,CAAA,IAAA,EAAA,KAAA;;AACA,eAAA,SAAA,CAAA,sBAAA;;AACA,eAAA,SAAA,CAAA,kEAAA;;AACA,eAAA,SAAA,CAAA,UAAA;;AACA,eAAA,SAAA,CAAA,cAA2B,KAA3B,MAAA,GAAA,IAAA;;AACA,eAAA,SAAA,CAAA,GAAA;;AACA,eAAA,YAAA,CAAA,IAAA;;AAEA,eAAA,OAAA,GAAA,IAAA;AAEA,cAAMgP,UAAU,GAAhB,EAAA;AAEA,cAAMC,MAAM,GAAGxH,IAAI,CAAJA,OAAAA,CAAalE,KAAK,CAAjC,KAAekE,CAAf;AAEAwH,UAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,KAAA,EAAA,CAAA,EAAc;AAC3B,gBAAMzP,IAAI,GAAG0P,KAAK,CAALA,IAAAA,CAAb,KAAA;;AAEA,gBAAIF,UAAU,CAAVA,OAAAA,CAAAA,IAAAA,MAA6B,CAAjC,CAAA,EAAqC;AACnC,oBAAM,IAAA,KAAA,CAAA,aAAA,IAAA,GAAN,4BAAM,CAAN;AACD;;AACDA,YAAAA,UAAU,CAAVA,IAAAA,CAAAA,IAAAA;;AAEA,YAAA,OAAI,CAAJ,cAAA,CAAA,KAAA,EAAA,OAAA,IAAA;;AAEA,gBAAMG,QAAQ,GAAG,IAAjB,KAAiB,EAAjB;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAA,+BAAA;;AACA,YAAA,OAAI,CAAJ,OAAA,CAAaD,KAAK,CAAlB,IAAA,EAAA,QAAA;;AACA,YAAA,OAAI,CAAJ,YAAA;AAbFD,WAAAA;;AAgBA,eAAA,SAAA,CAAA,UAAA;;AAEAA,UAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,KAAA,EAAA,CAAA,EAAc;AAC3B,gBAAMG,SAAS,GAAA,OAAQF,KAAK,CAALA,IAAAA,CAAvB,KAAA;;AACA,YAAA,OAAI,CAAJ,SAAA,CAAkBE,SAAlB,GAAA,IAAkBA,GAAlB,SAAkBA,GAAlB,GAAA;AAFFH,WAAAA;;AAKA,eAAA,SAAA,CAAA,gBAAA;;;eAGFI,O,GAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAqB;AACnB,cAAIC,QAAQ,GAAG,KAAK,YAAY7H,IAAI,CAApC,QAAe,CAAf;;AACA,cAAA,QAAA,EAAc;AACZ6H,YAAAA,QAAQ,CAARA,IAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,KAAAA;AADF,WAAA,MAEO;AACL,iBAAA,IAAA,CAAA,mCAA2C7H,IAAI,CAA/C,QAAA,EAA4DA,IAAI,CAAhE,MAAA,EAAyEA,IAAI,CAA7E,KAAA;AACD;;;eAGH8H,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,iBAAO,KAAA,OAAA,CAAA,IAAA,CAAP,EAAO,CAAP;;;;QAnoCmBlQ,G;;AAuoCvBjE,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfiU,QAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,GAAA,EAAA,YAAA,EAAA,UAAA,EAAA,IAAA,EAAA,IAAA,EAAiE;AAAA,cAAXG,IAAW,KAAA,KAAA,CAAA,EAAA;AAAXA,YAAAA,IAAW,GAAJ,EAAPA;AAAW;;AACxE,cAAMzD,CAAC,GAAG,IAAA,QAAA,CAAA,IAAA,EAAmByD,IAAI,CADuC,gBAC9D,CAAV,CADwE,CAGxE;;AACA,cAAMC,aAAa,GAAG,CAACC,UAAU,IAAX,EAAA,EAAA,GAAA,CAAuB,UAAA,GAAA,EAAG;AAAA,mBAAI3I,GAAG,CAAP,UAAA;AAA1B,WAAA,EAAA,MAAA,CAAqD,UAAA,CAAA,EAAC;AAAA,mBAAI,CAAC,CAAL,CAAA;AAA5E,WAAsB,CAAtB;AAEA,cAAM4I,YAAY,GAAG,aAAa,CAAb,MAAA,CAAqB,UAAA,CAAA,EAAA,SAAA,EAAA;AAAA,mBAAkBC,SAAS,CAA3B,CAA2B,CAA3B;AAArB,WAAA,EAArB,GAAqB,CAArB;AAEA7D,UAAAA,CAAC,CAADA,OAAAA,CAAUhE,WAAW,CAAXA,SAAAA,CACRD,MAAM,CAANA,KAAAA,CAAAA,YAAAA,EAAAA,UAAAA,EADQC,IACRD,CADQC,EAAAA,YAAAA,EAAVgE,IAAUhE,CAAVgE;AAKA,iBAAOA,CAAC,CAAR,OAAOA,EAAP;AAda,SAAA;AAiBf9D,QAAAA,QAAQ,EAAEA;AAjBK,OAAjB7M;;;;;;;;;;;;;;;;;;;;;;;;;AC3pCA,UAAMe,IAAI,GAAGyC,mBAAO,CAApB,CAAoB,CAApB;;qBACqBA,mBAAO,CAAA,CAAA,C;UAArBc,U,YAAAA,U;;AAEPtE,MAAAA,MAAM,CAANA,OAAAA,GAAAA,aAAAA,UAAAA,WAAAA,EAAAA;AAAAA,QAAAA,cAAAA,CAAAA,MAAAA,EAAAA,WAAAA,CAAAA;;AAAAA,iBAAAA,MAAAA,GAAAA;AAAAA,iBAAAA,WAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,SAAAA,KAAAA,IAAAA;AAAAA;;AAAAA,YAAAA,MAAAA,GAAAA,MAAAA,CAAAA,SAAAA;;AAAAA,QAAAA,MAAAA,CAAAA,OAAAA,GACEgF,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAkB;AAChB,iBAAOjE,IAAI,CAAJA,OAAAA,CAAaA,IAAI,CAAJA,OAAAA,CAAbA,IAAaA,CAAbA,EAAP,EAAOA,CAAP;AAFJf,SAAAA;;AAAAA,QAAAA,MAAAA,CAAAA,UAAAA,GAKEyU,SAAAA,UAAAA,CAAAA,QAAAA,EAAqB;AACnB,iBAAQC,QAAQ,CAARA,OAAAA,CAAAA,IAAAA,MAAAA,CAAAA,IAAgCA,QAAQ,CAARA,OAAAA,CAAAA,KAAAA,MAAxC,CAAA;AANJ1U,SAAAA;;AAAAA,eAAAA,MAAAA;AAAAA,OAAAA,CAAAA,UAAAA,CAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,UAAM2U,IAAI,GAAGnR,mBAAO,CAApB,EAAoB,CAApB;;AACA,UAAMoR,UAAS,GAAGpR,mBAAO,CAAzB,EAAyB,CAAzB;;AACA,UAAMC,GAAG,GAAGD,mBAAO,CAAnB,CAAmB,CAAnB;;AACA,UAAMqR,QAAQ,GAAGrR,mBAAO,CAAxB,CAAwB,CAAxB;;AACA,UAAMsR,OAAO,GAAGtR,mBAAO,CAAvB,EAAuB,CAAvB;;qBACyDA,mBAAO,CAAC,EAAD,C;UAAzDuR,gB,YAAAA,gB;UAAkBC,S,YAAAA,S;UAAWC,iB,YAAAA,iB;;AACpC,UAAMC,KAAK,GAAG1R,mBAAO,CAArB,EAAqB,CAArB;;AACA,UAAM2R,OAAO,GAAG3R,mBAAO,CAAvB,EAAuB,CAAvB;;sBAC0BA,mBAAO,CAAA,CAAA,C;UAA1BS,G,aAAAA,G;UAAKK,U,aAAAA,U;;AACZ,UAAM8Q,aAAa,GAAG5R,mBAAO,CAA7B,CAA6B,CAA7B;;UACO6D,W,GAAsB+N,a,CAAtB/N,W;UAAa3C,K,GAAS0Q,a,CAAT1Q,K;;AACpB,UAAM2Q,UAAU,GAAG7R,mBAAO,CAA1B,EAA0B,CAA1B,C,CAEA;AACA;;;AACA,eAAA,YAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAoC;AAClCmR,QAAAA,IAAI,CAAC,YAAM;AACT/R,UAAAA,EAAE,CAAA,GAAA,EAAFA,GAAE,CAAFA;AADF+R,SAAI,CAAJA;AAGD;AAED;AACA;AACA;;;AACA,UAAMW,WAAW,GAAG;AAClBlP,QAAAA,IAAI,EADc,MAAA;AAElBvE,QAAAA,GAAG,EAAE;AACH0T,UAAAA,IADG,EAAA,SAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,EACoC;AACrC,gBAAI;AACF3S,cAAAA,EAAE,CAAA,IAAA,EAAFA,EAAE,CAAFA;AADF,aAAA,CAEE,OAAA,CAAA,EAAU;AACVA,cAAAA,EAAE,CAACyE,WAAW,CAAA,CAAA,EAAA,IAAA,EAAdzE,IAAc,CAAZ,CAAFA;AACD;AACF;AAPE;AAFa,OAApB;;UAaM4S,W;;;;;;;;;eACJtR,I,GAAAA,SAAAA,IAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAoB;AAAA,cAAA,KAAA,GAAA,IAAA,CAAA,CAClB;AACA;AACA;AACA;AACA;AACA;;;AACAkQ,UAAAA,IAAI,GAAG,KAAA,IAAA,GAAYA,IAAI,IAAvBA,EAAAA;AACA,eAAA,IAAA,CAAA,GAAA,GAAgB,CAAC,CAACA,IAAI,CARJ,GAQlB,CARkB,CAUlB;AACA;AACA;AACA;;AACA,eAAA,IAAA,CAAA,UAAA,GAAuBA,IAAI,CAAJA,UAAAA,IAAAA,IAAAA,GAA0BA,IAAI,CAA9BA,UAAAA,GAdL,IAclB,CAdkB,CAgBlB;AACA;;AACA,eAAA,IAAA,CAAA,gBAAA,GAA6B,CAAC,CAACA,IAAI,CAAnC,gBAAA;AACA,eAAA,IAAA,CAAA,UAAA,GAAuB,CAAC,CAACA,IAAI,CAA7B,UAAA;AACA,eAAA,IAAA,CAAA,YAAA,GAAyB,CAAC,CAACA,IAAI,CAA/B,YAAA;AAEA,eAAA,OAAA,GAAA,EAAA;;AAEA,cAAI,CAAJ,OAAA,EAAc;AACZ;AACA,gBAAA,gBAAA,EAAsB;AACpB,mBAAA,OAAA,GAAe,CAAC,IAAA,gBAAA,CAAhB,OAAgB,CAAD,CAAf;AADF,aAAA,MAEO,IAAA,SAAA,EAAe;AACpB,mBAAA,OAAA,GAAe,CAAC,IAAA,SAAA,CAAhB,QAAgB,CAAD,CAAf;AACD;AANH,WAAA,MAOO;AACL,iBAAA,OAAA,GAAe3Q,GAAG,CAAHA,OAAAA,CAAAA,OAAAA,IAAAA,OAAAA,GAAiC,CAAhD,OAAgD,CAAhD;AAhCgB,WAAA,CAmClB;AACA;AACA;;;AACA,cAAI,OAAA,MAAA,KAAA,WAAA,IAAiCgS,MAAM,CAA3C,mBAAA,EAAiE;AAC/D,iBAAA,OAAA,CAAA,OAAA,CACE,IAAA,iBAAA,CAAsBA,MAAM,CAD9B,mBACE,CADF;AAGD;;AAED,eAAA,YAAA;;AAEA,eAAA,OAAA,GAAeN,OAAf,EAAA;AACA,eAAA,OAAA,GAAA,EAAA;AACA,eAAA,KAAA,GAAA,EAAA;AACA,eAAA,YAAA,GAAA,EAAA;AACA,eAAA,UAAA,GAAA,EAAA;AACA,eAAA,cAAA,GAAA,EAAA;;AAEA1R,UAAAA,GAAG,CAAHA,QAAAA,CAAAA,OAAAA,EAAAA,OAAAA,CAA8B,UAAA,IAAA,EAAA;AAAA,gBAAEW,IAAF,GAAA,IAAA,CAAA,CAAA,CAAA;AAAA,gBAAQsR,MAAR,GAAA,IAAA,CAAA,CAAA,CAAA;AAAA,mBAAoB,KAAI,CAAJ,SAAA,CAAA,IAAA,EAApB,MAAoB,CAApB;AAA9BjS,WAAAA;;AACAA,UAAAA,GAAG,CAAHA,QAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAA4B,UAAA,KAAA,EAAA;AAAA,gBAAEW,IAAF,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,gBAAQuR,IAAR,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,mBAAkB,KAAI,CAAJ,OAAA,CAAA,IAAA,EAAlB,IAAkB,CAAlB;AAA5BlS,WAAAA;;;eAGFmS,Y,GAAAA,SAAAA,YAAAA,GAAe;AAAA,cAAA,MAAA,GAAA,IAAA;;AACb,eAAA,OAAA,CAAA,OAAA,CAAqB,UAAA,MAAA,EAAY;AAC/B;AACAC,YAAAA,MAAM,CAANA,KAAAA,GAAAA,EAAAA;;AACA,gBAAI,OAAOA,MAAM,CAAb,EAAA,KAAJ,UAAA,EAAqC;AACnCA,cAAAA,MAAM,CAANA,EAAAA,CAAAA,QAAAA,EAAoB,UAAA,IAAA,EAAA,QAAA,EAAoB;AACtCA,gBAAAA,MAAM,CAANA,KAAAA,CAAAA,IAAAA,IAAAA,IAAAA;;AACA,gBAAA,MAAI,CAAJ,IAAA,CAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,MAAA;AAFFA,eAAAA;AAIAA,cAAAA,MAAM,CAANA,EAAAA,CAAAA,MAAAA,EAAkB,UAAA,IAAA,EAAA,MAAA,EAAkB;AAClC,gBAAA,MAAI,CAAJ,IAAA,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA;AADFA,eAAAA;AAGD;AAXH,WAAA;;;eAeFC,e,GAAAA,SAAAA,eAAAA,GAAkB;AAChB,eAAA,OAAA,CAAA,OAAA,CAAqB,UAAA,MAAA,EAAY;AAC/BD,YAAAA,MAAM,CAANA,KAAAA,GAAAA,EAAAA;AADF,WAAA;;;eAKFE,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAAA,SAAAA,EAA8B;AAC5BC,UAAAA,SAAS,CAATA,MAAAA,GAAAA,IAAAA;AACA,eAAA,UAAA,CAAA,IAAA,IAAA,SAAA;AACA,eAAA,cAAA,CAAA,IAAA,CAAA,SAAA;AACA,iBAAA,IAAA;;;eAGFC,e,GAAAA,SAAAA,eAAAA,CAAAA,IAAAA,EAAsB;AACpB,cAAID,SAAS,GAAG,KAAA,YAAA,CAAhB,IAAgB,CAAhB;;AACA,cAAI,CAAJ,SAAA,EAAgB;AACd;AACD;;AAED,eAAA,cAAA,GAAsBvS,GAAG,CAAHA,OAAAA,CAAY,KAAZA,cAAAA,EAAtB,SAAsBA,CAAtB;AACA,iBAAO,KAAA,UAAA,CAAP,IAAO,CAAP;;;eAGFyS,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAmB;AACjB,iBAAO,KAAA,UAAA,CAAP,IAAO,CAAP;;;eAGFC,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAmB;AACjB,iBAAO,CAAC,CAAC,KAAA,UAAA,CAAT,IAAS,CAAT;;;eAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAuB;AACrB,eAAA,OAAA,CAAA,IAAA,IAAA,KAAA;AACA,iBAAA,IAAA;;;eAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAgB;AACd,cAAI,OAAO,KAAA,OAAA,CAAP,IAAO,CAAP,KAAJ,WAAA,EAA+C;AAC7C,kBAAM,IAAA,KAAA,CAAU,uBAAhB,IAAM,CAAN;AACD;;AACD,iBAAO,KAAA,OAAA,CAAP,IAAO,CAAP;;;eAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAAA,KAAAA,EAA6B;AAC3B,cAAIC,OAAO,GAAX,IAAA;;AAEA,cAAA,KAAA,EAAW;AACT,iBAAA,YAAA,CAAA,IAAA,CAAA,IAAA;AACD;;AACD,eAAA,OAAA,CAAA,IAAA,IAAA,OAAA;AACA,iBAAA,IAAA;;;eAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAgB;AACd,cAAI,CAAC,KAAA,OAAA,CAAL,IAAK,CAAL,EAAyB;AACvB,kBAAM,IAAA,KAAA,CAAU,uBAAhB,IAAM,CAAN;AACD;;AACD,iBAAO,KAAA,OAAA,CAAP,IAAO,CAAP;;;eAGFC,O,GAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAAoB;AAClB,eAAA,KAAA,CAAA,IAAA,IAAA,IAAA;AACA,iBAAA,IAAA;;;eAGFC,O,GAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAc;AACZ,cAAI,CAAC,KAAA,KAAA,CAAL,IAAK,CAAL,EAAuB;AACrB,kBAAM,IAAA,KAAA,CAAU,qBAAhB,IAAM,CAAN;AACD;;AACD,iBAAO,KAAA,KAAA,CAAP,IAAO,CAAP;;;eAGFC,e,GAAAA,SAAAA,eAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,QAAAA,EAA8C;AAC5C,cAAIlC,UAAU,GAAIoB,MAAM,CAANA,UAAAA,IAAD,UAACA,GAAmCA,MAAM,CAANA,UAAAA,CAApC,QAAoCA,CAAnCA,GAAlB,KAAA;AACA,iBAAQpB,UAAU,IAAIoB,MAAM,CAArB,OAACpB,GAAgCoB,MAAM,CAANA,OAAAA,CAAAA,UAAAA,EAAjC,QAAiCA,CAAhCpB,GAAR,QAAA;;;eAGFmC,W,GAAAA,SAAAA,WAAAA,CAAAA,IAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,aAAAA,EAAAA,EAAAA,EAA+D;AAAA,cAAA,MAAA,GAAA,IAAA;;AAC7D,cAAIC,IAAI,GAAR,IAAA;AACA,cAAIC,IAAI,GAAR,IAAA;;AACA,cAAI1S,IAAI,IAAIA,IAAI,CAAhB,GAAA,EAAsB;AACpB;AACAA,YAAAA,IAAI,GAAGA,IAAI,CAAXA,GAAAA;AACD;;AAED,cAAIX,GAAG,CAAHA,UAAAA,CAAJ,UAAIA,CAAJ,EAAgC;AAC9Bb,YAAAA,EAAE,GAAFA,UAAAA;AACA0P,YAAAA,UAAU,GAAVA,IAAAA;AACAE,YAAAA,YAAY,GAAGA,YAAY,IAA3BA,KAAAA;AACD;;AAED,cAAI/O,GAAG,CAAHA,UAAAA,CAAJ,YAAIA,CAAJ,EAAkC;AAChCb,YAAAA,EAAE,GAAFA,YAAAA;AACA4P,YAAAA,YAAY,GAAZA,KAAAA;AACD;;AAED,cAAIpO,IAAI,YAAR,QAAA,EAA8B;AAC5B0S,YAAAA,IAAI,GAAJA,IAAAA;AADF,WAAA,MAEO,IAAI,OAAA,IAAA,KAAJ,QAAA,EAA8B;AACnC,kBAAM,IAAA,KAAA,CAAU,sCAAhB,IAAM,CAAN;AADK,WAAA,MAEA;AACL,iBAAK,IAAIxV,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG,KAAA,OAAA,CAApB,MAAA,EAAyCA,CAAzC,EAAA,EAA8C;AAC5C,kBAAMuU,MAAM,GAAG,KAAA,OAAA,CAAf,CAAe,CAAf;AACAiB,cAAAA,IAAI,GAAGjB,MAAM,CAANA,KAAAA,CAAa,KAAA,eAAA,CAAA,MAAA,EAAA,UAAA,EAApBiB,IAAoB,CAAbjB,CAAPiB;;AACA,kBAAA,IAAA,EAAU;AACR;AACD;AACF;AACF;;AAED,cAAA,IAAA,EAAU;AACR,gBAAA,YAAA,EAAkB;AAChBA,cAAAA,IAAI,CAAJA,OAAAA;AACD;;AAED,gBAAA,EAAA,EAAQ;AACNlU,cAAAA,EAAE,CAAA,IAAA,EAAFA,IAAE,CAAFA;AACA,qBAAA,SAAA;AAFF,aAAA,MAGO;AACL,qBAAA,IAAA;AACD;AACF;;AACD,cAAA,UAAA;;AAEA,cAAMmU,cAAc,GAAG,SAAjBA,cAAiB,CAAA,GAAA,EAAA,IAAA,EAAe;AACpC,gBAAI,CAAA,IAAA,IAAS,CAAT,GAAA,IAAiB,CAArB,aAAA,EAAqC;AACnC9W,cAAAA,GAAG,GAAG,IAAA,KAAA,CAAU,yBAAhBA,IAAM,CAANA;AACD;;AAED,gBAAA,GAAA,EAAS;AACP,kBAAA,EAAA,EAAQ;AACN2C,gBAAAA,EAAE,CAAFA,GAAE,CAAFA;AACA;AAFF,eAAA,MAGO;AACL,sBAAA,GAAA;AACD;AACF;;AACD,gBAAA,OAAA;;AACA,gBAAI,CAAJ,IAAA,EAAW;AACToU,cAAAA,OAAO,GAAG,IAAA,QAAA,CAAA,WAAA,EAAA,MAAA,EAAA,EAAA,EAAVA,YAAU,CAAVA;AADF,aAAA,MAEO;AACLA,cAAAA,OAAO,GAAG,IAAA,QAAA,CAAaC,IAAI,CAAjB,GAAA,EAAA,MAAA,EAA6BA,IAAI,CAAjC,IAAA,EAAVD,YAAU,CAAVA;;AACA,kBAAI,CAACC,IAAI,CAAT,OAAA,EAAmB;AACjBA,gBAAAA,IAAI,CAAJA,MAAAA,CAAAA,KAAAA,CAAAA,IAAAA,IAAAA,OAAAA;AACD;AACF;;AACD,gBAAA,EAAA,EAAQ;AACNrU,cAAAA,EAAE,CAAA,IAAA,EAAFA,OAAE,CAAFA;AADF,aAAA,MAEO;AACLsU,cAAAA,UAAU,GAAVA,OAAAA;AACD;AA1BH,WAAA;;AA6BAzT,UAAAA,GAAG,CAAHA,SAAAA,CAAc,KAAdA,OAAAA,EAA4B,UAAA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAA2B;AACrD,qBAAA,MAAA,CAAA,GAAA,EAAA,GAAA,EAA0B;AACxB,kBAAA,GAAA,EAAS;AACP0T,gBAAAA,IAAI,CAAJA,GAAI,CAAJA;AADF,eAAA,MAEO,IAAA,GAAA,EAAS;AACdC,gBAAAA,GAAG,CAAHA,MAAAA,GAAAA,MAAAA;AACAD,gBAAAA,IAAI,CAAA,IAAA,EAAJA,GAAI,CAAJA;AAFK,eAAA,MAGA;AACLtU,gBAAAA,IAAI;AACL;AATkD,aAAA,CAYrD;;;AACAuB,YAAAA,IAAI,GAAGyS,IAAI,CAAJA,eAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAPzS,IAAOyS,CAAPzS;;AAEA,gBAAIyR,MAAM,CAAV,KAAA,EAAkB;AAChBA,cAAAA,MAAM,CAANA,SAAAA,CAAAA,IAAAA,EAAAA,MAAAA;AADF,aAAA,MAEO;AACLwB,cAAAA,MAAM,CAAA,IAAA,EAAOxB,MAAM,CAANA,SAAAA,CAAbwB,IAAaxB,CAAP,CAANwB;AACD;AAnBH5T,WAAAA,EAAAA,cAAAA;AAsBA,iBAAA,UAAA;;;eAGF6T,O,GAAAA,SAAAA,OAAAA,CAAAA,GAAAA,EAAa;AACX,iBAAOjC,UAAU,CAAA,IAAA,EAAjB,GAAiB,CAAjB;;;eAGFkC,M,GAAAA,SAAAA,MAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAsB;AACpB,cAAI9T,GAAG,CAAHA,UAAAA,CAAJ,GAAIA,CAAJ,EAAyB;AACvBb,YAAAA,EAAE,GAAFA,GAAAA;AACA4U,YAAAA,GAAG,GAAHA,IAAAA;AAHkB,WAAA,CAMpB;AACA;AACA;AACA;;;AACA,cAAIN,UAAU,GAAd,IAAA;AAEA,eAAA,WAAA,CAAA,IAAA,EAAuB,UAAA,GAAA,EAAA,IAAA,EAAe;AACpC,gBAAIjX,GAAG,IAAP,EAAA,EAAe;AACbwX,cAAAA,YAAY,CAAA,EAAA,EAAZA,GAAY,CAAZA;AADF,aAAA,MAEO,IAAA,GAAA,EAAS;AACd,oBAAA,GAAA;AADK,aAAA,MAEA;AACLP,cAAAA,UAAU,GAAGJ,IAAI,CAAJA,MAAAA,CAAAA,GAAAA,EAAbI,EAAaJ,CAAbI;AACD;AAPH,WAAA;AAUA,iBAAA,UAAA;;;eAGFQ,Y,GAAAA,SAAAA,YAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAiC;AAC/B,cAAIjU,GAAG,CAAHA,UAAAA,CAAJ,IAAIA,CAAJ,EAA0B;AACxBb,YAAAA,EAAE,GAAFA,IAAAA;AACAwR,YAAAA,IAAI,GAAJA,EAAAA;AACD;;AACDA,UAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AAEA,cAAM0C,IAAI,GAAG,IAAA,QAAA,CAAA,GAAA,EAAA,IAAA,EAAwB1C,IAAI,CAAzC,IAAa,CAAb;AACA,iBAAO0C,IAAI,CAAJA,MAAAA,CAAAA,GAAAA,EAAP,EAAOA,CAAP;;;eAGFlC,S,GAAAA,SAAAA,SAAAA,CAAAA,KAAAA,EAAAA,QAAAA,EAAAA,UAAAA,EAAuC;AACrC,iBAAOA,UAAS,CAAA,KAAA,EAAA,QAAA,EAAhB,UAAgB,CAAhB;;;;QArSsBtQ,U;;UAySpBqT,O;;;;;;;;;gBACJzT,I,GAAAA,SAAAA,IAAAA,CAAAA,GAAAA,EAAAA,MAAAA,EAAAA,GAAAA,EAAuB;AAAA,cAAA,MAAA,GAAA,IAAA,CAAA,CACrB;;;AACA,eAAA,GAAA,GAAW0T,GAAG,IAAI,IAFG,WAEH,EAAlB,CAFqB,CAIrB;;AACA,eAAA,GAAA,GAAWnU,GAAG,CAAHA,MAAAA,CAAAA,EAAAA,EAAX,GAAWA,CAAX;AAEA,eAAA,MAAA,GAAA,EAAA;AACA,eAAA,QAAA,GAAA,EAAA;AAEAA,UAAAA,GAAG,CAAHA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAAyB,UAAA,IAAA,EAAQ;AAC/B,YAAA,MAAI,CAAJ,QAAA,CAAA,IAAA,EAAoBoQ,MAAM,CAA1B,IAA0B,CAA1B;AADFpQ,WAAAA;;;gBAKFqB,M,GAAAA,SAAAA,MAAAA,CAAAA,IAAAA,EAAa;AACX;AACA;AACA,cAAIV,IAAI,IAAI,KAAA,GAAA,CAARA,OAAAA,IAA4B,EAAEA,IAAI,IAAI,KAA1C,GAAgC,CAAhC,EAAqD;AACnD,mBAAO,KAAA,GAAA,CAAA,OAAA,CAAP,IAAO,CAAP;AADF,WAAA,MAEO;AACL,mBAAO,KAAA,GAAA,CAAP,IAAO,CAAP;AACD;;;gBAGHyT,W,GAAAA,SAAAA,WAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAuB;AACrB,eAAA,GAAA,CAAA,IAAA,IAAA,GAAA;;;gBAGFC,Y,GAAAA,SAAAA,YAAAA,GAAe;AACb,iBAAO,KAAP,GAAA;;;gBAGFC,Q,GAAAA,SAAAA,QAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAsB;AACpB,eAAA,MAAA,CAAA,IAAA,IAAoB,KAAA,MAAA,CAAA,IAAA,KAApB,EAAA;AACA,eAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,KAAA;AACA,iBAAA,IAAA;;;gBAGFC,Q,GAAAA,SAAAA,QAAAA,CAAAA,IAAAA,EAAe;AACb,cAAI,CAAC,KAAA,MAAA,CAAL,IAAK,CAAL,EAAwB;AACtB,kBAAM,IAAA,KAAA,CAAU,oBAAA,IAAA,GAAhB,GAAM,CAAN;AACD;;AAED,iBAAO,KAAA,MAAA,CAAA,IAAA,EAAP,CAAO,CAAP;;;gBAGFC,Q,GAAAA,SAAAA,QAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAAA,EAAAA,EAA+C;AAC7C,cAAIC,GAAG,GAAGzU,GAAG,CAAHA,OAAAA,CAAY,KAAA,MAAA,CAAA,IAAA,KAAZA,EAAAA,EAAV,KAAUA,CAAV;AACA,cAAI0U,GAAG,GAAG,KAAA,MAAA,CAAA,IAAA,EAAkBD,GAAG,GAA/B,CAAU,CAAV;AACA,cAAIzR,OAAO,GAAX,IAAA;;AAEA,cAAIyR,GAAG,KAAK,CAARA,CAAAA,IAAc,CAAlB,GAAA,EAAwB;AACtB,kBAAM,IAAA,KAAA,CAAU,mCAAA,IAAA,GAAhB,GAAM,CAAN;AACD;;AAEDC,UAAAA,GAAG,CAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAHA,EAAG,CAAHA;;;gBAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAgB;AACd,eAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;;gBAGFC,W,GAAAA,SAAAA,WAAAA,GAAc;AAAA,cAAA,MAAA,GAAA,IAAA;;AACZ,cAAIC,QAAQ,GAAZ,EAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAsB,UAAA,IAAA,EAAU;AAC9BA,YAAAA,QAAQ,CAARA,IAAQ,CAARA,GAAiB,MAAI,CAAJ,GAAA,CAAjBA,IAAiB,CAAjBA;AADF,WAAA;AAGA,iBAAA,QAAA;;;;QArEkBrU,G;;UAyEhBsU,Q;;;;;;;;;gBACJrU,I,GAAAA,SAAAA,IAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,YAAAA,EAAmC;AACjC,eAAA,GAAA,GAAW0T,GAAG,IAAI,IAAlB,WAAkB,EAAlB;;AAEA,cAAInU,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AACrB,oBAAQ2T,GAAG,CAAX,IAAA;AACE,mBAAA,MAAA;AACE,qBAAA,SAAA,GAAiBA,GAAG,CAApB,GAAA;AACA;;AACF,mBAAA,QAAA;AACE,qBAAA,OAAA,GAAeA,GAAG,CAAlB,GAAA;AACA;;AACF;AACE,sBAAM,IAAA,KAAA,CAAA,qCAC+BA,GAAG,CADlC,IAAA,GAAN,gCAAM,CAAN;AARJ;AADF,WAAA,MAYO,IAAI3T,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AAC5B,iBAAA,OAAA,GAAA,GAAA;AADK,WAAA,MAEA;AACL,kBAAM,IAAA,KAAA,CAAN,yDAAM,CAAN;AACD;;AAED,eAAA,IAAA,GAAA,IAAA;;AAEA,cAAA,YAAA,EAAkB;AAChB,gBAAI;AACF,mBAAA,QAAA;AADF,aAAA,CAEE,OAAA,GAAA,EAAY;AACZ,oBAAMA,GAAG,CAAHA,cAAAA,CAAmB,KAAnBA,IAAAA,EAA8B,KAAA,GAAA,CAAA,IAAA,CAA9BA,GAAAA,EAAN,GAAMA,CAAN;AACD;AALH,WAAA,MAMO;AACL,iBAAA,QAAA,GAAA,KAAA;AACD;;;gBAGH8T,M,GAAAA,SAAAA,MAAAA,CAAAA,GAAAA,EAAAA,WAAAA,EAAAA,EAAAA,EAA6B;AAAA,cAAA,MAAA,GAAA,IAAA;;AAC3B,cAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AAC7B3U,YAAAA,EAAE,GAAFA,GAAAA;AACA4U,YAAAA,GAAG,GAAHA,EAAAA;AAFF,WAAA,MAGO,IAAI,OAAA,WAAA,KAAJ,UAAA,EAAuC;AAC5C5U,YAAAA,EAAE,GAAFA,WAAAA;AACA4V,YAAAA,WAAW,GAAXA,IAAAA;AANyB,WAAA,CAS3B;AACA;AACA;AACA;;;AACA,cAAMC,UAAU,GAAG,CAbQ,WAa3B,CAb2B,CAe3B;;AACA,cAAI;AACF,iBAAA,OAAA;AADF,WAAA,CAEE,OAAA,CAAA,EAAU;AACV,gBAAMxY,GAAG,GAAGwD,GAAG,CAAHA,cAAAA,CAAmB,KAAnBA,IAAAA,EAA8B,KAAA,GAAA,CAAA,IAAA,CAA9BA,GAAAA,EAAZ,CAAYA,CAAZ;;AACA,gBAAA,EAAA,EAAQ;AACN,qBAAOgU,YAAY,CAAA,EAAA,EAAnB,GAAmB,CAAnB;AADF,aAAA,MAEO;AACL,oBAAA,GAAA;AACD;AACF;;AAED,cAAMhR,OAAO,GAAG,IAAA,OAAA,CAAY+Q,GAAG,IAAf,EAAA,EAAuB,KAAvB,MAAA,EAAoC,KAApD,GAAgB,CAAhB;AACA,cAAM5S,KAAK,GAAG4T,WAAW,GAAGA,WAAW,CAAXA,IAAAA,CAAH,IAAGA,CAAH,GAA4B,IAArD,KAAqD,EAArD;AACA5T,UAAAA,KAAK,CAALA,QAAAA,GAAAA,IAAAA;AACA,cAAIsS,UAAU,GAAd,IAAA;AACA,cAAIwB,QAAQ,GAAZ,KAAA;AAEA,eAAA,cAAA,CAAoB,KAApB,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,aAAA,EAA6D,UAAA,GAAA,EAAA,GAAA,EAAc;AACzE;AACA;AACA;AACA;AACA,gBAAIA,QAAQ,IAARA,EAAAA,IAAkB,OAAA,GAAA,KAAtB,WAAA,EAAkD;AAChD;AACA;AACD;;AAED,gBAAA,GAAA,EAAS;AACPzY,cAAAA,GAAG,GAAGwD,GAAG,CAAHA,cAAAA,CAAmB,MAAI,CAAvBA,IAAAA,EAA8B,MAAI,CAAJ,GAAA,CAAA,IAAA,CAA9BA,GAAAA,EAANxD,GAAMwD,CAANxD;AACAyY,cAAAA,QAAQ,GAARA,IAAAA;AACD;;AAED,gBAAA,EAAA,EAAQ;AACN,kBAAA,UAAA,EAAgB;AACdjB,gBAAAA,YAAY,CAAA,EAAA,EAAA,GAAA,EAAZA,GAAY,CAAZA;AADF,eAAA,MAEO;AACL7U,gBAAAA,EAAE,CAAA,GAAA,EAAFA,GAAE,CAAFA;AACD;AALH,aAAA,MAMO;AACL,kBAAA,GAAA,EAAS;AACP,sBAAA,GAAA;AACD;;AACDsU,cAAAA,UAAU,GAAVA,GAAAA;AACD;AA1BH,WAAA;AA6BA,iBAAA,UAAA;;;gBAIFmB,W,GAAAA,SAAAA,WAAAA,CAAAA,GAAAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAkC;AAAE;AAClC,cAAI,OAAA,GAAA,KAAJ,UAAA,EAA+B;AAC7BzV,YAAAA,EAAE,GAAFA,GAAAA;AACA4U,YAAAA,GAAG,GAAHA,EAAAA;AACD;;AAED,cAAI,OAAA,WAAA,KAAJ,UAAA,EAAuC;AACrC5U,YAAAA,EAAE,GAAFA,WAAAA;AACA4V,YAAAA,WAAW,GAAXA,IAAAA;AAR8B,WAAA,CAWhC;;;AACA,cAAI;AACF,iBAAA,OAAA;AADF,WAAA,CAEE,OAAA,CAAA,EAAU;AACV,gBAAA,EAAA,EAAQ;AACN,qBAAO5V,EAAE,CAAT,CAAS,CAAT;AADF,aAAA,MAEO;AACL,oBAAA,CAAA;AACD;AACF;;AAED,cAAMgC,KAAK,GAAG4T,WAAW,GAAGA,WAAW,CAAd,IAAGA,EAAH,GAAwB,IAAjD,KAAiD,EAAjD;AACA5T,UAAAA,KAAK,CAALA,QAAAA,GAvBgC,IAuBhCA,CAvBgC,CAyBhC;;AACA,cAAM6B,OAAO,GAAG,IAAA,OAAA,CAAY+Q,GAAG,IAAf,EAAA,EAAuB,KAAvB,MAAA,EAAoC,KAApD,GAAgB,CAAhB;AACA,eAAA,cAAA,CAAoB,KAApB,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,aAAA,EAA6D,UAAA,GAAA,EAAS;AACpE,gBAAA,GAAA,EAAS;AACP5U,cAAAA,EAAE,CAAA,GAAA,EAAFA,IAAE,CAAFA;AADF,aAAA,MAEO;AACLA,cAAAA,EAAE,CAAA,IAAA,EAAO6D,OAAO,CAAhB7D,WAAS6D,EAAP,CAAF7D;AACD;AALH,WAAA;;;gBASFqR,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,cAAI,CAAC,KAAL,QAAA,EAAoB;AAClB,iBAAA,QAAA;AACD;;;gBAGHC,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAA,KAAA;;AAEA,cAAI,KAAJ,SAAA,EAAoB;AAClBrQ,YAAAA,KAAK,GAAG,KAARA,SAAAA;AADF,WAAA,MAEO;AACL,gBAAM8U,MAAM,GAAG9D,QAAQ,CAARA,OAAAA,CAAiB,KAAjBA,OAAAA,EACb,KAAA,GAAA,CADaA,YAAAA,EAEb,KAAA,GAAA,CAFaA,cAAAA,EAGb,KAHaA,IAAAA,EAIb,KAAA,GAAA,CAJF,IAAeA,CAAf;AAMA,gBAAMrS,IAAI,GAAG,IAAA,QAAA,CAPR,MAOQ,CAAb,CAPK,CAO8B;;AACnCqB,YAAAA,KAAK,GAAGrB,IAARqB,EAAAA;AACD;;AAED,eAAA,MAAA,GAAc,KAAA,UAAA,CAAd,KAAc,CAAd;AACA,eAAA,cAAA,GAAsBA,KAAK,CAA3B,IAAA;AACA,eAAA,QAAA,GAAA,IAAA;;;gBAGF+U,U,GAAAA,SAAAA,UAAAA,CAAAA,KAAAA,EAAkB;AAChB,cAAI/E,MAAM,GAAV,EAAA;AAEApQ,UAAAA,GAAG,CAAHA,IAAAA,CAAAA,KAAAA,EAAAA,OAAAA,CAAwB,UAAA,CAAA,EAAO;AAC7B,gBAAIR,CAAC,CAADA,KAAAA,CAAAA,CAAAA,EAAAA,CAAAA,MAAJ,IAAA,EAA4B;AAC1B4Q,cAAAA,MAAM,CAAC5Q,CAAC,CAADA,KAAAA,CAAP4Q,CAAO5Q,CAAD,CAAN4Q,GAAqBhQ,KAAK,CAA1BgQ,CAA0B,CAA1BA;AACD;AAHHpQ,WAAAA;AAMA,iBAAA,MAAA;;;;QA7KmBQ,G;;AAiLvBjE,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfwV,QAAAA,WAAW,EADI,WAAA;AAEf+C,QAAAA,QAAQ,EAAEA;AAFK,OAAjBvY;;;;;;;;;;;;;;;;;;;;;;;;;ACxkBA,UAAI6Y,KAAK,GAAGrV,mBAAO,CAAnB,CAAmB,CAAnB;;AACA,UAAI2E,KAAK,GAAG3E,mBAAO,CAAnB,CAAmB,CAAnB;;AACA,UAAIS,GAAG,GAAGT,mBAAO,CAAPA,CAAO,CAAPA,CAAV,GAAA;;AACA,UAAIC,GAAG,GAAGD,mBAAO,CAAjB,CAAiB,CAAjB;;UAEMsV,M;;;;;;;;;eACJ5U,I,GAAAA,SAAAA,IAAAA,CAAAA,MAAAA,EAAa;AACX,eAAA,MAAA,GAAA,MAAA;AACA,eAAA,MAAA,GAAA,IAAA;AACA,eAAA,aAAA,GAAA,IAAA;AACA,eAAA,qBAAA,GAAA,KAAA;AAEA,eAAA,UAAA,GAAA,EAAA;;;eAGF6U,S,GAAAA,SAAAA,SAAAA,CAAAA,cAAAA,EAA0B;AACxB,cAAA,GAAA;;AAEA,cAAI,KAAJ,MAAA,EAAiB;AACf,gBAAI,CAAA,cAAA,IAAmB,KAAA,MAAA,CAAA,IAAA,KAAqBF,KAAK,CAAjD,gBAAA,EAAoE;AAClE,mBAAA,MAAA,GAAA,IAAA;AADF,aAAA,MAEO;AACLG,cAAAA,GAAG,GAAG,KAANA,MAAAA;AACA,mBAAA,MAAA,GAAA,IAAA;AACA,qBAAA,GAAA;AACD;AACF;;AAEDA,UAAAA,GAAG,GAAG,KAAA,MAAA,CAANA,SAAM,EAANA;;AAEA,cAAI,CAAJ,cAAA,EAAqB;AACnB,mBAAOA,GAAG,IAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAhC,gBAAA,EAAmD;AACjDG,cAAAA,GAAG,GAAG,KAAA,MAAA,CAANA,SAAM,EAANA;AACD;AACF;;AAED,iBAAA,GAAA;;;eAGFC,S,GAAAA,SAAAA,SAAAA,GAAY;AACV,eAAA,MAAA,GAAc,KAAA,MAAA,IAAe,KAA7B,SAA6B,EAA7B;AACA,iBAAO,KAAP,MAAA;;;eAGFC,S,GAAAA,SAAAA,SAAAA,CAAAA,GAAAA,EAAe;AACb,cAAI,KAAJ,MAAA,EAAiB;AACf,kBAAM,IAAA,KAAA,CAAN,qDAAM,CAAN;AACD;;AACD,eAAA,MAAA,GAAA,GAAA;;;eAGFxS,K,GAAAA,SAAAA,KAAAA,CAAAA,GAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAA0B;AACxB,cAAIH,MAAM,KAANA,SAAAA,IAAwBC,KAAK,KAAjC,SAAA,EAAiD;AAC/C,gBAAMwS,GAAG,GAAG,KAAA,SAAA,MAAZ,EAAA;AACAzS,YAAAA,MAAM,GAAGyS,GAAG,CAAZzS,MAAAA;AACAC,YAAAA,KAAK,GAAGwS,GAAG,CAAXxS,KAAAA;AACD;;AACD,cAAID,MAAM,KAAV,SAAA,EAA0B;AACxBA,YAAAA,MAAM,IAANA,CAAAA;AACD;;AACD,cAAIC,KAAK,KAAT,SAAA,EAAyB;AACvBA,YAAAA,KAAK,IAALA,CAAAA;AACD;;AACD,iBAAO,IAAI/C,GAAG,CAAP,aAAA,CAAA,GAAA,EAAA,MAAA,EAAP,KAAO,CAAP;;;eAGFqJ,I,GAAAA,SAAAA,IAAAA,CAAAA,GAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAyB;AACvB,gBAAM,KAAA,KAAA,CAAA,GAAA,EAAA,MAAA,EAAN,KAAM,CAAN;;;eAGFqM,I,GAAAA,SAAAA,IAAAA,CAAAA,IAAAA,EAAW;AACT,cAAIH,GAAG,GAAG,KAAV,SAAU,EAAV;;AACA,cAAI,CAAA,GAAA,IAAQA,GAAG,CAAHA,IAAAA,KAAZ,IAAA,EAA+B;AAC7B,iBAAA,SAAA,CAAA,GAAA;AACA,mBAAA,KAAA;AACD;;AACD,iBAAA,IAAA;;;eAGFI,M,GAAAA,SAAAA,MAAAA,CAAAA,IAAAA,EAAa;AACX,cAAIJ,GAAG,GAAG,KAAV,SAAU,EAAV;;AACA,cAAIA,GAAG,CAAHA,IAAAA,KAAJ,IAAA,EAAuB;AACrB,iBAAA,IAAA,CAAU,cAAA,IAAA,GAAA,QAAA,GAAgCA,GAAG,CAA7C,IAAA,EACEA,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;;AACD,iBAAA,GAAA;;;eAGFK,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAqB;AACnB,cAAIL,GAAG,GAAG,KAAV,SAAU,EAAV;;AACA,cAAI,CAAA,GAAA,IAAQA,GAAG,CAAHA,IAAAA,KAAR,IAAA,IAA6BA,GAAG,CAAHA,KAAAA,KAAjC,GAAA,EAAoD;AAClD,iBAAA,SAAA,CAAA,GAAA;AACA,mBAAA,KAAA;AACD;;AACD,iBAAA,IAAA;;;eAGFM,U,GAAAA,SAAAA,UAAAA,CAAAA,GAAAA,EAAgB;AACd,iBAAO,KAAA,SAAA,CAAeT,KAAK,CAApB,YAAA,EAAP,GAAO,CAAP;;;eAGFU,oB,GAAAA,SAAAA,oBAAAA,CAAAA,IAAAA,EAA2B;AACzB,cAAA,GAAA;;AACA,cAAI,CAAJ,IAAA,EAAW;AACTP,YAAAA,GAAG,GAAG,KAANA,SAAM,EAANA;;AAEA,gBAAI,CAAJ,GAAA,EAAU;AACR,mBAAA,IAAA,CAAA,wBAAA;AACD;;AAED,gBAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,YAAA,EAAqC;AACnC,mBAAA,IAAA,CAAU,oDAAV,4BAAA;AAED;;AAEDzU,YAAAA,IAAI,GAAG,KAAA,SAAA,GAAPA,KAAAA;AACD;;AAED4U,UAAAA,GAAG,GAAG,KAANA,SAAM,EAANA;;AAEA,cAAIA,GAAG,IAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAA7B,eAAA,EAA+C;AAC7C,gBAAIG,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,CAAAA,CAAAA,MAAJ,GAAA,EAAiC;AAC/B,mBAAA,qBAAA,GAAA,IAAA;AACD;AAHH,WAAA,MAIO;AACL,iBAAA,IAAA,CAAU,2BAAA,IAAA,GAAV,YAAA;AACD;;AAED,iBAAA,GAAA;;;eAGFQ,uB,GAAAA,SAAAA,uBAAAA,GAA0B;AACxB,cAAIR,GAAG,GAAG,KAAV,SAAU,EAAV;;AAEA,cAAIA,GAAG,IAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAA7B,kBAAA,EAAkD;AAChD,iBAAA,qBAAA,GAA6BG,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,CAC3BA,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,GAAmB,KAAA,MAAA,CAAA,IAAA,CAAA,YAAA,CAAnBA,MAAAA,GAD2BA,CAAAA,MAA7B,GAAA;AADF,WAAA,MAIO;AACL,iBAAA,SAAA,CAAA,GAAA;AACA,iBAAA,IAAA,CAAA,uBAAA;AACD;;;eAGHS,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIC,MAAM,GAAG,KAAb,SAAa,EAAb;AACA,cAAA,IAAA;AACA,cAAA,QAAA;;AAEA,cAAI,KAAA,UAAA,CAAJ,KAAI,CAAJ,EAA4B;AAC1BrN,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAcuR,MAAM,CAApB,MAAA,EAA6BA,MAAM,CAA1CrN,KAAO,CAAPA;AACAsN,YAAAA,QAAQ,GAARA,QAAAA;AAFF,WAAA,MAGO,IAAI,KAAA,UAAA,CAAJ,WAAI,CAAJ,EAAkC;AACvCtN,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,SAAA,CAAoBuR,MAAM,CAA1B,MAAA,EAAmCA,MAAM,CAAhDrN,KAAO,CAAPA;AACAsN,YAAAA,QAAQ,GAARA,SAAAA;AAFK,WAAA,MAGA,IAAI,KAAA,UAAA,CAAJ,UAAI,CAAJ,EAAiC;AACtCtN,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,QAAA,CAAmBuR,MAAM,CAAzB,MAAA,EAAkCA,MAAM,CAA/CrN,KAAO,CAAPA;AACAsN,YAAAA,QAAQ,GAARA,QAAAA;AAFK,WAAA,MAGA;AACL,iBAAA,IAAA,CAAA,+BAAA,EAA2CD,MAAM,CAAjD,MAAA,EAA0DA,MAAM,CAAhE,KAAA;AACD;;AAEDrN,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAZA,YAAY,EAAZA;;AAEA,cAAI,EAAEA,IAAI,CAAJA,IAAAA,YAAqBlE,KAAK,CAAhC,MAAI,CAAJ,EAA0C;AACxC,iBAAA,IAAA,CAAA,2CAAA;AACD;;AAED,cAAM/B,IAAI,GAAG,KAAA,SAAA,GAAb,IAAA;;AACA,cAAIA,IAAI,KAAKyS,KAAK,CAAlB,WAAA,EAAgC;AAC9B;AACA,gBAAM/W,GAAG,GAAGuK,IAAI,CAAhB,IAAA;AACAA,YAAAA,IAAI,CAAJA,IAAAA,GAAY,IAAIlE,KAAK,CAAT,KAAA,CAAgBrG,GAAG,CAAnB,MAAA,EAA4BA,GAAG,CAA3CuK,KAAY,CAAZA;AACAA,YAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,GAAAA;;AAEA,mBAAO,KAAA,IAAA,CAAUwM,KAAK,CAAtB,WAAO,CAAP,EAAqC;AACnC,kBAAMe,IAAI,GAAG,KAAb,YAAa,EAAb;AACAvN,cAAAA,IAAI,CAAJA,IAAAA,CAAAA,QAAAA,CAAAA,IAAAA;AACD;AACF;;AAED,cAAI,CAAC,KAAA,UAAA,CAAL,IAAK,CAAL,EAA4B;AAC1B,iBAAA,IAAA,CAAA,0CAAA,EACEqN,MAAM,CADR,MAAA,EAEEA,MAAM,CAFR,KAAA;AAGD;;AAEDrN,UAAAA,IAAI,CAAJA,GAAAA,GAAW,KAAXA,eAAW,EAAXA;AACA,eAAA,oBAAA,CAA0BqN,MAAM,CAAhC,KAAA;AAEArN,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAA,gBAAA,CAAA,QAAA,EAAZA,MAAY,CAAZA;;AAEA,cAAI,KAAA,UAAA,CAAJ,MAAI,CAAJ,EAA6B;AAC3B,iBAAA,oBAAA,CAAA,MAAA;AACAA,YAAAA,IAAI,CAAJA,KAAAA,GAAa,KAAA,gBAAA,CAAbA,QAAa,CAAbA;AACD;;AAED,eAAA,oBAAA;AAEA,iBAAA,IAAA;;;eAGFwN,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,cAAMC,QAAQ,GAAG,KAAjB,SAAiB,EAAjB;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,OAAK,CAAL,EAA+B;AAC7B,iBAAA,IAAA,CAAA,gBAAA;AACD;;AAED,cAAM1V,IAAI,GAAG,KAAA,YAAA,CAAb,IAAa,CAAb;AACA,cAAMsB,IAAI,GAAG,KAAb,cAAa,EAAb;AACA,cAAM2G,IAAI,GAAG,IAAIlE,KAAK,CAAT,KAAA,CAAgB2R,QAAQ,CAAxB,MAAA,EAAiCA,QAAQ,CAAzC,KAAA,EAAA,IAAA,EAAb,IAAa,CAAb;AAEA,eAAA,oBAAA,CAA0BA,QAAQ,CAAlC,KAAA;AACAzN,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAA,gBAAA,CAAZA,UAAY,CAAZA;AACA,eAAA,oBAAA;AAEA,iBAAA,IAAA;;;eAGF0N,S,GAAAA,SAAAA,SAAAA,GAAY;AACV;AACA;AACA,cAAIC,OAAO,GAAG,KAAd,SAAc,EAAd;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,MAAK,CAAL,EAA8B;AAC5B,iBAAA,IAAA,CAAA,eAAA;AACD;;AAED,cAAMC,UAAU,GAAG,KAAA,cAAA,CAAA,IAAA,KAA6B,IAAI9R,KAAK,CAAzD,QAAgD,EAAhD;AACA,cAAM+R,SAAS,GAAG,KAAlB,YAAkB,EAAlB;AAEA,eAAA,oBAAA,CAA0BF,OAAO,CAAjC,KAAA;AACA,cAAMG,IAAI,GAAG,KAAA,gBAAA,CAAb,SAAa,CAAb;AACA,eAAA,oBAAA;AAEA,cAAMC,UAAU,GAAG,IAAIjS,KAAK,CAAT,MAAA,CAAiB6R,OAAO,CAAxB,MAAA,EACjBA,OAAO,CADU,KAAA,EAAnB,QAAmB,CAAnB;AAGA,cAAMK,UAAU,GAAG,IAAIlS,KAAK,CAAT,MAAA,CAAiB6R,OAAO,CAAxB,MAAA,EACjBA,OAAO,CADU,KAAA,EAAA,UAAA,EAAA,UAAA,EAlBT,IAkBS,CAAnB,CAlBU,CAwBV;;AACA,cAAMtU,IAAI,GAAGwU,SAAS,CAATA,IAAAA,CAAb,QAAA;;AACA,cAAI,EAAExU,IAAI,CAACA,IAAI,CAAJA,MAAAA,GAALA,CAAI,CAAJA,YAAiCyC,KAAK,CAA5C,WAAI,CAAJ,EAA2D;AACzDzC,YAAAA,IAAI,CAAJA,IAAAA,CAAU,IAAIyC,KAAK,CAAnBzC,WAAU,EAAVA;AACD;;AACD,cAAMH,MAAM,GAAGG,IAAI,CAACA,IAAI,CAAJA,MAAAA,GAApB,CAAmB,CAAnB;AACAH,UAAAA,MAAM,CAANA,QAAAA,CAAgB,IAAI4C,KAAK,CAAT,IAAA,CAAe6R,OAAO,CAAtB,MAAA,EACdA,OAAO,CADO,KAAA,EAAA,UAAA,EAAhBzU,UAAgB,CAAhBA;AAKA,iBAAO,IAAI4C,KAAK,CAAT,MAAA,CAAiB6R,OAAO,CAAxB,MAAA,EACLA,OAAO,CADF,KAAA,EAEL,CAFF,SAEE,CAFK,CAAP;;;eAKFM,gB,GAAAA,SAAAA,gBAAAA,GAAmB;AACjB,cAAItB,GAAG,GAAG,KAAV,SAAU,EAAV;AAEA,cAAIuB,WAAW,GAAf,IAAA;;AAEA,cAAI,KAAA,UAAA,CAAJ,MAAI,CAAJ,EAA6B;AAC3BA,YAAAA,WAAW,GAAXA,IAAAA;AADF,WAAA,MAEO,IAAI,KAAA,UAAA,CAAJ,SAAI,CAAJ,EAAgC;AACrCA,YAAAA,WAAW,GAAXA,KAAAA;AACD;;AAED,cAAIA,WAAW,KAAf,IAAA,EAA0B;AACxB,gBAAI,CAAC,KAAA,UAAA,CAAL,SAAK,CAAL,EAAiC;AAC/B,mBAAA,IAAA,CAAA,gDAAA,EACEvB,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;AACF;;AAED,iBAAA,WAAA;;;eAGFwB,W,GAAAA,SAAAA,WAAAA,GAAc;AACZ,cAAIC,SAAS,GAAG,KAAhB,SAAgB,EAAhB;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,QAAK,CAAL,EAAgC;AAC9B,iBAAA,IAAA,CAAA,8BAAA,EACEA,SAAS,CADX,MAAA,EAEEA,SAAS,CAFX,KAAA;AAGD;;AAED,cAAMC,QAAQ,GAAG,KAAjB,eAAiB,EAAjB;;AAEA,cAAI,CAAC,KAAA,UAAA,CAAL,IAAK,CAAL,EAA4B;AAC1B,iBAAA,IAAA,CAAA,oCAAA,EACED,SAAS,CADX,MAAA,EAEEA,SAAS,CAFX,KAAA;AAGD;;AAED,cAAMtU,MAAM,GAAG,KAAf,eAAe,EAAf;AACA,cAAMoU,WAAW,GAAG,KAApB,gBAAoB,EAApB;AACA,cAAMlO,IAAI,GAAG,IAAIlE,KAAK,CAAT,MAAA,CAAiBsS,SAAS,CAA1B,MAAA,EACXA,SAAS,CADE,KAAA,EAAA,QAAA,EAAA,MAAA,EAAb,WAAa,CAAb;AAMA,eAAA,oBAAA,CAA0BA,SAAS,CAAnC,KAAA;AAEA,iBAAA,IAAA;;;eAGFE,S,GAAAA,SAAAA,SAAAA,GAAY;AACV,cAAMC,OAAO,GAAG,KAAhB,SAAgB,EAAhB;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,MAAK,CAAL,EAA8B;AAC5B,iBAAA,IAAA,CAAA,0BAAA;AACD;;AAED,cAAMF,QAAQ,GAAG,KAAjB,eAAiB,EAAjB;;AAEA,cAAI,CAAC,KAAA,UAAA,CAAL,QAAK,CAAL,EAAgC;AAC9B,iBAAA,IAAA,CAAA,4BAAA,EACEE,OAAO,CADT,MAAA,EAEEA,OAAO,CAFT,KAAA;AAGD;;AAED,cAAMrR,KAAK,GAAG,IAAIpB,KAAK,CAAvB,QAAc,EAAd;AACA,cAAA,WAAA;;AAEA,iBAAA,CAAA,EAAU;AAAE;AACV,gBAAM0S,OAAO,GAAG,KAAhB,SAAgB,EAAhB;;AACA,gBAAIA,OAAO,CAAPA,IAAAA,KAAiBhC,KAAK,CAA1B,eAAA,EAA4C;AAC1C,kBAAI,CAACtP,KAAK,CAALA,QAAAA,CAAL,MAAA,EAA4B;AAC1B,qBAAA,IAAA,CAAA,8CAAA,EACEqR,OAAO,CADT,MAAA,EAEEA,OAAO,CAFT,KAAA;AAFwC,eAAA,CAO1C;AACA;AACA;;;AACA,kBAAIC,OAAO,CAAPA,KAAAA,CAAAA,MAAAA,CAAAA,CAAAA,MAAJ,GAAA,EAAqC;AACnC,qBAAA,qBAAA,GAAA,IAAA;AACD;;AAED,mBAAA,SAAA;AACA;AACD;;AAED,gBAAItR,KAAK,CAALA,QAAAA,CAAAA,MAAAA,GAAAA,CAAAA,IAA6B,CAAC,KAAA,IAAA,CAAUsP,KAAK,CAAjD,WAAkC,CAAlC,EAAgE;AAC9D,mBAAA,IAAA,CAAA,2BAAA,EACE+B,OAAO,CADT,MAAA,EAEEA,OAAO,CAFT,KAAA;AAGD;;AAED,gBAAMxW,IAAI,GAAG,KAAb,YAAa,EAAb;;AACA,gBAAIA,IAAI,CAAJA,KAAAA,CAAAA,MAAAA,CAAAA,CAAAA,MAAJ,GAAA,EAAkC;AAChC,mBAAA,IAAA,CAAA,iEAAA,EACEA,IAAI,CADN,MAAA,EAEEA,IAAI,CAFN,KAAA;AAGD;;AAED,gBAAI,KAAA,UAAA,CAAJ,IAAI,CAAJ,EAA2B;AACzB,kBAAM2O,KAAK,GAAG,KAAd,YAAc,EAAd;AACAxJ,cAAAA,KAAK,CAALA,QAAAA,CAAe,IAAIpB,KAAK,CAAT,IAAA,CAAe/D,IAAI,CAAnB,MAAA,EACbA,IAAI,CADS,KAAA,EAAA,IAAA,EAAfmF,KAAe,CAAfA;AAFF,aAAA,MAMO;AACLA,cAAAA,KAAK,CAALA,QAAAA,CAAAA,IAAAA;AACD;;AAEDgR,YAAAA,WAAW,GAAG,KAAdA,gBAAc,EAAdA;AACD;;AAED,iBAAO,IAAIpS,KAAK,CAAT,UAAA,CAAqByS,OAAO,CAA5B,MAAA,EACLA,OAAO,CADF,KAAA,EAAA,QAAA,EAAA,KAAA,EAAP,WAAO,CAAP;;;eAOFE,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,cAAMC,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,OAAK,CAAL,EAA+B;AAC7B,iBAAA,IAAA,CAAA,4BAAA,EAAwCA,GAAG,CAA3C,MAAA,EAAoDA,GAAG,CAAvD,KAAA;AACD;;AAED,cAAM1O,IAAI,GAAG,IAAIlE,KAAK,CAAT,KAAA,CAAgB4S,GAAG,CAAnB,MAAA,EAA4BA,GAAG,CAA5C,KAAa,CAAb;AAEA1O,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAZA,YAAY,EAAZA;;AACA,cAAI,EAAEA,IAAI,CAAJA,IAAAA,YAAqBlE,KAAK,CAAhC,MAAI,CAAJ,EAA0C;AACxC,iBAAA,IAAA,CAAA,oCAAA,EACE4S,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;;AAED,eAAA,oBAAA,CAA0BA,GAAG,CAA7B,KAAA;AAEA1O,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAA,gBAAA,CAAZA,UAAY,CAAZA;AACA,eAAA,UAAA,CAAA,UAAA;AACA,eAAA,UAAA,CAAgBA,IAAI,CAAJA,IAAAA,CAAhB,KAAA;AAEA,cAAM2M,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,cAAI,CAAJ,GAAA,EAAU;AACR,iBAAA,IAAA,CAAA,gDAAA;AACD;;AAED,eAAA,oBAAA,CAA0BA,GAAG,CAA7B,KAAA;AAEA,iBAAA,IAAA;;;eAGFgC,Y,GAAAA,SAAAA,YAAAA,GAAe;AACb,cAAMC,OAAO,GAAb,SAAA;AACA,cAAMF,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,OAAK,CAAL,EAA+B;AAC7B,iBAAA,IAAA,CAAU,gCAAV,OAAA;AACD;;AAED,cAAM1O,IAAI,GAAG,IAAIlE,KAAK,CAAT,OAAA,CAAkB4S,GAAG,CAArB,MAAA,EAA8BA,GAAG,CAA9C,KAAa,CAAb;AACA1O,UAAAA,IAAI,CAAJA,QAAAA,GAAgB,KAAhBA,eAAgB,EAAhBA;AAEA,eAAA,oBAAA,CAA0B0O,GAAG,CAA7B,KAAA;AACA,iBAAA,IAAA;;;eAGFG,Y,GAAAA,SAAAA,YAAAA,GAAe;AACb,cAAMD,OAAO,GAAb,SAAA;AACA,cAAMF,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,OAAK,CAAL,EAA+B;AAC7B,iBAAA,IAAA,CAAU,4BAAV,OAAA;AACD;;AAED,cAAM1O,IAAI,GAAG,IAAIlE,KAAK,CAAT,OAAA,CAAkB4S,GAAG,CAArB,MAAA,EAA8BA,GAAG,CAA9C,KAAa,CAAb;AACA1O,UAAAA,IAAI,CAAJA,QAAAA,GAAgB,KAAhBA,eAAgB,EAAhBA;;AAEA,cAAI,KAAA,UAAA,CAAA,QAAA,KAA6B,KAAA,UAAA,CAAjC,SAAiC,CAAjC,EAA6D;AAC3DA,YAAAA,IAAI,CAAJA,aAAAA,GAAAA,IAAAA;AACD;;AAED,eAAA,oBAAA,CAA0B0O,GAAG,CAA7B,KAAA;AACA,iBAAA,IAAA;;;eAGFI,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,cAAMJ,GAAG,GAAG,KAAZ,SAAY,EAAZ;AACA,cAAA,IAAA;;AAEA,cAAI,KAAA,UAAA,CAAA,IAAA,KAAyB,KAAA,UAAA,CAAzB,MAAyB,CAAzB,IAAoD,KAAA,UAAA,CAAxD,QAAwD,CAAxD,EAAmF;AACjF1O,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,EAAA,CAAa4S,GAAG,CAAhB,MAAA,EAAyBA,GAAG,CAAnC1O,KAAO,CAAPA;AADF,WAAA,MAEO,IAAI,KAAA,UAAA,CAAJ,SAAI,CAAJ,EAAgC;AACrCA,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,OAAA,CAAkB4S,GAAG,CAArB,MAAA,EAA8BA,GAAG,CAAxC1O,KAAO,CAAPA;AADK,WAAA,MAEA;AACL,iBAAA,IAAA,CAAA,uCAAA,EACE0O,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;;AAED1O,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAZA,eAAY,EAAZA;AACA,eAAA,oBAAA,CAA0B0O,GAAG,CAA7B,KAAA;AAEA1O,UAAAA,IAAI,CAAJA,IAAAA,GAAY,KAAA,gBAAA,CAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAZA,OAAY,CAAZA;AACA,cAAM2M,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AAEA,kBAAQA,GAAG,IAAIA,GAAG,CAAlB,KAAA;AACE,iBAAA,QAAA;AACA,iBAAA,MAAA;AACE3M,cAAAA,IAAI,CAAJA,KAAAA,GAAa,KAAbA,OAAa,EAAbA;AACA;;AACF,iBAAA,MAAA;AACE,mBAAA,oBAAA;AACAA,cAAAA,IAAI,CAAJA,KAAAA,GAAa,KAAA,gBAAA,CAAbA,OAAa,CAAbA;AACA,mBAAA,oBAAA;AACA;;AACF,iBAAA,OAAA;AACEA,cAAAA,IAAI,CAAJA,KAAAA,GAAAA,IAAAA;AACA,mBAAA,oBAAA;AACA;;AACF;AACE,mBAAA,IAAA,CAAA,yDAAA;AAfJ;;AAkBA,iBAAA,IAAA;;;eAGF+O,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAML,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,KAAK,CAAL,EAA6B;AAC3B,iBAAA,IAAA,CAAA,wBAAA,EAAoCA,GAAG,CAAvC,MAAA,EAAgDA,GAAG,CAAnD,KAAA;AACD;;AAED,cAAM1O,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAc4S,GAAG,CAAjB,MAAA,EAA0BA,GAAG,CAA7B,KAAA,EAAb,EAAa,CAAb;AAEA,cAAA,MAAA;;AACA,iBAAQ5U,MAAM,GAAG,KAAjB,YAAiB,EAAjB,EAAuC;AACrCkG,YAAAA,IAAI,CAAJA,OAAAA,CAAAA,IAAAA,CAAAA,MAAAA;;AAEA,gBAAI,CAAC,KAAA,IAAA,CAAUwM,KAAK,CAApB,WAAK,CAAL,EAAmC;AACjC;AACD;AACF;;AAED,cAAI,CAAC,KAAA,SAAA,CAAeA,KAAK,CAApB,cAAA,EAAL,GAAK,CAAL,EAAgD;AAC9C,gBAAI,CAAC,KAAA,IAAA,CAAUA,KAAK,CAApB,eAAK,CAAL,EAAuC;AACrC,mBAAA,IAAA,CAAA,8CAAA,EACEkC,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AADF,aAAA,MAIO;AACL1O,cAAAA,IAAI,CAAJA,IAAAA,GAAY,IAAIlE,KAAK,CAAT,OAAA,CACV4S,GAAG,CADO,MAAA,EAEVA,GAAG,CAFO,KAAA,EAGV,KAAA,gBAAA,CAHF1O,QAGE,CAHU,CAAZA;AAKAA,cAAAA,IAAI,CAAJA,KAAAA,GAAAA,IAAAA;AACA,mBAAA,oBAAA;AACD;AAbH,WAAA,MAcO;AACLA,YAAAA,IAAI,CAAJA,KAAAA,GAAa,KAAbA,eAAa,EAAbA;AACA,iBAAA,oBAAA,CAA0B0O,GAAG,CAA7B,KAAA;AACD;;AAED,iBAAA,IAAA;;;eAGFM,W,GAAAA,SAAAA,WAAAA,GAAc;AACZ;AACJ;AACA;AACA;AACI,cAAMC,WAAW,GAAjB,QAAA;AACA,cAAMC,SAAS,GAAf,WAAA;AACA,cAAMC,SAAS,GAAf,MAAA;AACA,cAAMC,WAAW,GARL,SAQZ,CARY,CAUZ;;AACA,cAAMV,GAAG,GAAG,KAXA,SAWA,EAAZ,CAXY,CAaZ;;AACA,cACE,CAAC,KAAA,UAAA,CAAD,WAAC,CAAD,IACG,CAAC,KAAA,UAAA,CADJ,SACI,CADJ,IAEG,CAAC,KAAA,UAAA,CAHN,WAGM,CAHN,EAIE;AACA,iBAAA,IAAA,CAAA,qDAAA,EAAiEA,GAAG,CAApE,MAAA,EAA6EA,GAAG,CAAhF,KAAA;AAnBU,WAAA,CAsBZ;;;AACA,cAAMW,IAAI,GAAG,KAvBD,eAuBC,EAAb,CAvBY,CAyBZ;;AACA,eAAA,oBAAA,CAAA,WAAA;AACA,eAAA,gBAAA,CAAA,SAAA,EAAA,WAAA,EA3BY,SA2BZ,EA3BY,CA6BZ;;AACA,cAAI1C,GAAG,GAAG,KA9BE,SA8BF,EAAV,CA9BY,CAgCZ;;AACA,cAAM2C,KAAK,GAAX,EAAA;AACA,cAlCY,WAkCZ,CAlCY,CAoCZ;;AACA,aAAG;AACD;AACA,iBAAA,UAAA,CAAA,SAAA;AACA,gBAAMC,IAAI,GAAG,KAAb,eAAa,EAAb;AACA,iBAAA,oBAAA,CAJC,WAID,EAJC,CAKD;;AACA,gBAAMzB,IAAI,GAAG,KAAA,gBAAA,CAAA,SAAA,EAAA,WAAA,EAAb,SAAa,CAAb;AACAwB,YAAAA,KAAK,CAALA,IAAAA,CAAW,IAAIxT,KAAK,CAAT,IAAA,CAAe6Q,GAAG,CAAlB,IAAA,EAAyBA,GAAG,CAA5B,GAAA,EAAA,IAAA,EAPV,IAOU,CAAX2C,EAPC,CAQD;;AACA3C,YAAAA,GAAG,GAAG,KAANA,SAAM,EAANA;AATF,WAAA,QAUSA,GAAG,IAAIA,GAAG,CAAHA,KAAAA,KA/CJ,SAqCZ,EArCY,CAiDZ;;;AACA,kBAAQA,GAAG,CAAX,KAAA;AACE,iBAAA,WAAA;AACE,mBAAA,oBAAA;AACA6C,cAAAA,WAAW,GAAG,KAAA,gBAAA,CAAdA,SAAc,CAAdA;AACA,mBAAA,oBAAA;AACA;;AACF,iBAAA,SAAA;AACE,mBAAA,oBAAA;AACA;;AACF;AACE;AACA,mBAAA,IAAA,CAAA,kEAAA;AAXJ,WAlDY,CAgEZ;;;AACA,iBAAO,IAAI1T,KAAK,CAAT,MAAA,CAAiB4S,GAAG,CAApB,MAAA,EAA6BA,GAAG,CAAhC,KAAA,EAAA,IAAA,EAAA,KAAA,EAAP,WAAO,CAAP;;;eAGFe,c,GAAAA,SAAAA,cAAAA,GAAiB;AACf,cAAI9C,GAAG,GAAG,KAAV,SAAU,EAAV;AACA,cAAA,IAAA;;AAEA,cAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,YAAA,EAAqC;AACnC,iBAAA,IAAA,CAAA,mBAAA,EAA+BG,GAAG,CAAlC,MAAA,EAA2CA,GAAG,CAA9C,KAAA;AACD;;AAED,cAAI,KAAA,aAAA,IACFvV,GAAG,CAAHA,OAAAA,CAAY,KAAZA,aAAAA,EAAgCuV,GAAG,CAAnCvV,KAAAA,MAA+C,CADjD,CAAA,EACqD;AACnD,mBAAA,IAAA;AACD;;AAED,kBAAQuV,GAAG,CAAX,KAAA;AACE,iBAAA,KAAA;AACE,qBAAO,KAAP,QAAO,EAAP;;AACF,iBAAA,UAAA;AACE,qBAAO,KAAA,QAAA,CAAP,UAAO,CAAP;;AACF,iBAAA,IAAA;AACA,iBAAA,SAAA;AACE,qBAAO,KAAP,OAAO,EAAP;;AACF,iBAAA,KAAA;AACA,iBAAA,WAAA;AACA,iBAAA,UAAA;AACE,qBAAO,KAAP,QAAO,EAAP;;AACF,iBAAA,OAAA;AACE,qBAAO,KAAP,UAAO,EAAP;;AACF,iBAAA,SAAA;AACE,qBAAO,KAAP,YAAO,EAAP;;AACF,iBAAA,SAAA;AACE,qBAAO,KAAP,YAAO,EAAP;;AACF,iBAAA,KAAA;AACE,qBAAO,KAAP,QAAO,EAAP;;AACF,iBAAA,OAAA;AACE,qBAAO,KAAP,UAAO,EAAP;;AACF,iBAAA,MAAA;AACE,qBAAO,KAAP,SAAO,EAAP;;AACF,iBAAA,QAAA;AACE,qBAAO,KAAP,WAAO,EAAP;;AACF,iBAAA,MAAA;AACE,qBAAO,KAAP,SAAO,EAAP;;AACF,iBAAA,QAAA;AACE,qBAAO,KAAP,oBAAO,EAAP;;AACF,iBAAA,QAAA;AACE,qBAAO,KAAP,WAAO,EAAP;;AACF;AACE,kBAAI,KAAA,UAAA,CAAJ,MAAA,EAA4B;AAC1B,qBAAK,IAAI1X,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG,KAAA,UAAA,CAApB,MAAA,EAA4CA,CAA5C,EAAA,EAAiD;AAC/C,sBAAMqK,GAAG,GAAG,KAAA,UAAA,CAAZ,CAAY,CAAZ;;AACA,sBAAIlI,GAAG,CAAHA,OAAAA,CAAYkI,GAAG,CAAHA,IAAAA,IAAZlI,EAAAA,EAA4BuV,GAAG,CAA/BvV,KAAAA,MAA2C,CAA/C,CAAA,EAAmD;AACjD,2BAAOkI,GAAG,CAAHA,KAAAA,CAAAA,IAAAA,EAAAA,KAAAA,EAAP,KAAOA,CAAP;AACD;AACF;AACF;;AACD,mBAAA,IAAA,CAAU,wBAAwBqN,GAAG,CAArC,KAAA,EAA6CA,GAAG,CAAhD,MAAA,EAAyDA,GAAG,CAA5D,KAAA;AAzCJ;;AA4CA,iBAAA,IAAA;;;eAGF+C,Q,GAAAA,SAAAA,QAAAA,CAAAA,OAAAA,EAAkB;AAChBd,UAAAA,OAAO,GAAGA,OAAO,IAAjBA,KAAAA;AACA,cAAMe,UAAU,GAAG,QAFH,OAEhB,CAFgB,CAGhB;;AACA,cAAMC,aAAa,GAAG,IAAA,MAAA,CAAW,wBAAA,OAAA,GAAA,GAAA,GAAA,UAAA,GAAjC,eAAsB,CAAtB;AACA,cAAIC,QAAQ,GAAZ,CAAA;AACA,cAAI5Z,GAAG,GAAP,EAAA;AACA,cAAI6Z,OAAO,GAPK,IAOhB,CAPgB,CAShB;AACA;;AACA,cAAMC,KAAK,GAAG,KAXE,oBAWF,EAAd,CAXgB,CAahB;AACA;;AACA,iBAAO,CAACD,OAAO,GAAG,KAAA,MAAA,CAAA,aAAA,CAAX,aAAW,CAAX,KAAwDD,QAAQ,GAAvE,CAAA,EAA6E;AAC3E,gBAAMG,GAAG,GAAGF,OAAO,CAAnB,CAAmB,CAAnB;AACA,gBAAMG,GAAG,GAAGH,OAAO,CAAnB,CAAmB,CAAnB;AACA,gBAAMnI,SAAS,GAAGmI,OAAO,CAHkD,CAGlD,CAAzB,CAH2E,CAK3E;;AACA,gBAAInI,SAAS,KAAb,OAAA,EAA2B;AACzBkI,cAAAA,QAAQ,IAARA,CAAAA;AADF,aAAA,MAEO,IAAIlI,SAAS,KAAb,UAAA,EAA8B;AACnCkI,cAAAA,QAAQ,IAARA,CAAAA;AATyE,aAAA,CAY3E;;;AACA,gBAAIA,QAAQ,KAAZ,CAAA,EAAoB;AAClB;AACA5Z,cAAAA,GAAG,IAFe,GAElBA,CAFkB,CAGlB;;AACA,mBAAA,MAAA,CAAA,KAAA,CAAkB+Z,GAAG,CAAHA,MAAAA,GAAaC,GAAG,CAAlC,MAAA;AAJF,aAAA,MAKO;AACLha,cAAAA,GAAG,IAAHA,GAAAA;AACD;AACF;;AAED,iBAAO,IAAI6F,KAAK,CAAT,MAAA,CACLiU,KAAK,CADA,MAAA,EAELA,KAAK,CAFA,KAAA,EAGL,CAAC,IAAIjU,KAAK,CAAT,YAAA,CAAuBiU,KAAK,CAA5B,MAAA,EAAqCA,KAAK,CAA1C,KAAA,EAHH,GAGG,CAAD,CAHK,CAAP;;;eAOFG,Y,GAAAA,SAAAA,YAAAA,CAAAA,IAAAA,EAAmB;AACjB,cAAA,MAAA;AACA,cAAIvD,GAAG,GAAG,KAAV,SAAU,EAAV;;AAEA,iBAAA,GAAA,EAAY;AACV,gBAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,gBAAA,EAAyC;AACvC;AACAxM,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,OAAA,CAAkB6Q,GAAG,CAArB,MAAA,EACLA,GAAG,CADE,KAAA,EAAA,IAAA,EAGL,KAHF3M,cAGE,EAHK,CAAPA;AAFF,aAAA,MAMO,IAAI2M,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,kBAAA,EAA2C;AAChD;AACA/T,cAAAA,MAAM,GAAG,KAATA,cAAS,EAATA;;AACA,kBAAIA,MAAM,CAANA,QAAAA,CAAAA,MAAAA,GAAJ,CAAA,EAAgC;AAC9B,qBAAA,IAAA,CAAA,eAAA;AACD;;AAEDuH,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,SAAA,CAAoB6Q,GAAG,CAAvB,MAAA,EACLA,GAAG,CADE,KAAA,EAAA,IAAA,EAGLlU,MAAM,CAANA,QAAAA,CAHFuH,CAGEvH,CAHK,CAAPuH;AAPK,aAAA,MAWA,IAAI2M,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAlBG,cAAAA,IAAqCA,GAAG,CAAHA,KAAAA,KAAzC,GAAA,EAA4D;AACjE;AACA,mBAAA,SAAA;AACA,kBAAM/X,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AAEA,kBAAIA,GAAG,CAAHA,IAAAA,KAAa4X,KAAK,CAAtB,YAAA,EAAqC;AACnC,qBAAA,IAAA,CAAU,wCAAwC5X,GAAG,CAArD,KAAA,EACEA,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAN+D,eAAA,CAWjE;AACA;;;AACA6D,cAAAA,MAAM,GAAG,IAAIqD,KAAK,CAAT,OAAA,CAAkBlH,GAAG,CAArB,MAAA,EACPA,GAAG,CADI,KAAA,EAEPA,GAAG,CAFL6D,KAAS,CAATA;AAIAuH,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,SAAA,CAAoB6Q,GAAG,CAAvB,MAAA,EACLA,GAAG,CADE,KAAA,EAAA,IAAA,EAAP3M,MAAO,CAAPA;AAjBK,aAAA,MAqBA;AACL;AACD;;AAED2M,YAAAA,GAAG,GAAG,KAANA,SAAM,EAANA;AACD;;AAED,iBAAA,IAAA;;;eAGFwD,e,GAAAA,SAAAA,eAAAA,GAAkB;AAChB,cAAInQ,IAAI,GAAG,KAAX,aAAW,EAAX;AACA,iBAAA,IAAA;;;eAGFoQ,a,GAAAA,SAAAA,aAAAA,GAAgB;AACd,cAAIpQ,IAAI,GAAG,KAAX,OAAW,EAAX;;AACA,cAAI,KAAA,UAAA,CAAJ,IAAI,CAAJ,EAA2B;AACzB,gBAAMqQ,QAAQ,GAAG,KAAjB,OAAiB,EAAjB;AACA,gBAAMC,QAAQ,GAAd,IAAA;AACAtQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,QAAA,CAAmBkE,IAAI,CAAvB,MAAA,EAAgCA,IAAI,CAA3CA,KAAO,CAAPA;AACAA,YAAAA,IAAI,CAAJA,IAAAA,GAAAA,QAAAA;AACAA,YAAAA,IAAI,CAAJA,IAAAA,GAAAA,QAAAA;;AACA,gBAAI,KAAA,UAAA,CAAJ,MAAI,CAAJ,EAA6B;AAC3BA,cAAAA,IAAI,CAAJA,KAAAA,GAAa,KAAbA,OAAa,EAAbA;AADF,aAAA,MAEO;AACLA,cAAAA,IAAI,CAAJA,KAAAA,GAAAA,IAAAA;AACD;AACF;;AAED,iBAAA,IAAA;;;eAGFuQ,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,cAAIvQ,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,UAAA,CAAP,IAAO,CAAP,EAA8B;AAC5B,gBAAMwQ,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,EAAA,CAAakE,IAAI,CAAjB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFyQ,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIzQ,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,UAAA,CAAP,KAAO,CAAP,EAA+B;AAC7B,gBAAMwQ,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGF0Q,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAM/D,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,cAAI,KAAA,UAAA,CAAJ,KAAI,CAAJ,EAA4B;AAC1B,mBAAO,IAAI7Q,KAAK,CAAT,GAAA,CAAc6Q,GAAG,CAAjB,MAAA,EACLA,GAAG,CADE,KAAA,EAEL,KAFF,QAEE,EAFK,CAAP;AAGD;;AACD,iBAAO,KAAP,OAAO,EAAP;;;eAGFgE,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,cAAI3Q,IAAI,GAAG,KAAX,OAAW,EAAX;;AACA,iBAAA,CAAA,EAAU;AAAE;AACV;AACA,gBAAM2M,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,gBAAI,CAAJ,GAAA,EAAU;AACR;AACD;;AACD,gBAAMiE,MAAM,GAAGjE,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAlBG,YAAAA,IAAmCA,GAAG,CAAHA,KAAAA,KAN1C,KAMR,CANQ,CAOR;;AACA,gBAAI,CAAJ,MAAA,EAAa;AACX,mBAAA,SAAA,CAAA,GAAA;AACD;;AACD,gBAAI,KAAA,UAAA,CAAJ,IAAI,CAAJ,EAA2B;AACzB,kBAAM6D,KAAK,GAAG,KAAd,OAAc,EAAd;AACAxQ,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,EAAA,CAAakE,IAAI,CAAjB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;;AAIA,kBAAA,MAAA,EAAY;AACVA,gBAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAPA,IAAO,CAAPA;AAGD;AAVH,aAAA,MAWO;AACL;AACA,kBAAA,MAAA,EAAY;AACV,qBAAA,SAAA,CAAA,GAAA;AACD;;AACD;AACD;AACF;;AACD,iBAAA,IAAA;UAGF;AACA;;;eACA6Q,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,cAAI7Q,IAAI,GAAG,KADH,YACG,EAAX,CADQ,CAER;;AACA,cAAI,KAAA,UAAA,CAAJ,IAAI,CAAJ,EAA2B;AACzB;AACA,gBAAM8Q,GAAG,GAAG,KAAA,UAAA,CAFa,KAEb,CAAZ,CAFyB,CAGzB;;AACA,gBAAMN,KAAK,GAAG,KAJW,YAIX,EAAd,CAJyB,CAKzB;;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,EAAA,CAAakE,IAAI,CAAjB,MAAA,EAA0BA,IAAI,CAA9B,KAAA,EAAA,IAAA,EANkB,KAMlB,CAAPA,CANyB,CAOzB;;AACA,gBAAA,GAAA,EAAS;AACPA,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EAA2BA,IAAI,CAA/B,KAAA,EAAPA,IAAO,CAAPA;AACD;AAbK,WAAA,CAeR;;;AACA,iBAAA,IAAA;;;eAGF+Q,Y,GAAAA,SAAAA,YAAAA,GAAe;AACb,cAAMxQ,UAAU,GAAG,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAnB,IAAmB,CAAnB;AACA,cAAM8O,IAAI,GAAG,KAAb,WAAa,EAAb;AACA,cAAM2B,GAAG,GAAT,EAAA;;AAEA,iBAAA,CAAA,EAAU;AAAE;AACV,gBAAMrE,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AAEA,gBAAI,CAAJ,GAAA,EAAU;AACR;AADF,aAAA,MAEO,IAAIpM,UAAU,CAAVA,OAAAA,CAAmBoM,GAAG,CAAtBpM,KAAAA,MAAkC,CAAtC,CAAA,EAA0C;AAC/CyQ,cAAAA,GAAG,CAAHA,IAAAA,CAAS,IAAIlV,KAAK,CAAT,cAAA,CAAyB6Q,GAAG,CAA5B,MAAA,EACPA,GAAG,CADI,KAAA,EAEP,KAFO,WAEP,EAFO,EAGPA,GAAG,CAHLqE,KAAS,CAATA;AADK,aAAA,MAKA;AACL,mBAAA,SAAA,CAAA,GAAA;AACA;AACD;AACF;;AAED,cAAIA,GAAG,CAAP,MAAA,EAAgB;AACd,mBAAO,IAAIlV,KAAK,CAAT,OAAA,CAAkBkV,GAAG,CAAHA,CAAG,CAAHA,CAAlB,MAAA,EACLA,GAAG,CAAHA,CAAG,CAAHA,CADK,KAAA,EAAA,IAAA,EAAP,GAAO,CAAP;AADF,WAAA,MAKO;AACL,mBAAA,IAAA;AACD;UAGH;;;eACAC,W,GAAAA,SAAAA,WAAAA,GAAc;AACZ,cAAIjR,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,WAAA,EAAP,GAAO,CAAP,EAA+C;AAC7C,gBAAMgE,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,MAAA,CAAiBkE,IAAI,CAArB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFkR,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIlR,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,GAAO,CAAP,EAAkD;AAChD,gBAAMgE,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFmR,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAInR,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,GAAO,CAAP,EAAkD;AAChD,gBAAMgE,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFoR,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIpR,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,GAAO,CAAP,EAAkD;AAChD,gBAAMgE,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFqR,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIrR,IAAI,GAAG,KAAX,aAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,GAAO,CAAP,EAAkD;AAChD,gBAAMgE,KAAK,GAAG,KAAd,aAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFsR,a,GAAAA,SAAAA,aAAAA,GAAgB;AACd,cAAItR,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,IAAO,CAAP,EAAmD;AACjD,gBAAMgE,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,QAAA,CAAmBkE,IAAI,CAAvB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFuR,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIvR,IAAI,GAAG,KAAX,QAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,GAAO,CAAP,EAAkD;AAChD,gBAAMgE,KAAK,GAAG,KAAd,QAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFwR,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,cAAIxR,IAAI,GAAG,KAAX,UAAW,EAAX;;AACA,iBAAO,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAP,IAAO,CAAP,EAAmD;AACjD,gBAAMgE,KAAK,GAAG,KAAd,UAAc,EAAd;AACAxQ,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAckE,IAAI,CAAlB,MAAA,EACLA,IAAI,CADC,KAAA,EAAA,IAAA,EAAPA,KAAO,CAAPA;AAID;;AACD,iBAAA,IAAA;;;eAGFyR,U,GAAAA,SAAAA,UAAAA,CAAAA,SAAAA,EAAsB;AACpB,cAAM9E,GAAG,GAAG,KAAZ,SAAY,EAAZ;AACA,cAAA,IAAA;;AAEA,cAAI,KAAA,SAAA,CAAeH,KAAK,CAApB,cAAA,EAAJ,GAAI,CAAJ,EAA+C;AAC7CxM,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAc6Q,GAAG,CAAjB,MAAA,EACLA,GAAG,CADE,KAAA,EAEL,KAAA,UAAA,CAFF3M,IAEE,CAFK,CAAPA;AADF,WAAA,MAIO,IAAI,KAAA,SAAA,CAAewM,KAAK,CAApB,cAAA,EAAJ,GAAI,CAAJ,EAA+C;AACpDxM,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,GAAA,CAAc6Q,GAAG,CAAjB,MAAA,EACLA,GAAG,CADE,KAAA,EAEL,KAAA,UAAA,CAFF3M,IAEE,CAFK,CAAPA;AADK,WAAA,MAIA;AACLA,YAAAA,IAAI,GAAG,KAAPA,YAAO,EAAPA;AACD;;AAED,cAAI,CAAJ,SAAA,EAAgB;AACdA,YAAAA,IAAI,GAAG,KAAA,WAAA,CAAPA,IAAO,CAAPA;AACD;;AAED,iBAAA,IAAA;;;eAGF0R,Y,GAAAA,SAAAA,YAAAA,CAAAA,SAAAA,EAAwB;AACtB,cAAM/E,GAAG,GAAG,KAAZ,SAAY,EAAZ;AACA,cAAA,GAAA;AACA,cAAI3M,IAAI,GAAR,IAAA;;AAEA,cAAI,CAAJ,GAAA,EAAU;AACR,iBAAA,IAAA,CAAA,sCAAA;AADF,WAAA,MAEO,IAAI2M,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,YAAA,EAAqC;AAC1C5X,YAAAA,GAAG,GAAG+X,GAAG,CAAT/X,KAAAA;AADK,WAAA,MAEA,IAAI+X,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,SAAA,EAAkC;AACvC5X,YAAAA,GAAG,GAAG+c,QAAQ,CAAChF,GAAG,CAAJ,KAAA,EAAd/X,EAAc,CAAdA;AADK,WAAA,MAEA,IAAI+X,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,WAAA,EAAoC;AACzC5X,YAAAA,GAAG,GAAGgd,UAAU,CAACjF,GAAG,CAApB/X,KAAgB,CAAhBA;AADK,WAAA,MAEA,IAAI+X,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,aAAA,EAAsC;AAC3C,gBAAIG,GAAG,CAAHA,KAAAA,KAAJ,MAAA,EAA0B;AACxB/X,cAAAA,GAAG,GAAHA,IAAAA;AADF,aAAA,MAEO,IAAI+X,GAAG,CAAHA,KAAAA,KAAJ,OAAA,EAA2B;AAChC/X,cAAAA,GAAG,GAAHA,KAAAA;AADK,aAAA,MAEA;AACL,mBAAA,IAAA,CAAU,sBAAsB+X,GAAG,CAAnC,KAAA,EACEA,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;AATI,WAAA,MAUA,IAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,UAAA,EAAmC;AACxC5X,YAAAA,GAAG,GAAHA,IAAAA;AADK,WAAA,MAEA,IAAI+X,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,WAAA,EAAoC;AACzC5X,YAAAA,GAAG,GAAG,IAAA,MAAA,CAAW+X,GAAG,CAAHA,KAAAA,CAAX,IAAA,EAA2BA,GAAG,CAAHA,KAAAA,CAAjC/X,KAAM,CAANA;AACD;;AAED,cAAIA,GAAG,KAAP,SAAA,EAAuB;AACrBoL,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,OAAA,CAAkB6Q,GAAG,CAArB,MAAA,EAA8BA,GAAG,CAAjC,KAAA,EAAP3M,GAAO,CAAPA;AADF,WAAA,MAEO,IAAI2M,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,YAAA,EAAqC;AAC1CxM,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,MAAA,CAAiB6Q,GAAG,CAApB,MAAA,EAA6BA,GAAG,CAAhC,KAAA,EAAwCA,GAAG,CAAlD3M,KAAO,CAAPA;AADK,WAAA,MAEA;AACL;AACA;AACA,iBAAA,SAAA,CAAA,GAAA;AACAA,YAAAA,IAAI,GAAG,KAAPA,cAAO,EAAPA;AACD;;AAED,cAAI,CAAJ,SAAA,EAAgB;AACdA,YAAAA,IAAI,GAAG,KAAA,YAAA,CAAPA,IAAO,CAAPA;AACD;;AAED,cAAA,IAAA,EAAU;AACR,mBAAA,IAAA;AADF,WAAA,MAEO;AACL,kBAAM,KAAA,KAAA,CAAA,uBAAgC2M,GAAG,CAAnC,KAAA,EAA6CA,GAAG,CAAhD,MAAA,EAAyDA,GAAG,CAAlE,KAAM,CAAN;AACD;;;eAGHkF,e,GAAAA,SAAAA,eAAAA,GAAkB;AAChB,cAAMlF,GAAG,GAAG,KAAA,MAAA,CAAYH,KAAK,CAA7B,YAAY,CAAZ;AACA,cAAIzU,IAAI,GAAG4U,GAAG,CAAd,KAAA;;AAEA,iBAAO,KAAA,SAAA,CAAeH,KAAK,CAApB,cAAA,EAAP,GAAO,CAAP,EAAkD;AAChDzU,YAAAA,IAAI,IAAI,MAAM,KAAA,MAAA,CAAYyU,KAAK,CAAjB,YAAA,EAAdzU,KAAAA;AACD;;AAED,iBAAO,IAAI+D,KAAK,CAAT,MAAA,CAAiB6Q,GAAG,CAApB,MAAA,EAA6BA,GAAG,CAAhC,KAAA,EAAP,IAAO,CAAP;;;eAGFmF,e,GAAAA,SAAAA,eAAAA,CAAAA,IAAAA,EAAsB;AACpB,cAAI,KAAA,SAAA,GAAA,IAAA,KAA0BtF,KAAK,CAAnC,gBAAA,EAAsD;AACpD;AACA;AACA,gBAAMuF,IAAI,GAAG,KAAA,YAAA,CAAb,IAAa,CAAb;AACA,mBAAOA,IAAI,CAAJA,IAAAA,CAAP,QAAA;AACD;;AACD,iBAAA,EAAA;;;eAGFC,W,GAAAA,SAAAA,WAAAA,CAAAA,IAAAA,EAAkB;AAChB,iBAAO,KAAA,IAAA,CAAUxF,KAAK,CAAtB,UAAO,CAAP,EAAoC;AAClC,gBAAMzU,IAAI,GAAG,KAAb,eAAa,EAAb;AAEAiI,YAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,MAAA,CACL/D,IAAI,CADC,MAAA,EAELA,IAAI,CAFC,KAAA,EAAA,IAAA,EAIL,IAAI+D,KAAK,CAAT,QAAA,CACE/D,IAAI,CADN,MAAA,EAEEA,IAAI,CAFN,KAAA,EAGE,CAAA,IAAA,EAAA,MAAA,CAAc,KAAA,eAAA,CAPlBiI,IAOkB,CAAd,CAHF,CAJK,CAAPA;AAUD;;AAED,iBAAA,IAAA;;;eAGFiS,oB,GAAAA,SAAAA,oBAAAA,GAAuB;AACrB,cAAIC,SAAS,GAAG,KAAhB,SAAgB,EAAhB;;AACA,cAAI,CAAC,KAAA,UAAA,CAAL,QAAK,CAAL,EAAgC;AAC9B,iBAAA,IAAA,CAAA,uCAAA;AACD;;AAED,cAAMna,IAAI,GAAG,KAAb,eAAa,EAAb;AACA,cAAMsB,IAAI,GAAG,KAAA,eAAA,CAAb,IAAa,CAAb;AAEA,eAAA,oBAAA,CAA0B6Y,SAAS,CAAnC,KAAA;AACA,cAAMpE,IAAI,GAAG,IAAIhS,KAAK,CAAT,OAAA,CACX/D,IAAI,CADO,MAAA,EAEXA,IAAI,CAFO,KAAA,EAGX,KAAA,gBAAA,CAHF,WAGE,CAHW,CAAb;AAKA,eAAA,oBAAA;AAEA,cAAMiI,IAAI,GAAG,IAAIlE,KAAK,CAAT,MAAA,CACX/D,IAAI,CADO,MAAA,EAEXA,IAAI,CAFO,KAAA,EAAA,IAAA,EAIX,IAAI+D,KAAK,CAAT,QAAA,CACE/D,IAAI,CADN,MAAA,EAEEA,IAAI,CAFN,KAAA,EAGE,CAAA,IAAA,EAAA,MAAA,CAPJ,IAOI,CAHF,CAJW,CAAb;AAWA,iBAAO,IAAI+D,KAAK,CAAT,MAAA,CACL/D,IAAI,CADC,MAAA,EAELA,IAAI,CAFC,KAAA,EAGL,CAHF,IAGE,CAHK,CAAP;;;eAOFoa,c,GAAAA,SAAAA,cAAAA,GAAiB;AACf,cAAIxF,GAAG,GAAG,KAAV,SAAU,EAAV;AACA,cAAA,IAAA;;AAEA,kBAAQA,GAAG,CAAX,IAAA;AACE,iBAAKH,KAAK,CAAV,gBAAA;AACExM,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,KAAA,CAAgB6Q,GAAG,CAAnB,MAAA,EAA4BA,GAAG,CAAtC3M,KAAO,CAAPA;AACA;;AACF,iBAAKwM,KAAK,CAAV,kBAAA;AACExM,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,KAAA,CAAgB6Q,GAAG,CAAnB,MAAA,EAA4BA,GAAG,CAAtC3M,KAAO,CAAPA;AACA;;AACF,iBAAKwM,KAAK,CAAV,gBAAA;AACExM,cAAAA,IAAI,GAAG,IAAIlE,KAAK,CAAT,IAAA,CAAe6Q,GAAG,CAAlB,MAAA,EAA2BA,GAAG,CAArC3M,KAAO,CAAPA;AACA;;AACF;AACE,qBAAA,IAAA;AAXJ;;AAcA,iBAAA,CAAA,EAAU;AAAE;AACV,gBAAMjG,IAAI,GAAG,KAAA,SAAA,GAAb,IAAA;;AACA,gBAAIA,IAAI,KAAKyS,KAAK,CAAdzS,iBAAAA,IACFA,IAAI,KAAKyS,KAAK,CADZzS,mBAAAA,IAEFA,IAAI,KAAKyS,KAAK,CAFhB,iBAAA,EAEoC;AAClC,mBAAA,SAAA;AACA;AACD;;AAED,gBAAIxM,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,GAAJ,CAAA,EAA8B;AAC5B,kBAAI,CAAC,KAAA,IAAA,CAAUwM,KAAK,CAApB,WAAK,CAAL,EAAmC;AACjC,qBAAA,IAAA,CAAA,iDAAA,EACEG,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAGD;AACF;;AAED,gBAAI3M,IAAI,YAAYlE,KAAK,CAAzB,IAAA,EAAgC;AAC9B;AACA,kBAAMrG,GAAG,GAAG,KAFkB,YAElB,EAAZ,CAF8B,CAI9B;AACA;;AACA,kBAAI,CAAC,KAAA,IAAA,CAAU+W,KAAK,CAApB,WAAK,CAAL,EAAmC;AACjC,qBAAA,IAAA,CAAA,+CAAA,EACEG,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AAP4B,eAAA,CAY9B;;;AACA,kBAAMxY,KAAK,GAAG,KAAd,eAAc,EAAd;AACA6L,cAAAA,IAAI,CAAJA,QAAAA,CAAc,IAAIlE,KAAK,CAAT,IAAA,CAAerG,GAAG,CAAlB,MAAA,EACZA,GAAG,CADS,KAAA,EAAA,GAAA,EAAduK,KAAc,CAAdA;AAdF,aAAA,MAkBO;AACL;AACA,kBAAMqP,IAAI,GAAG,KAAb,eAAa,EAAb;AACArP,cAAAA,IAAI,CAAJA,QAAAA,CAAAA,IAAAA;AACD;AACF;;AAED,iBAAA,IAAA;;;eAGFoS,c,GAAAA,SAAAA,cAAAA,CAAAA,QAAAA,EAAAA,QAAAA,EAAmC;AACjC,cAAIzF,GAAG,GAAG,KAAV,SAAU,EAAV;;AACA,cAAI,CAAA,QAAA,IAAaA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAnC,gBAAA,EAAsD;AACpD,gBAAA,QAAA,EAAc;AACZ,qBAAA,IAAA;AADF,aAAA,MAEO;AACL,mBAAA,IAAA,CAAA,oBAAA,EAAgCG,GAAG,CAAnC,MAAA,EAA4CA,GAAG,CAA/C,KAAA;AACD;AACF;;AAED,cAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,gBAAA,EAAyC;AACvCG,YAAAA,GAAG,GAAG,KAANA,SAAM,EAANA;AACD;;AAED,cAAMtT,IAAI,GAAG,IAAIyC,KAAK,CAAT,QAAA,CAAmB6Q,GAAG,CAAtB,MAAA,EAA+BA,GAAG,CAA/C,KAAa,CAAb;AACA,cAAMzT,MAAM,GAAG,IAAI4C,KAAK,CAAT,WAAA,CAAsB6Q,GAAG,CAAzB,MAAA,EAAkCA,GAAG,CAApD,KAAe,CAAf;AACA,cAAI0F,UAAU,GAAd,KAAA;;AAEA,iBAAA,CAAA,EAAU;AAAE;AACV1F,YAAAA,GAAG,GAAG,KAANA,SAAM,EAANA;;AACA,gBAAI,CAAA,QAAA,IAAaA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAnC,iBAAA,EAAuD;AACrD,mBAAA,SAAA;AACA;AAFF,aAAA,MAGO,IAAI8F,QAAQ,IAAI3F,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAlC,eAAA,EAAoD;AACzD;AACD;;AAED,gBAAI6F,UAAU,IAAI,CAAC,KAAA,IAAA,CAAU7F,KAAK,CAAlC,WAAmB,CAAnB,EAAiD;AAC/C,mBAAA,IAAA,CAAA,iDAAA,EACEG,GAAG,CADL,MAAA,EAEEA,GAAG,CAFL,KAAA;AADF,aAAA,MAIO;AACL,kBAAMpT,GAAG,GAAG,KAAZ,eAAY,EAAZ;;AAEA,kBAAI,KAAA,SAAA,CAAeiT,KAAK,CAApB,cAAA,EAAJ,GAAI,CAAJ,EAA+C;AAC7CtT,gBAAAA,MAAM,CAANA,QAAAA,CACE,IAAI4C,KAAK,CAAT,IAAA,CAAevC,GAAG,CAAlB,MAAA,EACEA,GAAG,CADL,KAAA,EAAA,GAAA,EAGE,KAJJL,eAII,EAHF,CADFA;AADF,eAAA,MAOO;AACLG,gBAAAA,IAAI,CAAJA,QAAAA,CAAAA,GAAAA;AACD;AACF;;AAEDgZ,YAAAA,UAAU,GAAVA,IAAAA;AACD;;AAED,cAAInZ,MAAM,CAANA,QAAAA,CAAJ,MAAA,EAA4B;AAC1BG,YAAAA,IAAI,CAAJA,QAAAA,CAAAA,MAAAA;AACD;;AAED,iBAAA,IAAA;;;eAGFkZ,gB,GAAAA,SAAAA,gBAAAA,GAAgC;AAC9B,cAAMC,IAAI,GAAG,KAAb,aAAA;;AAD8B,eAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAZjL,UAAY,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAZA,YAAAA,UAAY,CAAA,IAAA,CAAZA,GAAY,SAAA,CAAA,IAAA,CAAZA;AAAY;;AAE9B,eAAA,aAAA,GAAA,UAAA;AAEA,cAAMvN,GAAG,GAAG,KAAZ,KAAY,EAAZ;AAEA,eAAA,aAAA,GAAA,IAAA;AACA,iBAAA,GAAA;;;eAGFyY,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,cAAA,GAAA;AACA,cAAMvN,GAAG,GAAT,EAAA;;AAEA,iBAAQyH,GAAG,GAAG,KAAd,SAAc,EAAd,EAAiC;AAC/B,gBAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,UAAA,EAAmC;AACjC,kBAAIkG,IAAI,GAAG/F,GAAG,CAAd,KAAA;AACA,kBAAMD,SAAS,GAAG,KAAlB,SAAkB,EAAlB;AACA,kBAAMiG,OAAO,GAAGjG,SAAS,IAAIA,SAAS,CAHL,KAGjC,CAHiC,CAKjC;AACA;AACA;;AACA,kBAAI,KAAJ,qBAAA,EAAgC;AAC9B;AACAgG,gBAAAA,IAAI,GAAGA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,EAAPA,EAAOA,CAAPA;AACA,qBAAA,qBAAA,GAAA,KAAA;AAX+B,eAAA,CAcjC;;;AACA,kBAAIhG,SAAS,KACTA,SAAS,CAATA,IAAAA,KAAmBF,KAAK,CAAxBE,iBAAAA,IACFiG,OAAO,CAAPA,MAAAA,CAAeA,OAAO,CAAPA,MAAAA,GAAfA,CAAAA,MADC,GAACjG,IAEDA,SAAS,CAATA,IAAAA,KAAmBF,KAAK,CAAxBE,oBAAAA,IACDiG,OAAO,CAAPA,MAAAA,CAAe,KAAA,MAAA,CAAA,IAAA,CAAA,cAAA,CAAfA,MAAAA,MAHC,GAACjG,IAKDA,SAAS,CAATA,IAAAA,KAAmBF,KAAK,CAAxBE,aAAAA,IACDiG,OAAO,CAAPA,MAAAA,CAAe,KAAA,MAAA,CAAA,IAAA,CAAA,aAAA,CAAfA,MAAAA,MAPF,GAAa,CAAb,EAQa;AACX;AACAD,gBAAAA,IAAI,GAAGA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,EAAPA,EAAOA,CAAPA;AACD;;AAEDxN,cAAAA,GAAG,CAAHA,IAAAA,CAAS,IAAIpJ,KAAK,CAAT,MAAA,CAAiB6Q,GAAG,CAApB,MAAA,EACPA,GAAG,CADI,KAAA,EAEP,CAAC,IAAI7Q,KAAK,CAAT,YAAA,CAAuB6Q,GAAG,CAA1B,MAAA,EACCA,GAAG,CADJ,KAAA,EAFHzH,IAEG,CAAD,CAFO,CAATA;AA5BF,aAAA,MAiCO,IAAIyH,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,iBAAA,EAA0C;AAC/C,mBAAA,qBAAA,GAAA,KAAA;AACA,kBAAMpM,CAAC,GAAG,KAAV,cAAU,EAAV;;AACA,kBAAI,CAAJ,CAAA,EAAQ;AACN;AACD;;AACD8E,cAAAA,GAAG,CAAHA,IAAAA,CAAAA,CAAAA;AANK,aAAA,MAOA,IAAIyH,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,oBAAA,EAA6C;AAClD,kBAAMoG,CAAC,GAAG,KAAV,eAAU,EAAV;AACA,mBAAA,qBAAA,GAAA,KAAA;AACA,mBAAA,uBAAA;AACA1N,cAAAA,GAAG,CAAHA,IAAAA,CAAS,IAAIpJ,KAAK,CAAT,MAAA,CAAiB6Q,GAAG,CAApB,MAAA,EAA6BA,GAAG,CAAhC,KAAA,EAAwC,CAAjDzH,CAAiD,CAAxC,CAATA;AAJK,aAAA,MAKA,IAAIyH,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,aAAA,EAAsC;AAC3C,mBAAA,qBAAA,GAA6BG,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,CAC3BA,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,GAAmB,KAAA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAnBA,MAAAA,GAD2BA,CAAAA,MAA7B,GAAA;AADK,aAAA,MAIA;AACL;AACA,mBAAA,IAAA,CAAU,oCACRA,GAAG,CADL,IAAA,EACYA,GAAG,CADf,MAAA,EACwBA,GAAG,CAD3B,KAAA;AAED;AACF;;AAED,iBAAA,GAAA;;;eAGFkG,K,GAAAA,SAAAA,KAAAA,GAAQ;AACN,iBAAO,IAAI/W,KAAK,CAAT,QAAA,CAAA,CAAA,EAAA,CAAA,EAAyB,KAAhC,UAAgC,EAAzB,CAAP;;;eAGFgX,W,GAAAA,SAAAA,WAAAA,GAAc;AACZ,iBAAO,IAAIhX,KAAK,CAAT,IAAA,CAAA,CAAA,EAAA,CAAA,EAAqB,KAA5B,UAA4B,EAArB,CAAP;;;;QArzCiBlE,G,GAyzCrB;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEAjE,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfkf,QAAAA,KADe,EAAA,SAAA,KAAA,CAAA,GAAA,EAAA,UAAA,EAAA,IAAA,EACc;AAC3B,cAAIna,CAAC,GAAG,IAAA,MAAA,CAAW8T,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAnB,IAAmBA,CAAX,CAAR;;AACA,cAAIvE,UAAU,KAAd,SAAA,EAA8B;AAC5BvP,YAAAA,CAAC,CAADA,UAAAA,GAAAA,UAAAA;AACD;;AACD,iBAAOA,CAAC,CAAR,WAAOA,EAAP;AANa,SAAA;AAQf+T,QAAAA,MAAM,EAAEA;AARO,OAAjB9Y;;;;;;;;;AC50CA,UAAMyD,GAAG,GAAGD,mBAAO,CAAnB,CAAmB,CAAnB;;AAEA,UAAI4b,eAAe,GAAnB,aAAA;AACA,UAAIC,UAAU,GAAd,uBAAA;AACA,UAAIC,QAAQ,GAAZ,YAAA;AAEA,UAAIC,WAAW,GAAf,IAAA;AACA,UAAIC,SAAS,GAAb,IAAA;AACA,UAAIC,cAAc,GAAlB,IAAA;AACA,UAAIC,YAAY,GAAhB,IAAA;AACA,UAAIC,aAAa,GAAjB,IAAA;AACA,UAAIC,WAAW,GAAf,IAAA;AAEA,UAAIC,YAAY,GAAhB,QAAA;AACA,UAAIC,gBAAgB,GAApB,YAAA;AACA,UAAIC,UAAU,GAAd,MAAA;AACA,UAAIC,iBAAiB,GAArB,aAAA;AACA,UAAIC,eAAe,GAAnB,WAAA;AACA,UAAIC,oBAAoB,GAAxB,gBAAA;AACA,UAAIC,kBAAkB,GAAtB,cAAA;AACA,UAAIC,aAAa,GAAjB,SAAA;AACA,UAAIC,gBAAgB,GAApB,YAAA;AACA,UAAIC,iBAAiB,GAArB,aAAA;AACA,UAAIC,kBAAkB,GAAtB,cAAA;AACA,UAAIC,mBAAmB,GAAvB,eAAA;AACA,UAAIC,gBAAgB,GAApB,YAAA;AACA,UAAIC,iBAAiB,GAArB,aAAA;AACA,UAAIC,cAAc,GAAlB,UAAA;AACA,UAAIC,WAAW,GAAf,OAAA;AACA,UAAIC,WAAW,GAAf,OAAA;AACA,UAAIC,WAAW,GAAf,OAAA;AACA,UAAIC,UAAU,GAAd,MAAA;AACA,UAAIC,SAAS,GAAb,KAAA;AACA,UAAIC,WAAW,GAAf,OAAA;AACA,UAAIC,aAAa,GAAjB,SAAA;AACA,UAAIC,UAAU,GAAd,MAAA;AACA,UAAIC,YAAY,GAAhB,QAAA;AACA,UAAIC,aAAa,GAAjB,SAAA;AACA,UAAIC,WAAW,GAAf,OAAA;;AAEA,eAAA,KAAA,CAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAA2C;AACzC,eAAO;AACLlb,UAAAA,IAAI,EADC,IAAA;AAEL5F,UAAAA,KAAK,EAFA,KAAA;AAGL+F,UAAAA,MAAM,EAHD,MAAA;AAILC,UAAAA,KAAK,EAAEA;AAJF,SAAP;AAMD;;UAEK+a,S;AACJ,iBAAA,SAAA,CAAA,GAAA,EAAA,IAAA,EAAuB;AACrB,eAAA,GAAA,GAAA,GAAA;AACA,eAAA,KAAA,GAAA,CAAA;AACA,eAAA,GAAA,GAAWjf,GAAG,CAAd,MAAA;AACA,eAAA,MAAA,GAAA,CAAA;AACA,eAAA,KAAA,GAAA,CAAA;AAEA,eAAA,OAAA,GAAA,KAAA;AAEA8R,UAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AAEA,cAAIoN,IAAI,GAAGpN,IAAI,CAAJA,IAAAA,IAAX,EAAA;AACA,eAAA,IAAA,GAAY;AACVmL,YAAAA,WAAW,EAAEiC,IAAI,CAAJA,UAAAA,IADH,WAAA;AAEVhC,YAAAA,SAAS,EAAEgC,IAAI,CAAJA,QAAAA,IAFD,SAAA;AAGV/B,YAAAA,cAAc,EAAE+B,IAAI,CAAJA,aAAAA,IAHN,cAAA;AAIV9B,YAAAA,YAAY,EAAE8B,IAAI,CAAJA,WAAAA,IAJJ,YAAA;AAKV7B,YAAAA,aAAa,EAAE6B,IAAI,CAAJA,YAAAA,IALL,aAAA;AAMV5B,YAAAA,WAAW,EAAE4B,IAAI,CAAJA,UAAAA,IAAmB5B;AANtB,WAAZ;AASA,eAAA,UAAA,GAAkB,CAAC,CAACxL,IAAI,CAAxB,UAAA;AACA,eAAA,YAAA,GAAoB,CAAC,CAACA,IAAI,CAA1B,YAAA;AACD;;;;eAED2E,S,GAAAA,SAAAA,SAAAA,GAAY;AACV,cAAIxS,MAAM,GAAG,KAAb,MAAA;AACA,cAAIC,KAAK,GAAG,KAAZ,KAAA;AACA,cAAA,GAAA;;AAEA,cAAI,KAAJ,OAAA,EAAkB;AAChB;AACA,gBAAIib,GAAG,GAAG,KAAV,OAAU,EAAV;;AAEA,gBAAI,KAAJ,UAAI,EAAJ,EAAuB;AACrB;AACA,qBAAA,IAAA;AAFF,aAAA,MAGO,IAAIA,GAAG,KAAHA,GAAAA,IAAeA,GAAG,KAAtB,IAAA,EAAiC;AACtC;AACA,qBAAOC,KAAK,CAAA,YAAA,EAAe,KAAA,YAAA,CAAf,GAAe,CAAf,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAFK,aAAA,MAGA,IAAK1I,GAAG,GAAG,KAAA,QAAA,CAAX,eAAW,CAAX,EAA4C;AACjD;AACA,qBAAO0I,KAAK,CAAA,gBAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAFK,aAAA,MAGA,IAAI,CAAC1I,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CAA3B,SAAO,CAAP,MACRA,GAAG,GAAG,KAAA,cAAA,CAAoB,MAAM,KAAA,IAAA,CAD5B,SACE,CADE,CAAJ,EACmD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAA,OAAA,GAAA,KAAA;;AACA,kBAAI,KAAJ,UAAA,EAAqB;AACnByI,gBAAAA,GAAG,GAAG,KAANA,OAAM,EAANA;;AACA,oBAAIA,GAAG,KAAP,IAAA,EAAkB;AAChB;AACA,uBAAA,OAAA;AAFF,iBAAA,MAGO,IAAIA,GAAG,KAAP,IAAA,EAAkB;AACvB;AACA,uBAAA,OAAA;AACAA,kBAAAA,GAAG,GAAG,KAANA,OAAM,EAANA;;AACA,sBAAIA,GAAG,KAAP,IAAA,EAAkB;AAChB,yBAAA,OAAA;AADF,mBAAA,MAEO;AACL;AACA,yBAAA,IAAA;AACD;AACF;AACF;;AACD,qBAAOC,KAAK,CAAA,eAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AA1BK,aAAA,MA2BA,IAAI,CAAC1I,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CAA3B,YAAO,CAAP,MACRA,GAAG,GAAG,KAAA,cAAA,CAAoB,MAAM,KAAA,IAAA,CAD5B,YACE,CADE,CAAJ,EACsD;AAC3D;AACA,mBAAA,OAAA,GAAA,KAAA;AACA,qBAAO0I,KAAK,CAAA,kBAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAJK,aAAA,MAKA,IAAID,GAAG,KAAHA,GAAAA,IAAe,KAAA,GAAA,CAAA,MAAA,CAAgB,KAAA,KAAA,GAAhB,CAAA,MAAnB,GAAA,EAA4D;AACjE;AACA,mBAAA,QAAA,CAFiE,CAEjE,EAFiE,CAIjE;;AACA,kBAAIE,SAAS,GAAb,EAAA;;AACA,qBAAO,CAAC,KAAR,UAAQ,EAAR,EAA2B;AACzB,oBAAI,KAAA,OAAA,OAAA,GAAA,IAA0B,KAAA,QAAA,OAA9B,IAAA,EAAwD;AACtD,uBAAA,OAAA;AACA;AAFF,iBAAA,MAGO;AACLA,kBAAAA,SAAS,IAAI,KAAbA,OAAa,EAAbA;AACA,uBAAA,OAAA;AACD;AAb8D,eAAA,CAgBjE;AACA;;;AACA,kBAAIC,cAAc,GAAG,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAArB,GAAqB,CAArB;AACA,kBAAIC,UAAU,GAAd,EAAA;;AACA,qBAAO,CAAC,KAAR,UAAQ,EAAR,EAA2B;AACzB,oBAAIC,cAAc,GAAGF,cAAc,CAAdA,OAAAA,CAAuB,KAAvBA,OAAuB,EAAvBA,MAA2C,CAAhE,CAAA;;AACA,oBAAA,cAAA,EAAoB;AAClBC,kBAAAA,UAAU,IAAI,KAAdA,OAAc,EAAdA;AACA,uBAAA,OAAA;AAFF,iBAAA,MAGO;AACL;AACD;AACF;;AAED,qBAAOH,KAAK,CAAA,WAAA,EAAc;AACxBvH,gBAAAA,IAAI,EADoB,SAAA;AAExB4H,gBAAAA,KAAK,EAAEF;AAFiB,eAAd,EAAA,MAAA,EAAZ,KAAY,CAAZ;AA9BK,aAAA,MAkCA,IAAIxC,UAAU,CAAVA,OAAAA,CAAAA,GAAAA,MAA4B,CAAhC,CAAA,EAAoC;AACzC;AACA,mBAAA,OAAA;AACA,kBAAI2C,UAAU,GAAG,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAjB,IAAiB,CAAjB;AACA,kBAAIC,UAAU,GAAGR,GAAG,GAAG,KAAvB,OAAuB,EAAvB;AACA,kBAAA,IAAA;;AAEA,kBAAIhe,GAAG,CAAHA,OAAAA,CAAAA,UAAAA,EAAAA,UAAAA,MAAwC,CAA5C,CAAA,EAAgD;AAC9C,qBAAA,OAAA;AACAge,gBAAAA,GAAG,GAF2C,UAE9CA,CAF8C,CAI9C;;AACA,oBAAIhe,GAAG,CAAHA,OAAAA,CAAAA,UAAAA,EAAwBwe,UAAU,GAAG,KAArCxe,OAAqC,EAArCA,MAAyD,CAA7D,CAAA,EAAiE;AAC/Dge,kBAAAA,GAAG,GAAGQ,UAAU,GAAG,KAAnBR,OAAmB,EAAnBA;AACA,uBAAA,OAAA;AACD;AACF;;AAED,sBAAA,GAAA;AACE,qBAAA,GAAA;AACErb,kBAAAA,IAAI,GAAJA,gBAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,iBAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,kBAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,mBAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,gBAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,iBAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,WAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,WAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,WAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,IAAI,GAAJA,UAAAA;AACA;;AACF;AACEA,kBAAAA,IAAI,GAAJA,cAAAA;AAhCJ;;AAmCA,qBAAOsb,KAAK,CAAA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AArDK,aAAA,MAsDA;AACL;AACA;AACA1I,cAAAA,GAAG,GAAG,KAAA,aAAA,CAAmBoG,eAAe,GAAxCpG,UAAM,CAANA;;AAEA,kBAAIA,GAAG,CAAHA,KAAAA,CAAJ,eAAIA,CAAJ,EAAgC;AAC9B,oBAAI,KAAA,OAAA,OAAJ,GAAA,EAA4B;AAC1B,uBAAA,OAAA;;AACA,sBAAIkJ,GAAG,GAAG,KAAA,QAAA,CAAV,QAAU,CAAV;;AACA,yBAAOR,KAAK,CAAA,WAAA,EAAc1I,GAAG,GAAHA,GAAAA,GAAd,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAHF,iBAAA,MAIO;AACL,yBAAO0I,KAAK,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AACD;AAPH,eAAA,MAQO,IAAI1I,GAAG,CAAHA,KAAAA,CAAJ,gBAAIA,CAAJ,EAAiC;AACtC,uBAAO0I,KAAK,CAAA,aAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AADK,eAAA,MAEA,IAAI1I,GAAG,KAAP,MAAA,EAAoB;AACzB,uBAAO0I,KAAK,CAAA,UAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AACF;AACR;AACA;AACA;AACA;AACA;AACA;AARe,eAAA,MASA,IAAI1I,GAAG,KAAP,MAAA,EAAoB;AACzB,uBAAO0I,KAAK,CAAA,UAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AADK,eAAA,MAEA,IAAA,GAAA,EAAS;AACd,uBAAOA,KAAK,CAAA,YAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AADK,eAAA,MAEA;AACL,sBAAM,IAAA,KAAA,CAAU,qCAAhB,GAAM,CAAN;AACD;AACF;AApKH,WAAA,MAqKO;AACL;AACA;AACA;AACA,gBAAIS,UAAU,GAAI,KAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA,IAClB,KAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CADkB,CAClB,CADkB,GAElB,KAAA,IAAA,CAAA,aAAA,CAAA,MAAA,CAFkB,CAElB,CAFkB,GAGlB,KAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAHA,CAGA,CAHA;;AAKA,gBAAI,KAAJ,UAAI,EAAJ,EAAuB;AACrB,qBAAA,IAAA;AADF,aAAA,MAEO,IAAI,CAACnJ,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CAAA,WAAA,GAA3B,GAAO,CAAP,MACRA,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CADtB,WACE,CADE,CAAJ,EAC+C;AACpD,mBAAA,OAAA,GAAA,IAAA;AACA,qBAAO0I,KAAK,CAAA,iBAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAHK,aAAA,MAIA,IAAI,CAAC1I,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CAAA,cAAA,GAA3B,GAAO,CAAP,MACRA,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CADtB,cACE,CADE,CAAJ,EACkD;AACvD,mBAAA,OAAA,GAAA,IAAA;AACA,qBAAO0I,KAAK,CAAA,oBAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAHK,aAAA,MAIA;AACL1I,cAAAA,GAAG,GAAHA,EAAAA;AACA,kBAAA,IAAA;AACA,kBAAIoJ,SAAS,GAAb,KAAA;;AAEA,kBAAI,KAAA,QAAA,CAAc,KAAA,IAAA,CAAlB,aAAI,CAAJ,EAA4C;AAC1CA,gBAAAA,SAAS,GAATA,IAAAA;AACApJ,gBAAAA,GAAG,GAAG,KAAA,cAAA,CAAoB,KAAA,IAAA,CAA1BA,aAAM,CAANA;AAPG,eAAA,CAUL;AACA;AACA;AACA;AACA;AACA;;;AACA,qBAAO,CAAC+F,IAAI,GAAG,KAAA,aAAA,CAAR,UAAQ,CAAR,MAAP,IAAA,EAAyD;AACvD/F,gBAAAA,GAAG,IAAHA,IAAAA;;AAEA,oBAAI,CAAC,KAAA,QAAA,CAAc,KAAA,IAAA,CAAd,WAAA,KACH,KAAA,QAAA,CAAc,KAAA,IAAA,CADX,cACH,CADG,IAEH,KAAA,QAAA,CAAc,KAAA,IAAA,CAFZ,aAEF,CAFE,KAGF,CAHF,SAAA,EAGc;AACZ,sBAAI,KAAA,YAAA,IACF,KAAA,QAAA,CAAc,KAAA,IAAA,CADZ,WACF,CADE,IAEF,KAAA,KAAA,GAFE,CAAA,IAGF,KAAA,KAAA,IAAcA,GAAG,CAHnB,MAAA,EAG4B;AAC1B,wBAAIqJ,QAAQ,GAAGrJ,GAAG,CAAHA,KAAAA,CAAU,CAAC,KAA1B,KAAeA,CAAf;;AACA,wBAAI,QAAA,IAAA,CAAJ,QAAI,CAAJ,EAA4B;AAC1B;AACAA,sBAAAA,GAAG,GAAGA,GAAG,CAAHA,KAAAA,CAAAA,CAAAA,EAAa,CAAC,KAApBA,KAAMA,CAANA;;AACA,0BAAI,CAACA,GAAG,CAAR,MAAA,EAAiB;AACf;AACA;AACA,+BAAO,KAAP,SAAO,EAAP;AACD;AACF;AAdS,mBAAA,CAgBZ;;;AACA;AApBF,iBAAA,MAqBO,IAAI,KAAA,QAAA,CAAc,KAAA,IAAA,CAAlB,WAAI,CAAJ,EAA0C;AAC/C,sBAAI,CAAJ,SAAA,EAAgB;AACd,0BAAM,IAAA,KAAA,CAAN,2BAAM,CAAN;AACD;;AACDA,kBAAAA,GAAG,IAAI,KAAA,cAAA,CAAoB,KAAA,IAAA,CAA3BA,WAAO,CAAPA;AACA;AALK,iBAAA,MAMA;AACL;AACA;AACAA,kBAAAA,GAAG,IAAI,KAAPA,OAAO,EAAPA;AACA,uBAAA,OAAA;AACD;AACF;;AAED,kBAAI+F,IAAI,KAAJA,IAAAA,IAAJ,SAAA,EAAgC;AAC9B,sBAAM,IAAA,KAAA,CAAN,0CAAM,CAAN;AACD;;AAED,qBAAO2C,KAAK,CAACU,SAAS,GAAA,aAAA,GAAV,UAAA,EAAA,GAAA,EAAA,MAAA,EAAZ,KAAY,CAAZ;AAID;AACF;;;eAGHE,Y,GAAAA,SAAAA,YAAAA,CAAAA,SAAAA,EAAwB;AACtB,eAAA,OAAA;AAEA,cAAIhgB,GAAG,GAAP,EAAA;;AAEA,iBAAO,CAAC,KAAD,UAAC,EAAD,IAAsB,KAAA,OAAA,OAA7B,SAAA,EAA2D;AACzD,gBAAImf,GAAG,GAAG,KAAV,OAAU,EAAV;;AAEA,gBAAIA,GAAG,KAAP,IAAA,EAAkB;AAChB,mBAAA,OAAA;;AACA,sBAAQ,KAAR,OAAQ,EAAR;AACE,qBAAA,GAAA;AACEnf,kBAAAA,GAAG,IAAHA,IAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,GAAG,IAAHA,IAAAA;AACA;;AACF,qBAAA,GAAA;AACEA,kBAAAA,GAAG,IAAHA,IAAAA;AACA;;AACF;AACEA,kBAAAA,GAAG,IAAI,KAAPA,OAAO,EAAPA;AAXJ;;AAaA,mBAAA,OAAA;AAfF,aAAA,MAgBO;AACLA,cAAAA,GAAG,IAAHA,GAAAA;AACA,mBAAA,OAAA;AACD;AACF;;AAED,eAAA,OAAA;AACA,iBAAA,GAAA;;;eAGFigB,Q,GAAAA,SAAAA,QAAAA,CAAAA,GAAAA,EAAc;AACZ,cAAI,KAAA,KAAA,GAAajgB,GAAG,CAAhB,MAAA,GAA0B,KAA9B,GAAA,EAAwC;AACtC,mBAAA,IAAA;AACD;;AAED,cAAIkgB,CAAC,GAAG,KAAA,GAAA,CAAA,KAAA,CAAe,KAAf,KAAA,EAA2B,KAAA,KAAA,GAAalgB,GAAG,CAAnD,MAAQ,CAAR;AACA,iBAAOkgB,CAAC,KAAR,GAAA;;;eAGFC,c,GAAAA,SAAAA,cAAAA,CAAAA,GAAAA,EAAoB;AAClB,cAAI,KAAA,QAAA,CAAJ,GAAI,CAAJ,EAAwB;AACtB,iBAAA,QAAA,CAAcngB,GAAG,CAAjB,MAAA;AACA,mBAAA,GAAA;AACD;;AACD,iBAAA,IAAA;;;eAGFogB,a,GAAAA,SAAAA,aAAAA,CAAAA,UAAAA,EAA0B;AACxB;AACA;AACA,iBAAO,KAAA,gBAAA,CAAA,IAAA,EAA4BC,UAAU,IAA7C,EAAO,CAAP;;;eAGFC,Q,GAAAA,SAAAA,QAAAA,CAAAA,UAAAA,EAAqB;AACnB;AACA;AACA,iBAAO,KAAA,gBAAA,CAAA,KAAA,EAAP,UAAO,CAAP;;;eAGFC,gB,GAAAA,SAAAA,gBAAAA,CAAAA,YAAAA,EAAAA,UAAAA,EAA2C;AACzC;AACA;AACA;AAEA,cAAI,KAAJ,UAAI,EAAJ,EAAuB;AACrB,mBAAA,IAAA;AACD;;AAED,cAAIC,KAAK,GAAGH,UAAU,CAAVA,OAAAA,CAAmB,KATU,OASV,EAAnBA,CAAZ,CATyC,CAWzC;;AACA,cAAKI,YAAY,IAAID,KAAK,KAAK,CAA3B,CAACC,IACF,CAAA,YAAA,IAAiBD,KAAK,KAAK,CAD9B,CAAA,EACmC;AACjC,gBAAIE,CAAC,GAAG,KAAR,OAAQ,EAAR;AACA,iBAFiC,OAEjC,GAFiC,CAIjC;AACA;;AACA,gBAAI9K,GAAG,GAAGyK,UAAU,CAAVA,OAAAA,CAAmB,KAA7B,OAA6B,EAAnBA,CAAV;;AAEA,mBAAO,CAAEI,YAAY,IAAI7K,GAAG,KAAK,CAAzB,CAAC6K,IACN,CAAA,YAAA,IAAiB7K,GAAG,KAAK,CADrB,CAAA,KAC6B,CAAC,KADrC,UACqC,EADrC,EACwD;AACtD8K,cAAAA,CAAC,IAAI,KAALA,OAAK,EAALA;AACA,mBAAA,OAAA;AAEA9K,cAAAA,GAAG,GAAGyK,UAAU,CAAVA,OAAAA,CAAmB,KAAzBzK,OAAyB,EAAnByK,CAANzK;AACD;;AAED,mBAAA,CAAA;AACD;;AAED,iBAAA,EAAA;;;eAGF+K,a,GAAAA,SAAAA,aAAAA,CAAAA,KAAAA,EAAqB;AACnB,cAAI9G,OAAO,GAAG,KAAA,UAAA,GAAA,KAAA,CAAd,KAAc,CAAd;;AACA,cAAI,CAAJ,OAAA,EAAc;AACZ,mBAAA,IAAA;AAHiB,WAAA,CAMnB;;;AACA,eAAA,QAAA,CAAcA,OAAO,CAAPA,CAAO,CAAPA,CAAd,MAAA;AAEA,iBAAA,OAAA;;;eAGF+G,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,iBAAO,KAAA,KAAA,IAAc,KAArB,GAAA;;;eAGFC,Q,GAAAA,SAAAA,QAAAA,CAAAA,CAAAA,EAAY;AACV,eAAK,IAAI7hB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,CAAA,EAAuBA,CAAvB,EAAA,EAA4B;AAC1B,iBAAA,OAAA;AACD;;;eAGH8hB,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,eAAA,KAAA;;AAEA,cAAI,KAAA,QAAA,OAAJ,IAAA,EAA8B;AAC5B,iBAAA,MAAA;AACA,iBAAA,KAAA,GAAA,CAAA;AAFF,WAAA,MAGO;AACL,iBAAA,KAAA;AACD;;;eAGHC,K,GAAAA,SAAAA,KAAAA,CAAAA,CAAAA,EAAS;AACP,eAAK,IAAI/hB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,CAAA,EAAuBA,CAAvB,EAAA,EAA4B;AAC1B,iBAAA,IAAA;AACD;;;eAGHgiB,I,GAAAA,SAAAA,IAAAA,GAAO;AACL,eAAA,KAAA;;AAEA,cAAI,KAAA,OAAA,OAAJ,IAAA,EAA6B;AAC3B,iBAAA,MAAA;AAEA,gBAAIpL,GAAG,GAAG,KAAA,GAAA,CAAA,WAAA,CAAA,IAAA,EAA2B,KAAA,KAAA,GAArC,CAAU,CAAV;;AACA,gBAAIA,GAAG,KAAK,CAAZ,CAAA,EAAgB;AACd,mBAAA,KAAA,GAAa,KAAb,KAAA;AADF,aAAA,MAEO;AACL,mBAAA,KAAA,GAAa,KAAA,KAAA,GAAb,GAAA;AACD;AARH,WAAA,MASO;AACL,iBAAA,KAAA;AACD;UAGH;;;eACAqL,O,GAAAA,SAAAA,OAAAA,GAAU;AACR,cAAI,CAAC,KAAL,UAAK,EAAL,EAAwB;AACtB,mBAAO,KAAA,GAAA,CAAA,MAAA,CAAgB,KAAvB,KAAO,CAAP;AACD;;AACD,iBAAA,EAAA;UAGF;;;eACAC,U,GAAAA,SAAAA,UAAAA,GAAa;AACX,cAAI,CAAC,KAAL,UAAK,EAAL,EAAwB;AACtB,mBAAO,KAAA,GAAA,CAAA,MAAA,CAAgB,KAAvB,KAAO,CAAP;AACD;;AACD,iBAAA,EAAA;;;eAGFC,Q,GAAAA,SAAAA,QAAAA,GAAW;AACT,iBAAO,KAAA,GAAA,CAAA,MAAA,CAAgB,KAAA,KAAA,GAAvB,CAAO,CAAP;;;;;;AAIJzjB,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACf0jB,QAAAA,GADe,EAAA,SAAA,GAAA,CAAA,GAAA,EAAA,IAAA,EACA;AACb,iBAAO,IAAA,SAAA,CAAA,GAAA,EAAP,IAAO,CAAP;AAFa,SAAA;AAKf7D,QAAAA,YAAY,EALG,YAAA;AAMfC,QAAAA,gBAAgB,EAND,gBAAA;AAOfC,QAAAA,UAAU,EAPK,UAAA;AAQfC,QAAAA,iBAAiB,EARF,iBAAA;AASfC,QAAAA,eAAe,EATA,eAAA;AAUfC,QAAAA,oBAAoB,EAVL,oBAAA;AAWfC,QAAAA,kBAAkB,EAXH,kBAAA;AAYfC,QAAAA,aAAa,EAZE,aAAA;AAafC,QAAAA,gBAAgB,EAbD,gBAAA;AAcfC,QAAAA,iBAAiB,EAdF,iBAAA;AAefC,QAAAA,kBAAkB,EAfH,kBAAA;AAgBfC,QAAAA,mBAAmB,EAhBJ,mBAAA;AAiBfC,QAAAA,gBAAgB,EAjBD,gBAAA;AAkBfC,QAAAA,iBAAiB,EAlBF,iBAAA;AAmBfC,QAAAA,cAAc,EAnBC,cAAA;AAoBfC,QAAAA,WAAW,EApBI,WAAA;AAqBfC,QAAAA,WAAW,EArBI,WAAA;AAsBfC,QAAAA,WAAW,EAtBI,WAAA;AAuBfC,QAAAA,UAAU,EAvBK,UAAA;AAwBfC,QAAAA,SAAS,EAxBM,SAAA;AAyBfC,QAAAA,WAAW,EAzBI,WAAA;AA0BfC,QAAAA,aAAa,EA1BE,aAAA;AA2BfC,QAAAA,UAAU,EA3BK,UAAA;AA4BfC,QAAAA,YAAY,EA5BG,YAAA;AA6BfC,QAAAA,aAAa,EA7BE,aAAA;AA8BfC,QAAAA,WAAW,EAAEA;AA9BE,OAAjBthB;;;;;;;;;;;;;;;;;;;;;;;;;ACzfA,UAAM2jB,MAAM,GAAGngB,mBAAO,CAAtB,CAAsB,CAAtB;;qBAC4BA,mBAAO,CAAA,EAAA,C;UAA5ByR,iB,YAAAA,iB;;UAEDD,S;;;AACJ,iBAAA,SAAA,CAAA,OAAA,EAAA,IAAA,EAA2B;AAAA,cAAA,KAAA;;AACzB,UAAA,KAAA,GAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KAAA,IAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAe4O,OAAO,IAAtB,GAAA;AACAxP,UAAAA,IAAI,GAAGA,IAAI,IAHc,EAGzBA,CAHyB,CAKzB;AACA;AACA;AACA;;AACA,UAAA,KAAA,CAAA,QAAA,GAAgB,CAAC,CAACA,IAAI,CATG,QASzB,CATyB,CAWzB;AACA;AACA;AACA;AACA;;AACA,UAAA,KAAA,CAAA,KAAA,GAAa,CAAC,CAACA,IAAI,CAAnB,KAAA;AAhByB,iBAAA,KAAA;AAiB1B;;;;eAEDpP,O,GAAAA,SAAAA,OAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAkB;AAChB,gBAAM,IAAA,KAAA,CAAN,mDAAM,CAAN;;;eAGF6e,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAoB;AAAA,cAAA,MAAA,GAAA,IAAA;;AAClB,cAAIC,QAAQ,GAAG,KAAf,QAAA;AACA,cAAA,MAAA;AACA,eAAA,KAAA,CAAW,KAAA,OAAA,GAAA,GAAA,GAAX,IAAA,EAAsC,UAAA,GAAA,EAAA,GAAA,EAAc;AAClD,gBAAA,GAAA,EAAS;AACP,kBAAA,EAAA,EAAQ;AACNlhB,gBAAAA,EAAE,CAAC3C,GAAG,CAAN2C,OAAE,CAAFA;AADF,eAAA,MAEO,IAAI3C,GAAG,CAAHA,MAAAA,KAAJ,GAAA,EAAwB;AAC7BwB,gBAAAA,MAAM,GAANA,IAAAA;AADK,eAAA,MAEA;AACL,sBAAMxB,GAAG,CAAT,OAAA;AACD;AAPH,aAAA,MAQO;AACLwB,cAAAA,MAAM,GAAG;AACP2V,gBAAAA,GAAG,EADI,GAAA;AAEPrW,gBAAAA,IAAI,EAFG,IAAA;AAGPgjB,gBAAAA,OAAO,EAAE,CAACD;AAHH,eAATriB;;AAKA,cAAA,MAAI,CAAJ,IAAA,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA;;AACA,kBAAA,EAAA,EAAQ;AACNmB,gBAAAA,EAAE,CAAA,IAAA,EAAFA,MAAE,CAAFA;AACD;AACF;AAtBe,WAGlB,EAHkB,CAyBlB;AACA;AACA;;AACA,iBAAA,MAAA;;;eAGFohB,K,GAAAA,SAAAA,KAAAA,CAAAA,GAAAA,EAAAA,EAAAA,EAAe;AACb;AACA,cAAI,OAAA,MAAA,KAAJ,WAAA,EAAmC;AACjC,kBAAM,IAAA,KAAA,CAAN,yCAAM,CAAN;AACD;;AAED,cAAMC,IAAI,GAAG,IAAb,cAAa,EAAb;AACA,cAAIC,OAAO,GAAX,IAAA;;AAEAD,UAAAA,IAAI,CAAJA,kBAAAA,GAA0B,YAAM;AAC9B,gBAAIA,IAAI,CAAJA,UAAAA,KAAAA,CAAAA,IAAJ,OAAA,EAAsC;AACpCC,cAAAA,OAAO,GAAPA,KAAAA;;AACA,kBAAID,IAAI,CAAJA,MAAAA,KAAAA,CAAAA,IAAqBA,IAAI,CAAJA,MAAAA,KAAzB,GAAA,EAA8C;AAC5CrhB,gBAAAA,EAAE,CAAA,IAAA,EAAOqhB,IAAI,CAAbrhB,YAAE,CAAFA;AADF,eAAA,MAEO;AACLA,gBAAAA,EAAE,CAAC;AACDuhB,kBAAAA,MAAM,EAAEF,IAAI,CADX,MAAA;AAEDG,kBAAAA,OAAO,EAAEH,IAAI,CAACI;AAFb,iBAAD,CAAFzhB;AAID;AACF;AAXHqhB,WAAAA;;AAcAK,UAAAA,GAAG,IAAI,CAACA,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,MAAqB,CAArBA,CAAAA,GAAAA,GAAAA,GAAD,GAAA,IAAA,IAAA,GACN,IAAA,IAAA,GADDA,OACC,EADDA;AAGAL,UAAAA,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,EAAAA,GAAAA,EAAsB,KAAtBA,KAAAA;AACAA,UAAAA,IAAI,CAAJA,IAAAA;;;;QAlFoBN,M;;AAsFxB3jB,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfgV,QAAAA,SAAS,EADM,SAAA;AAEfC,QAAAA,iBAAiB,EAAEA;AAFJ,OAAjBjV;;;;;;;;;ACzFA,UAAMyD,GAAG,GAAGD,mBAAO,CAAnB,CAAmB,CAAnB;;qBACgCA,mBAAO,CAAA,CAAA,C;UAAhCgS,W,YAAAA,W;UAAa+C,Q,YAAAA,Q;;AACpB,UAAMoL,MAAM,GAAGngB,mBAAO,CAAtB,CAAsB,CAAtB;;AACA,UAAM+gB,OAAO,GAAG/gB,mBAAO,CAAvB,EAAuB,CAAvB;;AACA,UAAMghB,UAAU,GAAGhhB,mBAAO,CAA1B,EAA0B,CAA1B;;AACA,UAAMqR,QAAQ,GAAGrR,mBAAO,CAAxB,CAAwB,CAAxB;;AACA,UAAMkJ,MAAM,GAAGlJ,mBAAO,CAAtB,CAAsB,CAAtB;;AACA,UAAMqV,KAAK,GAAGrV,mBAAO,CAArB,CAAqB,CAArB;;AACA,UAAMihB,OAAO,GAAGjhB,mBAAO,CAAvB,CAAuB,CAAvB;;AACA,UAAM2E,KAAK,GAAG3E,mBAAO,CAArB,CAAqB,CAArB;;AACA,UAAMkhB,kBAAkB,GAAGlhB,mBAAO,CAAlC,EAAkC,CAAlC,C,CAEA;;;AACA,UAAA,CAAA;;AAEA,eAAA,SAAA,CAAA,aAAA,EAAA,IAAA,EAAwC;AACtC4Q,QAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;;AACA,YAAI3Q,GAAG,CAAHA,QAAAA,CAAJ,aAAIA,CAAJ,EAAiC;AAC/B2Q,UAAAA,IAAI,GAAJA,aAAAA;AACAuQ,UAAAA,aAAa,GAAbA,IAAAA;AACD;;AAED,YAAA,cAAA;;AACA,YAAIJ,OAAO,CAAX,gBAAA,EAA8B;AAC5BK,UAAAA,cAAc,GAAG,IAAIL,OAAO,CAAX,gBAAA,CAAA,aAAA,EAA4C;AAC3DM,YAAAA,KAAK,EAAEzQ,IAAI,CADgD,KAAA;AAE3D2P,YAAAA,OAAO,EAAE3P,IAAI,CAAC2P;AAF6C,WAA5C,CAAjBa;AADF,SAAA,MAKO,IAAIL,OAAO,CAAX,SAAA,EAAuB;AAC5BK,UAAAA,cAAc,GAAG,IAAIL,OAAO,CAAX,SAAA,CAAA,aAAA,EAAqC;AACpDT,YAAAA,QAAQ,EAAE1P,IAAI,CAAJA,GAAAA,IAAYA,IAAI,CAAJA,GAAAA,CAD8B,QAAA;AAEpD0Q,YAAAA,KAAK,EAAE1Q,IAAI,CAAJA,GAAAA,IAAYA,IAAI,CAAJA,GAAAA,CAAS0Q;AAFwB,WAArC,CAAjBF;AAID;;AAED3F,QAAAA,CAAC,GAAG,IAAA,WAAA,CAAA,cAAA,EAAJA,IAAI,CAAJA;;AAEA,YAAI7K,IAAI,IAAIA,IAAI,CAAhB,OAAA,EAA0B;AACxB6K,UAAAA,CAAC,CAADA,OAAAA,CAAU7K,IAAI,CAAd6K,OAAAA;AACD;;AAED,eAAA,CAAA;AACD;;AAEDjf,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfwV,QAAAA,WAAW,EADI,WAAA;AAEf+C,QAAAA,QAAQ,EAFO,QAAA;AAGfoL,QAAAA,MAAM,EAHS,MAAA;AAIf5O,QAAAA,gBAAgB,EAAEwP,OAAO,CAJV,gBAAA;AAKfQ,QAAAA,iBAAiB,EAAER,OAAO,CALX,iBAAA;AAMftP,QAAAA,iBAAiB,EAAEsP,OAAO,CANX,iBAAA;AAOfvP,QAAAA,SAAS,EAAEuP,OAAO,CAPH,SAAA;AAQf1P,QAAAA,QAAQ,EARO,QAAA;AASfnI,QAAAA,MAAM,EATS,MAAA;AAUfmM,QAAAA,KAAK,EAVU,KAAA;AAWf4L,QAAAA,OAAO,EAXQ,OAAA;AAYfhhB,QAAAA,GAAG,EAZY,GAAA;AAaf0E,QAAAA,KAAK,EAbU,KAAA;AAcfuc,QAAAA,kBAAkB,EAdH,kBAAA;AAefM,QAAAA,SAAS,EAfM,SAAA;AAgBfC,QAAAA,KAhBe,EAAA,SAAA,KAAA,GAgBP;AACNhG,UAAAA,CAAC,GAADA,SAAAA;AAjBa,SAAA;AAmBfhL,QAAAA,OAnBe,EAAA,SAAA,OAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,YAAA,EAmBuB;AACpC,cAAI,CAAJ,CAAA,EAAQ;AACN+Q,YAAAA,SAAS;AACV;;AACD,iBAAO,IAAA,QAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAP,YAAO,CAAP;AAvBa,SAAA;AAyBfzN,QAAAA,MAzBe,EAAA,SAAA,MAAA,CAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAyBO;AACpB,cAAI,CAAJ,CAAA,EAAQ;AACNyN,YAAAA,SAAS;AACV;;AAED,iBAAO/F,CAAC,CAADA,MAAAA,CAAAA,IAAAA,EAAAA,GAAAA,EAAP,EAAOA,CAAP;AA9Ba,SAAA;AAgCfvH,QAAAA,YAhCe,EAAA,SAAA,YAAA,CAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAgCY;AACzB,cAAI,CAAJ,CAAA,EAAQ;AACNsN,YAAAA,SAAS;AACV;;AAED,iBAAO/F,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAP,EAAOA,CAAP;AArCa,SAAA;AAuCfuF,QAAAA,UAAU,EAAGA,UAAD,GAAeA,UAAU,CAAzB,UAAA,GAvCG,SAAA;AAwCfU,QAAAA,gBAAgB,EAAGV,UAAD,GAAeA,UAAU,CAAzB,gBAAA,GAA6CW;AAxChD,OAAjBnlB;;;;;;;oBC5CA;;AACA,UAAA,OAAA,GAAc,mBAAO,CAAC,EAAD,CAArB,C,CACA;;;AACA,UAAA,SAAA,GAAA,EAAA,C,CACA;AACA;;AACA,UAAA,aAAA,GAAA,EAAA;AACA,UAAA,iBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA,eAAA,CAAA;;AAEA,eAAA,eAAA,GAAA;AACA,YAAA,aAAA,CAAA,MAAA,EAAA;AACA,gBAAA,aAAA,CAAA,KAAA,EAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,IAAA;;AACA,eAAA,IAAA,CAAA,IAAA,EAAA;AACA,YAAA,OAAA;;AACA,YAAA,SAAA,CAAA,MAAA,EAAA;AACA,UAAA,OAAA,GAAA,SAAA,CAAA,GAAA,EAAA;AACK,SAFL,MAEK;AACL,UAAA,OAAA,GAAA,IAAA,OAAA,EAAA;AACA;;AACA,QAAA,OAAA,CAAA,IAAA,GAAA,IAAA;AACA,QAAA,OAAA,CAAA,OAAA,CAAA;AACA,O,CAEA;AACA;;;AACA,eAAA,OAAA,GAAA;AACA,aAAA,IAAA,GAAA,IAAA;AACA,O,CAEA;AACA;;;AACA,MAAA,OAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACA,YAAA;AACA,eAAA,IAAA,CAAA,IAAA;AACK,SAFL,CAEK,OAAA,KAAA,EAAA;AACL,cAAA,IAAA,CAAA,OAAA,EAAA;AACA;AACA;AACA;AACA,YAAA,IAAA,CAAA,OAAA,CAAA,KAAA;AACS,WALT,MAKS;AACT;AACA;AACA;AACA,YAAA,aAAA,CAAA,IAAA,CAAA,KAAA;AACA,YAAA,iBAAA;AACA;AACK,SAfL,SAeK;AACL,eAAA,IAAA,GAAA,IAAA;AACA,UAAA,SAAA,CAAA,SAAA,CAAA,MAAA,CAAA,GAAA,IAAA;AACA;AACA,OApBA;;;;;;;;;AC7CA;;AAAA,iBAAA,MAAA,EAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,OAAA;;AACA,iBAAA,OAAA,CAAA,IAAA,EAAA;AACA,cAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA,YAAA,YAAA;AACA,YAAA,QAAA,GAAA,IAAA;AACA,WAJA,CAKA;;;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,IAAA;AACA;;AAEA,YAAA,KAAA,GAAA,EAAA,CAtBA,CAuBA;AACA;;AACA,YAAA,QAAA,GAAA,KAAA,CAzBA,CA0BA;AACA;AACA;;AACA,YAAA,YAAA,CA7BA,CA8BA;AACA;AACA;;AACA,YAAA,KAAA,GAAA,CAAA,CAjCA,CAkCA;AACA;AACA;;AACA,YAAA,QAAA,GAAA,IAAA,CArCA,CAuCA;AACA;AACA;AACA;AACA;AACA;;AACA,iBAAA,KAAA,GAAA;AACA,iBAAA,KAAA,GAAA,KAAA,CAAA,MAAA,EAAA;AACA,gBAAA,YAAA,GAAA,KAAA,CADA,CAEA;AACA;;AACA,YAAA,KAAA,GAAA,KAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,YAAA,CAAA,CAAA,IAAA,GALA,CAMA;AACA;AACA;AACA;AACA;;AACA,gBAAA,KAAA,GAAA,QAAA,EAAA;AACA;AACA;AACA,mBAAA,IAAA,IAAA,GAAA,CAAA,EAAA,SAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,EAAgE,IAAA,GAAA,SAAhE,EAAkF,IAAA,EAAlF,EAAkF;AAClF,gBAAA,KAAA,CAAA,IAAA,CAAA,GAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA;AACA;;AACA,cAAA,KAAA,CAAA,MAAA,IAAA,KAAA;AACA,cAAA,KAAA,GAAA,CAAA;AACA;AACA;;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,UAAA,QAAA,GAAA,KAAA;AACA,SAtEA,CAwEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;;AACA,YAAA,KAAA,GAAA,OAAA,MAAA,KAAA,WAAA,GAAA,MAAA,GAAA,IAAA;AACA,YAAA,uBAAA,GAAA,KAAA,CAAA,gBAAA,IAAA,KAAA,CAAA,sBAAA,CAnFA,CAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAA,OAAA,uBAAA,KAAA,UAAA,EAAA;AACA,UAAA,YAAA,GAAA,mCAAA,CAAA,KAAA,CAAA,CADA,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,SA9BD,MA8BC;AACD,UAAA,YAAA,GAAA,wBAAA,CAAA,KAAA,CAAA;AACA,SAhIA,CAkIA;AACA;AACA;AACA;AACA;;;AACA,QAAA,OAAA,CAAA,YAAA,GAAA,YAAA,CAvIA,CAyIA;AACA;;AACA,iBAAA,mCAAA,CAAA,QAAA,EAAA;AACA,cAAA,MAAA,GAAA,CAAA;AACA,cAAA,QAAA,GAAA,IAAA,uBAAA,CAAA,QAAA,CAAA;AACA,cAAA,IAAA,GAAA,QAAA,CAAA,cAAA,CAAA,EAAA,CAAA;AACA,UAAA,QAAA,CAAA,OAAA,CAAA,IAAA,EAAA;AAA4B,YAAA,aAAA,EAAA;AAA5B,WAAA;AACA,iBAAA,SAAA,WAAA,GAAA;AACA,YAAA,MAAA,GAAA,CAAA,MAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,MAAA;AACA,WAHA;AAIA,SApJA,CAsJA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,iBAAA,wBAAA,CAAA,QAAA,EAAA;AACA,iBAAA,SAAA,WAAA,GAAA;AACA;AACA;AACA;AACA;AACA,gBAAA,aAAA,GAAA,UAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CALA,CAMA;AACA;AACA;;AACA,gBAAA,cAAA,GAAA,WAAA,CAAA,WAAA,EAAA,EAAA,CAAA;;AAEA,qBAAA,WAAA,GAAA;AACA;AACA;AACA,cAAA,YAAA,CAAA,aAAA,CAAA;AACA,cAAA,aAAA,CAAA,cAAA,CAAA;AACA,cAAA,QAAA;AACA;AACA,WAlBA;AAmBA,SAlNA,CAoNA;AACA;AACA;;;AACA,QAAA,OAAA,CAAA,wBAAA,GAAA,wBAAA,CAvNA,CAyNA;AACA;AACA;AACA;AACA;AACA;;;OA9NA,E,IAAA,C,OAAA,E,uBAAA,CAAA;;;;;;;ACAA,UAAA,CAAA,C,CAEA;;AACA,MAAA,CAAA,GAAA,YAAA;AACA,eAAA,IAAA;AACC,OAFD,EAAA;;AAIA,UAAA;AACA;AACA,QAAA,CAAA,GAAA,CAAA,IAAA,QAAA,CAAA,aAAA,CAAA,EAAA,IAAA,CAAA,GAAA,IAAA,EAAA,MAAA,CAAA;AACC,OAHD,CAGC,OAAA,CAAA,EAAA;AACD;AACA,YAAA,OAAA,MAAA,KAAA,QAAA,EACA,CAAA,GAAA,MAAA;AACA,O,CAEA;AACA;AACA;;;AAEA,MAAA,MAAA,CAAA,OAAA,GAAA,CAAA;;;;;;;ACpBA,UAAA,4BAAA,EAAA,6BAAA,C,CAAA;;;AACA,OAAA,UAAA,OAAA,EAAA;AACA;;AAEA,YAAA,WAAA,GAAA,YAAA;AACA,cAAA,IAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA;;AACA,cAAA,OAAA,IAAA,CAAA,CAAA,CAAA,KAAA,UAAA,EAAA;AACA,YAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACA;AACA,SALA;;AAOA,YAAA,YAAA,GAAA,UAAA,EAAA,EAAA;AACA,cAAA,OAAA,YAAA,KAAA,UAAA,EAAA;AACA,YAAA,YAAA,CAAA,EAAA,CAAA;AACK,WAFL,MAEK,IAAA,OAAA,OAAA,KAAA,WAAA,IAAA,OAAA,CAAA,QAAA,EAAA;AACL,YAAA,OAAA,CAAA,QAAA,CAAA,EAAA;AACK,WAFA,MAEA;AACL,YAAA,UAAA,CAAA,EAAA,EAAA,CAAA,CAAA;AACA;AACA,SARA;;AAUA,YAAA,YAAA,GAAA,UAAA,KAAA,EAAA;AACA,cAAA,YAAA,GAAA,UAAA,KAAA,EAAA;AACA,gBAAA,EAAA,GAAA,YAAA;AACA,kBAAA,KAAA,CAAA,MAAA,EAAA;AACA,gBAAA,KAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA;AACA;;AACA,qBAAA,EAAA,CAAA,IAAA,EAAA;AACA,aALA;;AAMA,YAAA,EAAA,CAAA,IAAA,GAAA,YAAA;AACA,qBAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,YAAA,CAAA,KAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,aAFA;;AAGA,mBAAA,EAAA;AACA,WAXA;;AAYA,iBAAA,YAAA,CAAA,CAAA,CAAA;AACA,SAdA;;AAgBA,YAAA,QAAA,GAAA,KAAA,CAAA,OAAA,IAAA,UAAA,UAAA,EAAA;AACA,iBAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,MAAA,gBAAA;AACA,SAFA;;AAIA,YAAA,SAAA,GAAA,UAAA,KAAA,EAAA,QAAA,EAAA,UAAA,EAAA;AACA,cAAA,QAAA,GAAA,UAAA,GAAA,YAAA,GAAA,WAAA;;AACA,UAAA,QAAA,GAAA,QAAA,IAAA,YAAA,CAAA,CAAA;;AACA,cAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA;AACA,gBAAA,GAAA,GAAA,IAAA,KAAA,CAAA,2DAAA,CAAA;AACA,mBAAA,QAAA,CAAA,GAAA,CAAA;AACA;;AACA,cAAA,CAAA,KAAA,CAAA,MAAA,EAAA;AACA,mBAAA,QAAA,EAAA;AACA;;AACA,cAAA,YAAA,GAAA,UAAA,QAAA,EAAA;AACA,mBAAA,UAAA,GAAA,EAAA;AACA,kBAAA,GAAA,EAAA;AACA,gBAAA,QAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA;;AACA,gBAAA,QAAA,GAAA,YAAA,CAAA,CAAA;AACS,eAHT,MAGS;AACT,oBAAA,IAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AACA,oBAAA,IAAA,GAAA,QAAA,CAAA,IAAA,EAAA;;AACA,oBAAA,IAAA,EAAA;AACA,kBAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AACW,iBAFX,MAEW;AACX,kBAAA,IAAA,CAAA,IAAA,CAAA,QAAA;AACA;;AACA,gBAAA,QAAA,CAAA,YAAA;AACA,kBAAA,QAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA;AACW,iBAFX,CAAA;AAGA;AACA,aAhBA;AAiBA,WAlBA;;AAmBA,UAAA,YAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA;AACA,SA9BA;;AAgCA,YAAM,IAAN,EAAiD;AAC7C,YAAA,4BAAA,GAAO,EAAP,EAAS,6BAAA,GAAE,YAAA;AACf,mBAAA,SAAA;AACK,WAFQ,CAER,KAFQ,CAER,OAFQ,EAER,4BAFQ,CAAT,EAEC,6BAAA,KAAA,SAAA,KAAA,MAAA,CAAA,OAAA,GAAA,6BAAA,CAFD,EAD6C,CAG1C;AACJ,SAJH,MAIG,IAAA,OAAA,MAAA,KAAA,WAAA,IAAA,MAAA,CAAA,OAAA,EAAA;AACH,UAAA,MAAA,CAAA,OAAA,GAAA,SAAA,CADG,CAC4B;AAC5B,SAFA,MAEA;AACH,UAAA,OAAA,CAAA,SAAA,GAAA,SAAA,CADG,CAC+B;AAClC;AACC,OAjFD,EAiFC,IAjFD;;;;;;;;oBCDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,UAAA,CAAA,GAAA,OAAA,OAAA,KAAA,QAAA,GAAA,OAAA,GAAA,IAAA;AACA,UAAA,YAAA,GAAA,CAAA,IAAA,OAAA,CAAA,CAAA,KAAA,KAAA,UAAA,GACA,CAAA,CAAA,KADA,GAEA,SAAA,YAAA,CAAA,MAAA,EAAA,QAAA,EAAA,IAAA,EAAA;AACA,eAAA,QAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,IAAA,CAAA;AACA,OAJA;AAMA,UAAA,cAAA;;AACA,UAAA,CAAA,IAAA,OAAA,CAAA,CAAA,OAAA,KAAA,UAAA,EAAA;AACA,QAAA,cAAA,GAAA,CAAA,CAAA,OAAA;AACC,OAFD,MAEC,IAAA,MAAA,CAAA,qBAAA,EAAA;AACD,QAAA,cAAA,GAAA,SAAA,cAAA,CAAA,MAAA,EAAA;AACA,iBAAA,MAAA,CAAA,mBAAA,CAAA,MAAA,EACA,MADA,CACA,MAAA,CAAA,qBAAA,CAAA,MAAA,CADA,CAAA;AAEA,SAHA;AAIC,OALA,MAKA;AACD,QAAA,cAAA,GAAA,SAAA,cAAA,CAAA,MAAA,EAAA;AACA,iBAAA,MAAA,CAAA,mBAAA,CAAA,MAAA,CAAA;AACA,SAFA;AAGA;;AAEA,eAAA,kBAAA,CAAA,OAAA,EAAA;AACA,YAAA,OAAA,IAAA,OAAA,CAAA,IAAA,EAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA;;AAEA,UAAA,WAAA,GAAA,MAAA,CAAA,KAAA,IAAA,SAAA,WAAA,CAAA,KAAA,EAAA;AACA,eAAA,KAAA,KAAA,KAAA;AACA,OAFA;;AAIA,eAAA,YAAA,GAAA;AACA,QAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,YAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,IAAA,GAAA,IAAA,C,CAEA;;AACA,MAAA,YAAA,CAAA,YAAA,GAAA,YAAA;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,OAAA,GAAA,SAAA;AACA,MAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAA,CAAA;AACA,MAAA,YAAA,CAAA,SAAA,CAAA,aAAA,GAAA,SAAA,C,CAEA;AACA;;AACA,UAAA,mBAAA,GAAA,EAAA;;AAEA,eAAA,aAAA,CAAA,QAAA,EAAA;AACA,YAAA,OAAA,QAAA,KAAA,UAAA,EAAA;AACA,gBAAA,IAAA,SAAA,CAAA,qEAAA,OAAA,QAAA,CAAA;AACA;AACA;;AAEA,MAAA,MAAA,CAAA,cAAA,CAAA,YAAA,EAAA,qBAAA,EAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,GAAA,EAAA,YAAA;AACA,iBAAA,mBAAA;AACG,SAJH;AAKA,QAAA,GAAA,EAAA,UAAA,GAAA,EAAA;AACA,cAAA,OAAA,GAAA,KAAA,QAAA,IAAA,GAAA,GAAA,CAAA,IAAA,WAAA,CAAA,GAAA,CAAA,EAAA;AACA,kBAAA,IAAA,UAAA,CAAA,oGAAA,GAAA,GAAA,GAAA,CAAA;AACA;;AACA,UAAA,mBAAA,GAAA,GAAA;AACA;AAVA,OAAA;;AAaA,MAAA,YAAA,CAAA,IAAA,GAAA,YAAA;AAEA,YAAA,KAAA,OAAA,KAAA,SAAA,IACA,KAAA,OAAA,KAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,OADA,EACA;AACA,eAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,eAAA,YAAA,GAAA,CAAA;AACA;;AAEA,aAAA,aAAA,GAAA,KAAA,aAAA,IAAA,SAAA;AACA,OATA,C,CAWA;AACA;;;AACA,MAAA,YAAA,CAAA,SAAA,CAAA,eAAA,GAAA,SAAA,eAAA,CAAA,CAAA,EAAA;AACA,YAAA,OAAA,CAAA,KAAA,QAAA,IAAA,CAAA,GAAA,CAAA,IAAA,WAAA,CAAA,CAAA,CAAA,EAAA;AACA,gBAAA,IAAA,UAAA,CAAA,kFAAA,CAAA,GAAA,GAAA,CAAA;AACA;;AACA,aAAA,aAAA,GAAA,CAAA;AACA,eAAA,IAAA;AACA,OANA;;AAQA,eAAA,gBAAA,CAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,aAAA,KAAA,SAAA,EACA,OAAA,YAAA,CAAA,mBAAA;AACA,eAAA,IAAA,CAAA,aAAA;AACA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,eAAA,GAAA,SAAA,eAAA,GAAA;AACA,eAAA,gBAAA,CAAA,IAAA,CAAA;AACA,OAFA;;AAIA,MAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,SAAA,IAAA,CAAA,IAAA,EAAA;AACA,YAAA,IAAA,GAAA,EAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAiB,CAAA,GAAA,SAAA,CAAA,MAAjB,EAAuC,CAAA,EAAvC,EAAuC,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;;AACvC,YAAA,OAAA,GAAA,IAAA,KAAA,OAAA;AAEA,YAAA,MAAA,GAAA,KAAA,OAAA;AACA,YAAA,MAAA,KAAA,SAAA,EACA,OAAA,GAAA,OAAA,IAAA,MAAA,CAAA,KAAA,KAAA,SAAA,CADA,KAEA,IAAA,CAAA,OAAA,EACA,OAAA,KAAA,CATA,CAWA;;AACA,YAAA,OAAA,EAAA;AACA,cAAA,EAAA;AACA,cAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EACA,EAAA,GAAA,IAAA,CAAA,CAAA,CAAA;;AACA,cAAA,EAAA,YAAA,KAAA,EAAA;AACA;AACA;AACA,kBAAA,EAAA,CAHA,CAGe;AACf,WARA,CASA;;;AACA,cAAA,GAAA,GAAA,IAAA,KAAA,CAAA,sBAAA,EAAA,GAAA,OAAA,EAAA,CAAA,OAAA,GAAA,GAAA,GAAA,EAAA,CAAA,CAAA;AACA,UAAA,GAAA,CAAA,OAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAZA,CAYc;AACd;;AAEA,YAAA,OAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AAEA,YAAA,OAAA,KAAA,SAAA,EACA,OAAA,KAAA;;AAEA,YAAA,OAAA,OAAA,KAAA,UAAA,EAAA;AACA,UAAA,YAAA,CAAA,OAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACG,SAFH,MAEG;AACH,cAAA,GAAA,GAAA,OAAA,CAAA,MAAA;AACA,cAAA,SAAA,GAAA,UAAA,CAAA,OAAA,EAAA,GAAA,CAAA;;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAmB,CAAA,GAAA,GAAnB,EAA4B,EAAA,CAA5B,EACA,YAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACA;;AAEA,eAAA,IAAA;AACA,OA1CA;;AA4CA,eAAA,YAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAA;AACA,YAAA,CAAA;AACA,YAAA,MAAA;AACA,YAAA,QAAA;AAEA,QAAA,aAAA,CAAA,QAAA,CAAA;AAEA,QAAA,MAAA,GAAA,MAAA,CAAA,OAAA;;AACA,YAAA,MAAA,KAAA,SAAA,EAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,UAAA,MAAA,CAAA,YAAA,GAAA,CAAA;AACG,SAHH,MAGG;AACH;AACA;AACA,cAAA,MAAA,CAAA,WAAA,KAAA,SAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,aAAA,EAAA,IAAA,EACA,QAAA,CAAA,QAAA,GAAA,QAAA,CAAA,QAAA,GAAA,QADA,EADA,CAIA;AACA;;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,OAAA;AACA;;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AACA;;AAEA,YAAA,QAAA,KAAA,SAAA,EAAA;AACA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,GAAA,QAAA;AACA,YAAA,MAAA,CAAA,YAAA;AACG,SAJH,MAIG;AACH,cAAA,OAAA,QAAA,KAAA,UAAA,EAAA;AACA;AACA,YAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,GACA,OAAA,GAAA,CAAA,QAAA,EAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,QAAA,CADA,CAFA,CAIA;AACK,WALL,MAKK,IAAA,OAAA,EAAA;AACL,YAAA,QAAA,CAAA,OAAA,CAAA,QAAA;AACK,WAFA,MAEA;AACL,YAAA,QAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAVG,CAYH;;;AACA,UAAA,CAAA,GAAA,gBAAA,CAAA,MAAA,CAAA;;AACA,cAAA,CAAA,GAAA,CAAA,IAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA,MAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,GAAA,IAAA,CADA,CAEA;AACA;;AACA,gBAAA,CAAA,GAAA,IAAA,KAAA,CAAA,iDACA,QAAA,CAAA,MADA,GACA,GADA,GACA,MAAA,CAAA,IAAA,CADA,GACA,aADA,GAEA,0CAFA,GAGA,gBAHA,CAAA;AAIA,YAAA,CAAA,CAAA,IAAA,GAAA,6BAAA;AACA,YAAA,CAAA,CAAA,OAAA,GAAA,MAAA;AACA,YAAA,CAAA,CAAA,IAAA,GAAA,IAAA;AACA,YAAA,CAAA,CAAA,KAAA,GAAA,QAAA,CAAA,MAAA;AACA,YAAA,kBAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,eAAA,MAAA;AACA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAA,SAAA,WAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AACA,eAAA,YAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA;AACA,OAFA;;AAIA,MAAA,YAAA,CAAA,SAAA,CAAA,EAAA,GAAA,YAAA,CAAA,SAAA,CAAA,WAAA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,eAAA,GACA,SAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AACA,eAAA,YAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,CAAA;AACA,OAHA;;AAKA,eAAA,WAAA,GAAA;AACA,YAAA,CAAA,KAAA,KAAA,EAAA;AACA,eAAA,MAAA,CAAA,cAAA,CAAA,KAAA,IAAA,EAAA,KAAA,MAAA;AACA,eAAA,KAAA,GAAA,IAAA;AACA,cAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EACA,OAAA,KAAA,QAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA;AACA,iBAAA,KAAA,QAAA,CAAA,KAAA,CAAA,KAAA,MAAA,EAAA,SAAA,CAAA;AACA;AACA;;AAEA,eAAA,SAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA;AACA,YAAA,KAAA,GAAA;AAAe,UAAA,KAAA,EAAA,KAAf;AAAe,UAAA,MAAA,EAAA,SAAf;AAAe,UAAA,MAAA,EAAA,MAAf;AAAe,UAAA,IAAA,EAAA,IAAf;AAAe,UAAA,QAAA,EAAA;AAAf,SAAA;AACA,YAAA,OAAA,GAAA,WAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,QAAA,OAAA,CAAA,QAAA,GAAA,QAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,OAAA;AACA,eAAA,OAAA;AACA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,SAAA,IAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AACA,QAAA,aAAA,CAAA,QAAA,CAAA;AACA,aAAA,EAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,CAAA;AACA,eAAA,IAAA;AACA,OAJA;;AAMA,MAAA,YAAA,CAAA,SAAA,CAAA,mBAAA,GACA,SAAA,mBAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AACA,QAAA,aAAA,CAAA,QAAA,CAAA;AACA,aAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,CAAA;AACA,eAAA,IAAA;AACA,OALA,C,CAOA;;;AACA,MAAA,YAAA,CAAA,SAAA,CAAA,cAAA,GACA,SAAA,cAAA,CAAA,IAAA,EAAA,QAAA,EAAA;AACA,YAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,gBAAA;AAEA,QAAA,aAAA,CAAA,QAAA,CAAA;AAEA,QAAA,MAAA,GAAA,KAAA,OAAA;AACA,YAAA,MAAA,KAAA,SAAA,EACA,OAAA,IAAA;AAEA,QAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,KAAA,SAAA,EACA,OAAA,IAAA;;AAEA,YAAA,IAAA,KAAA,QAAA,IAAA,IAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,cAAA,EAAA,KAAA,YAAA,KAAA,CAAA,EACA,KAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CADA,KAEA;AACA,mBAAA,MAAA,CAAA,IAAA,CAAA;AACA,gBAAA,MAAA,CAAA,cAAA,EACA,KAAA,IAAA,CAAA,gBAAA,EAAA,IAAA,EAAA,IAAA,CAAA,QAAA,IAAA,QAAA;AACA;AACO,SARP,MAQO,IAAA,OAAA,IAAA,KAAA,UAAA,EAAA;AACP,UAAA,QAAA,GAAA,CAAA,CAAA;;AAEA,eAAA,CAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAiC,CAAA,IAAA,CAAjC,EAAyC,CAAA,EAAzC,EAAyC;AACzC,gBAAA,IAAA,CAAA,CAAA,CAAA,KAAA,QAAA,IAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,cAAA,gBAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,QAAA;AACA,cAAA,QAAA,GAAA,CAAA;AACA;AACA;AACA;;AAEA,cAAA,QAAA,GAAA,CAAA,EACA,OAAA,IAAA;AAEA,cAAA,QAAA,KAAA,CAAA,EACA,IAAA,CAAA,KAAA,GADA,KAEA;AACA,YAAA,SAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACA;AAEA,cAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EACA,MAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA,CAAA,CAAA;AAEA,cAAA,MAAA,CAAA,cAAA,KAAA,SAAA,EACA,KAAA,IAAA,CAAA,gBAAA,EAAA,IAAA,EAAA,gBAAA,IAAA,QAAA;AACA;;AAEA,eAAA,IAAA;AACA,OAlDA;;AAoDA,MAAA,YAAA,CAAA,SAAA,CAAA,GAAA,GAAA,YAAA,CAAA,SAAA,CAAA,cAAA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,kBAAA,GACA,SAAA,kBAAA,CAAA,IAAA,EAAA;AACA,YAAA,SAAA,EAAA,MAAA,EAAA,CAAA;AAEA,QAAA,MAAA,GAAA,KAAA,OAAA;AACA,YAAA,MAAA,KAAA,SAAA,EACA,OAAA,IAAA,CALA,CAOA;;AACA,YAAA,MAAA,CAAA,cAAA,KAAA,SAAA,EAAA;AACA,cAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,iBAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,iBAAA,YAAA,GAAA,CAAA;AACS,WAHT,MAGS,IAAA,MAAA,CAAA,IAAA,CAAA,KAAA,SAAA,EAAA;AACT,gBAAA,EAAA,KAAA,YAAA,KAAA,CAAA,EACA,KAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CADA,KAGA,OAAA,MAAA,CAAA,IAAA,CAAA;AACA;;AACA,iBAAA,IAAA;AACA,SAnBA,CAqBA;;;AACA,YAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,cAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA;AACA,cAAA,GAAA;;AACA,eAAA,CAAA,GAAA,CAAA,EAAmB,CAAA,GAAA,IAAA,CAAA,MAAnB,EAAoC,EAAA,CAApC,EAAoC;AACpC,YAAA,GAAA,GAAA,IAAA,CAAA,CAAA,CAAA;AACA,gBAAA,GAAA,KAAA,gBAAA,EAAA;AACA,iBAAA,kBAAA,CAAA,GAAA;AACA;;AACA,eAAA,kBAAA,CAAA,gBAAA;AACA,eAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,eAAA,YAAA,GAAA,CAAA;AACA,iBAAA,IAAA;AACA;;AAEA,QAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA;;AAEA,YAAA,OAAA,SAAA,KAAA,UAAA,EAAA;AACA,eAAA,cAAA,CAAA,IAAA,EAAA,SAAA;AACO,SAFP,MAEO,IAAA,SAAA,KAAA,SAAA,EAAA;AACP;AACA,eAAA,CAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAsC,CAAA,IAAA,CAAtC,EAA8C,CAAA,EAA9C,EAA8C;AAC9C,iBAAA,cAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,eAAA,IAAA;AACA,OAjDA;;AAmDA,eAAA,UAAA,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,OAAA;AAEA,YAAA,MAAA,KAAA,SAAA,EACA,OAAA,EAAA;AAEA,YAAA,UAAA,GAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,UAAA,KAAA,SAAA,EACA,OAAA,EAAA;AAEA,YAAA,OAAA,UAAA,KAAA,UAAA,EACA,OAAA,MAAA,GAAA,CAAA,UAAA,CAAA,QAAA,IAAA,UAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAEA,eAAA,MAAA,GACA,eAAA,CAAA,UAAA,CADA,GACA,UAAA,CAAA,UAAA,EAAA,UAAA,CAAA,MAAA,CADA;AAEA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,SAAA,GAAA,SAAA,SAAA,CAAA,IAAA,EAAA;AACA,eAAA,UAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACA,OAFA;;AAIA,MAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAA,SAAA,YAAA,CAAA,IAAA,EAAA;AACA,eAAA,UAAA,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,CAAA;AACA,OAFA;;AAIA,MAAA,YAAA,CAAA,aAAA,GAAA,UAAA,OAAA,EAAA,IAAA,EAAA;AACA,YAAA,OAAA,OAAA,CAAA,aAAA,KAAA,UAAA,EAAA;AACA,iBAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA;AACG,SAFH,MAEG;AACH,iBAAA,aAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA;AACA;AACA,OANA;;AAQA,MAAA,YAAA,CAAA,SAAA,CAAA,aAAA,GAAA,aAAA;;AACA,eAAA,aAAA,CAAA,IAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,OAAA;;AAEA,YAAA,MAAA,KAAA,SAAA,EAAA;AACA,cAAA,UAAA,GAAA,MAAA,CAAA,IAAA,CAAA;;AAEA,cAAA,OAAA,UAAA,KAAA,UAAA,EAAA;AACA,mBAAA,CAAA;AACK,WAFL,MAEK,IAAA,UAAA,KAAA,SAAA,EAAA;AACL,mBAAA,UAAA,CAAA,MAAA;AACA;AACA;;AAEA,eAAA,CAAA;AACA;;AAEA,MAAA,YAAA,CAAA,SAAA,CAAA,UAAA,GAAA,SAAA,UAAA,GAAA;AACA,eAAA,KAAA,YAAA,GAAA,CAAA,GAAA,cAAA,CAAA,KAAA,OAAA,CAAA,GAAA,EAAA;AACA,OAFA;;AAIA,eAAA,UAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAiB,CAAA,GAAA,CAAjB,EAAwB,EAAA,CAAxB,EACA,IAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;;AACA,eAAA,IAAA;AACA;;AAEA,eAAA,SAAA,CAAA,IAAA,EAAA,KAAA,EAAA;AACA,eAAQ,KAAA,GAAA,CAAA,GAAA,IAAA,CAAA,MAAR,EAAiC,KAAA,EAAjC,EACA,IAAA,CAAA,KAAA,CAAA,GAAA,IAAA,CAAA,KAAA,GAAA,CAAA,CAAA;;AACA,QAAA,IAAA,CAAA,GAAA;AACA;;AAEA,eAAA,eAAA,CAAA,GAAA,EAAA;AACA,YAAA,GAAA,GAAA,IAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAiB,CAAA,GAAA,GAAA,CAAA,MAAjB,EAAiC,EAAA,CAAjC,EAAiC;AACjC,UAAA,GAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,QAAA,IAAA,GAAA,CAAA,CAAA,CAAA;AACA;;AACA,eAAA,GAAA;AACA;;AAEA,eAAA,IAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACA,eAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,mBAAA,aAAA,GAAA;AACA,gBAAA,aAAA,KAAA,SAAA,EAAA;AACA,cAAA,OAAA,CAAA,cAAA,CAAA,OAAA,EAAA,aAAA;AACA;;AACA,YAAA,OAAA,CAAA,GAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA;AACA;;AAAA;AACA,cAAA,aAAA,CAPA,CASA;AACA;AACA;AACA;AACA;AACA;;AACA,cAAA,IAAA,KAAA,OAAA,EAAA;AACA,YAAA,aAAA,GAAA,SAAA,aAAA,CAAA,GAAA,EAAA;AACA,cAAA,OAAA,CAAA,cAAA,CAAA,IAAA,EAAA,aAAA;AACA,cAAA,MAAA,CAAA,GAAA,CAAA;AACA,aAHA;;AAKA,YAAA,OAAA,CAAA,IAAA,CAAA,OAAA,EAAA,aAAA;AACA;;AAEA,UAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,aAAA;AACG,SAzBH,CAAA;AA0BA;;;;;;;;;;ACzdA,UAAImI,KAAK,GAAG3E,mBAAO,CAAnB,CAAmB,CAAnB;;AACA,UAAIC,GAAG,GAAGD,mBAAO,CAAjB,CAAiB,CAAjB;;AAEA,UAAI4hB,GAAG,GAAP,CAAA;;AACA,eAAA,MAAA,GAAkB;AAChB,eAAO,UAAUA,GAAjB,EAAA;QAGF;;;AACA,eAAA,MAAA,CAAA,GAAA,EAAA,IAAA,EAA2B;AACzB,YAAIzhB,GAAG,GAAP,IAAA;;AACA,aAAK,IAAIrC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGoB,GAAG,CAAvB,MAAA,EAAgCpB,CAAhC,EAAA,EAAqC;AACnC,cAAMqF,IAAI,GAAGnE,IAAI,CAACE,GAAG,CAArB,CAAqB,CAAJ,CAAjB;;AAEA,cAAIiE,IAAI,KAAKjE,GAAG,CAAhB,CAAgB,CAAhB,EAAqB;AACnB,gBAAI,CAAJ,GAAA,EAAU;AACRiB,cAAAA,GAAG,GAAGjB,GAAG,CAATiB,KAAMjB,EAANiB;AACD;;AAEDA,YAAAA,GAAG,CAAHA,CAAG,CAAHA,GAAAA,IAAAA;AACD;AACF;;AAED,eAAOA,GAAG,IAAV,GAAA;AACD;;AAED,eAAA,IAAA,CAAA,GAAA,EAAA,IAAA,EAAA,UAAA,EAAqC;AACnC,YAAI,EAAE0hB,GAAG,YAAYld,KAAK,CAA1B,IAAI,CAAJ,EAAkC;AAChC,iBAAA,GAAA;AACD;;AAED,YAAI,CAAJ,UAAA,EAAiB;AACf,cAAMmd,IAAI,GAAG9iB,IAAI,CAAjB,GAAiB,CAAjB;;AAEA,cAAI8iB,IAAI,IAAIA,IAAI,KAAhB,GAAA,EAA0B;AACxB,mBAAA,IAAA;AACD;AACF;;AAED,YAAID,GAAG,YAAYld,KAAK,CAAxB,QAAA,EAAmC;AACjC,cAAMsL,QAAQ,GAAG8R,MAAM,CAACF,GAAG,CAAJ,QAAA,EAAe,UAAA,IAAA,EAAA;AAAA,mBAAUG,IAAI,CAAA,IAAA,EAAA,IAAA,EAAd,UAAc,CAAd;AAAtC,WAAuB,CAAvB;;AAEA,cAAI/R,QAAQ,KAAK4R,GAAG,CAApB,QAAA,EAA+B;AAC7BA,YAAAA,GAAG,GAAG,IAAIld,KAAK,CAACkd,GAAG,CAAb,QAAS,CAAT,CAAwBA,GAAG,CAA3B,MAAA,EAAoCA,GAAG,CAAvC,KAAA,EAANA,QAAM,CAANA;AACD;AALH,SAAA,MAMO,IAAIA,GAAG,YAAYld,KAAK,CAAxB,aAAA,EAAwC;AAC7C,cAAMzC,IAAI,GAAG8f,IAAI,CAACH,GAAG,CAAJ,IAAA,EAAA,IAAA,EAAjB,UAAiB,CAAjB;AACA,cAAMzZ,WAAW,GAAG2Z,MAAM,CAACF,GAAG,CAAJ,WAAA,EAAkB,UAAA,IAAA,EAAA;AAAA,mBAAUG,IAAI,CAAA,IAAA,EAAA,IAAA,EAAd,UAAc,CAAd;AAA5C,WAA0B,CAA1B;;AAEA,cAAI9f,IAAI,KAAK2f,GAAG,CAAZ3f,IAAAA,IAAqBkG,WAAW,KAAKyZ,GAAG,CAA5C,WAAA,EAA0D;AACxDA,YAAAA,GAAG,GAAG,IAAIld,KAAK,CAACkd,GAAG,CAAb,QAAS,CAAT,CAAwBA,GAAG,CAA3B,OAAA,EAAqCA,GAAG,CAAxC,IAAA,EAAA,IAAA,EAANA,WAAM,CAANA;AACD;AANI,SAAA,MAOA;AACL,cAAMxhB,KAAK,GAAG,GAAG,CAAH,MAAA,CAAA,GAAA,CAAe,UAAA,KAAA,EAAA;AAAA,mBAAWwhB,GAAG,CAAd,KAAc,CAAd;AAA7B,WAAc,CAAd;AACA,cAAMI,MAAM,GAAGF,MAAM,CAAA,KAAA,EAAQ,UAAA,IAAA,EAAA;AAAA,mBAAUC,IAAI,CAAA,IAAA,EAAA,IAAA,EAAd,UAAc,CAAd;AAA7B,WAAqB,CAArB;;AAEA,cAAIC,MAAM,KAAV,KAAA,EAAsB;AACpBJ,YAAAA,GAAG,GAAG,IAAIld,KAAK,CAACkd,GAAG,CAAb,QAAS,CAAT,CAAwBA,GAAG,CAA3B,MAAA,EAAoCA,GAAG,CAA7CA,KAAM,CAANA;AACAI,YAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,IAAA,EAAA,CAAA,EAAa;AAC1BJ,cAAAA,GAAG,CAACA,GAAG,CAAHA,MAAAA,CAAJA,CAAIA,CAAD,CAAHA,GAAAA,IAAAA;AADFI,aAAAA;AAGD;AACF;;AAED,eAAOC,UAAU,GAAIljB,IAAI,CAAJA,GAAI,CAAJA,IAAJ,GAAA,GAAjB,GAAA;AACD;;AAED,eAAA,SAAA,CAAA,GAAA,EAAA,IAAA,EAA8B;AAC5B,eAAOgjB,IAAI,CAAA,GAAA,EAAA,IAAA,EAAX,IAAW,CAAX;AACD;;AAED,eAAA,YAAA,CAAA,IAAA,EAAA,YAAA,EAAA,IAAA,EAAgD;AAC9C,YAAI/R,QAAQ,GAAZ,EAAA;AAEA,YAAIkS,MAAM,GAAGC,SAAS,CAAChiB,IAAI,GAAGyI,IAAI,CAAP,IAAO,CAAP,GAAL,IAAA,EAA2B,UAAA,QAAA,EAAc;AAC7D,cAAA,MAAA;;AACA,cAAIwZ,QAAQ,YAAY1d,KAAK,CAA7B,KAAA,EAAqC;AACnC,mBAAA,QAAA;AADF,WAAA,MAEO,IAAK0d,QAAQ,YAAY1d,KAAK,CAAzB0d,MAAAA,IACVpiB,GAAG,CAAHA,OAAAA,CAAAA,YAAAA,EAA0BoiB,QAAQ,CAARA,IAAAA,CAA1BpiB,KAAAA,MAAmD,CAD1C,CAACoiB,IAEVA,QAAQ,YAAY1d,KAAK,CAFpB,kBAAA,EAEyC;AAC9CmI,YAAAA,MAAM,GAAG,IAAInI,KAAK,CAAT,MAAA,CAAiB0d,QAAQ,CAAzB,MAAA,EACPA,QAAQ,CADD,KAAA,EAEPC,MAFFxV,EAAS,CAATA;AAIAmD,YAAAA,QAAQ,CAARA,IAAAA,CAAc,IAAItL,KAAK,CAAT,WAAA,CAAsB0d,QAAQ,CAA9B,MAAA,EACZA,QAAQ,CADI,KAAA,EAEZA,QAAQ,CAFI,IAAA,EAGZA,QAAQ,CAHI,IAAA,EAAdpS,MAAc,CAAdA;AAKD;;AACD,iBAAA,MAAA;AAjBF,SAAsB,CAAtB;;AAoBA,YAAA,IAAA,EAAU;AACRpH,UAAAA,IAAI,CAAJA,IAAI,CAAJA,GAAAA,MAAAA;AADF,SAAA,MAEO;AACLA,UAAAA,IAAI,GAAJA,MAAAA;AACD;;AAED,YAAIoH,QAAQ,CAAZ,MAAA,EAAqB;AACnBA,UAAAA,QAAQ,CAARA,IAAAA,CAAAA,IAAAA;AAEA,iBAAO,IAAItL,KAAK,CAAT,QAAA,CACLkE,IAAI,CADC,MAAA,EAELA,IAAI,CAFC,KAAA,EAAP,QAAO,CAAP;AAHF,SAAA,MAQO;AACL,iBAAA,IAAA;AACD;AACF;;AAED,eAAA,WAAA,CAAA,GAAA,EAAA,YAAA,EAAwC;AACtC,eAAOuZ,SAAS,CAAA,GAAA,EAAM,UAAA,IAAA,EAAU;AAC9B,cAAIvZ,IAAI,YAAYlE,KAAK,CAAzB,MAAA,EAAkC;AAChC,mBAAO4d,YAAY,CAAA,IAAA,EAAnB,YAAmB,CAAnB;AADF,WAAA,MAEO,IAAI1Z,IAAI,YAAYlE,KAAK,CAAzB,GAAA,EAA+B;AACpC,mBAAO4d,YAAY,CAAA,IAAA,EAAA,YAAA,EAAnB,OAAmB,CAAnB;AADK,WAAA,MAEA,IAAI1Z,IAAI,YAAYlE,KAAK,CAAzB,GAAA,EAA+B;AACpC,mBAAO4d,YAAY,CAAA,IAAA,EAAA,YAAA,EAAnB,KAAmB,CAAnB;AADK,WAAA,MAEA,IAAI1Z,IAAI,YAAYlE,KAAK,CAAzB,EAAA,EAA8B;AACnC,mBAAO4d,YAAY,CAAA,IAAA,EAAA,YAAA,EAAnB,MAAmB,CAAnB;AADK,WAAA,MAEA,IAAI1Z,IAAI,YAAYlE,KAAK,CAAzB,aAAA,EAAyC;AAC9C,mBAAO4d,YAAY,CAAA,IAAA,EAAA,YAAA,EAAnB,MAAmB,CAAnB;AADK,WAAA,MAEA;AACL,mBAAA,SAAA;AACD;AAbH,SAAgB,CAAhB;AAeD;;AAED,eAAA,SAAA,CAAA,GAAA,EAAwB;AACtB,eAAOP,IAAI,CAAA,GAAA,EAAM,UAAA,SAAA,EAAe;AAC9B,cAAI,EAAEQ,SAAS,YAAY7d,KAAK,CAAhC,KAAI,CAAJ,EAAyC;AACvC;AACD;;AAED,cAAI8d,QAAQ,GAAZ,KAAA;AACA,cAAM3V,MAAM,GAAGwV,MAAf,EAAA;AAEAE,UAAAA,SAAS,CAATA,IAAAA,GAAiBR,IAAI,CAACQ,SAAS,CAAV,IAAA,EAAiB,UAAA,IAAA,EAAU;AAAE;AAChD,gBAAI3Z,IAAI,YAAYlE,KAAK,CAArBkE,OAAAA,IAAiCA,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,KAArC,OAAA,EAAkE;AAChE4Z,cAAAA,QAAQ,GAARA,IAAAA;AACA,qBAAO,IAAI9d,KAAK,CAAT,MAAA,CAAiBkE,IAAI,CAArB,MAAA,EAA8BA,IAAI,CAAlC,KAAA,EAAP,MAAO,CAAP;AACD;AAJH2Z,WAAqB,CAArBA;;AAOA,cAAA,QAAA,EAAc;AACZA,YAAAA,SAAS,CAATA,IAAAA,CAAAA,QAAAA,CAAAA,OAAAA,CAAgC,IAAI7d,KAAK,CAAT,KAAA,CAAA,CAAA,EAAA,CAAA,EACxB6d,SAAS,CADe,IAAA,EACR,IAAI7d,KAAK,CAAT,MAAA,CAAA,CAAA,EAAA,CAAA,EADxB6d,MACwB,CADQ,CAAhCA;AAGD;AAnBH,SAAW,CAAX;AAqBD;;AAED,eAAA,iBAAA,CAAA,GAAA,EAAgC;AAC9B,eAAOJ,SAAS,CAAA,GAAA,EAAM,UAAA,IAAA,EAAU;AAC9B,cAAI,EAAEvZ,IAAI,YAAYlE,KAAK,CAAvB,EAAA,KAA+B,EAAEkE,IAAI,YAAYlE,KAAK,CAA1D,GAAmC,CAAnC,EAAiE;AAC/D,mBAAA,SAAA;AACD;;AAED,cAAI2c,KAAK,GAAT,KAAA;AACAU,UAAAA,IAAI,CAAA,IAAA,EAAO,UAAA,KAAA,EAAW;AACpB,gBAAI9R,KAAK,YAAYvL,KAAK,CAAtBuL,WAAAA,IACFA,KAAK,YAAYvL,KAAK,CADpBuL,OAAAA,IAEFA,KAAK,YAAYvL,KAAK,CAFpBuL,SAAAA,IAGFA,KAAK,YAAYvL,KAAK,CAHpBuL,QAAAA,IAIFA,KAAK,YAAYvL,KAAK,CAJxB,kBAAA,EAI6C;AAC3C2c,cAAAA,KAAK,GADsC,IAC3CA,CAD2C,CAE3C;;AACA,qBAAA,KAAA;AACD;;AACD,mBAAA,SAAA;AAVFU,WAAI,CAAJA;;AAaA,cAAA,KAAA,EAAW;AACT,gBAAInZ,IAAI,YAAYlE,KAAK,CAAzB,EAAA,EAA8B;AAC5B,qBAAO,IAAIA,KAAK,CAAT,OAAA,CACLkE,IAAI,CADC,MAAA,EAELA,IAAI,CAFC,KAAA,EAGLA,IAAI,CAHC,IAAA,EAILA,IAAI,CAJC,IAAA,EAKLA,IAAI,CALN,KAAO,CAAP;AADF,aAAA,MAQO,IAAIA,IAAI,YAAYlE,KAAK,CAArBkE,GAAAA,IAA6B,EAAEA,IAAI,YAAYlE,KAAK,CAAxD,QAAiC,CAAjC,EAAoE;AACzE,qBAAO,IAAIA,KAAK,CAAT,SAAA,CACLkE,IAAI,CADC,MAAA,EAELA,IAAI,CAFC,KAAA,EAGLA,IAAI,CAHC,GAAA,EAILA,IAAI,CAJC,IAAA,EAKLA,IAAI,CALC,IAAA,EAMLA,IAAI,CANN,KAAO,CAAP;AAQD;AACF;;AACD,iBAAA,SAAA;AAvCF,SAAgB,CAAhB;AAyCD;;AAED,eAAA,GAAA,CAAA,GAAA,EAAA,YAAA,EAAgC;AAC9B,eAAO6Z,iBAAiB,CAACC,SAAS,CAACC,WAAW,CAAA,GAAA,EAA9C,YAA8C,CAAZ,CAAV,CAAxB;AACD;;AAED,eAAA,SAAA,CAAA,GAAA,EAAA,YAAA,EAAsC;AACpC,eAAOC,GAAG,CAAA,GAAA,EAAMC,YAAY,IAA5B,EAAU,CAAV;QAGF;AACA;AACA;AACA;;;AAEAtmB,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfumB,QAAAA,SAAS,EAAEA;AADI,OAAjBvmB;;;;;;;;;ACpNA,UAAIyD,GAAG,GAAGD,mBAAO,CAAjB,CAAiB,CAAjB;;AACA,UAAIgjB,CAAC,GAAGhjB,mBAAO,CAAf,CAAe,CAAf;;AAEA,UAAIzD,OAAO,GAAGC,MAAM,CAANA,OAAAA,GAAd,EAAA;;AAEA,eAAA,SAAA,CAAA,KAAA,EAAA,YAAA,EAAwC;AACtC,YAAIQ,KAAK,KAALA,IAAAA,IAAkBA,KAAK,KAAvBA,SAAAA,IAAyCA,KAAK,KAAlD,KAAA,EAA8D;AAC5D,iBAAA,YAAA;AACD;;AACD,eAAA,KAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,GAAAA,GAAc0mB,IAAI,CAAlB1mB,GAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClB,eAAO2mB,GAAG,KADQ,GAClB,CADkB,CACE;AACrB;;AAED,eAAA,KAAA,CAAA,GAAA,EAAA,SAAA,EAAA,QAAA,EAAyC;AACvC,YAAA,CAAA;AACA,YAAI/iB,GAAG,GAAP,EAAA;AACA,YAAID,GAAG,GAAP,EAAA;;AAEA,aAAKpC,CAAC,GAAN,CAAA,EAAYA,CAAC,GAAGoB,GAAG,CAAnB,MAAA,EAA4BpB,CAA5B,EAAA,EAAiC;AAC/B,cAAIA,CAAC,GAADA,SAAAA,KAAAA,CAAAA,IAAuBoC,GAAG,CAA9B,MAAA,EAAuC;AACrCC,YAAAA,GAAG,CAAHA,IAAAA,CAAAA,GAAAA;AACAD,YAAAA,GAAG,GAAHA,EAAAA;AACD;;AAEDA,UAAAA,GAAG,CAAHA,IAAAA,CAAShB,GAAG,CAAZgB,CAAY,CAAZA;AACD;;AAED,YAAIA,GAAG,CAAP,MAAA,EAAgB;AACd,cAAA,QAAA,EAAc;AACZ,iBAAKpC,CAAC,GAAGoC,GAAG,CAAZ,MAAA,EAAqBpC,CAAC,GAAtB,SAAA,EAAoCA,CAApC,EAAA,EAAyC;AACvCoC,cAAAA,GAAG,CAAHA,IAAAA,CAAAA,QAAAA;AACD;AACF;;AAEDC,UAAAA,GAAG,CAAHA,IAAAA,CAAAA,GAAAA;AACD;;AAED,eAAA,GAAA;AACD;;AAED5D,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,UAAA,CAAA,GAAA,EAAyB;AACvBuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;AACA,YAAM+D,GAAG,GAAG/D,GAAG,CAAf,WAAYA,EAAZ;AACA,eAAOkkB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAoBngB,GAAG,CAAHA,MAAAA,CAAAA,CAAAA,EAAAA,WAAAA,KAA8BA,GAAG,CAAHA,KAAAA,CAAzD,CAAyDA,CAAlDmgB,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;;AAEA,eAAA,MAAA,CAAA,GAAA,EAAA,KAAA,EAA4B;AAC1BuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;AACAskB,QAAAA,KAAK,GAAGA,KAAK,IAAbA,EAAAA;;AAEA,YAAItkB,GAAG,CAAHA,MAAAA,IAAJ,KAAA,EAAyB;AACvB,iBAAA,GAAA;AACD;;AAED,YAAMukB,MAAM,GAAGD,KAAK,GAAGtkB,GAAG,CAA1B,MAAA;AACA,YAAMga,GAAG,GAAG7Y,GAAG,CAAHA,MAAAA,CAAAA,GAAAA,EAAiBojB,MAAM,GAAP,CAACA,GAAeA,MAAM,GAAlD,CAAYpjB,CAAZ;AACA,YAAMqjB,IAAI,GAAGrjB,GAAG,CAAHA,MAAAA,CAAAA,GAAAA,EAAgBojB,MAAM,GAAnC,CAAapjB,CAAb;AACA,eAAO+iB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAoBlK,GAAG,GAAHA,GAAAA,GAA3B,IAAOkK,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,QAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAkC;AAChC,YAAA,IAAA,EAAU;AACR,iBAAOkB,GAAG,IAAV,GAAA;AADF,SAAA,MAEO;AACL,iBAAQA,GAAG,KAAJ,SAACA,GAAD,GAACA,GAAR,GAAA;AACD;QAGH;;;AACAlB,MAAAA,OAAO,CAAPA,SAAO,CAAPA,GAAAA,QAAAA,C,CAA+B;;AAE/B,eAAA,QAAA,CAAA,GAAA,EAAA,aAAA,EAAA,EAAA,EAA0C;AACxC,YAAI,CAAC0D,GAAG,CAAHA,QAAAA,CAAL,GAAKA,CAAL,EAAwB;AACtB,gBAAM,IAAIA,GAAG,CAAP,aAAA,CAAN,wCAAM,CAAN;AACD;;AAED,YAAIxB,KAAK,GAL+B,EAKxC,CALwC,CAMxC;;AACA,aAAK,IAAL,CAAA,IAAA,GAAA,EAAmB;AAAE;AACnBA,UAAAA,KAAK,CAALA,IAAAA,CAAW,CAAA,CAAA,EAAIhB,GAAG,CAAlBgB,CAAkB,CAAP,CAAXA;AACD;;AAED,YAAA,EAAA;;AACA,YAAI8kB,EAAE,KAAFA,SAAAA,IAAoBA,EAAE,KAA1B,KAAA,EAAsC;AACpCC,UAAAA,EAAE,GAAFA,CAAAA;AADF,SAAA,MAEO,IAAID,EAAE,KAAN,OAAA,EAAoB;AACzBC,UAAAA,EAAE,GAAFA,CAAAA;AADK,SAAA,MAEA;AACL,gBAAM,IAAIvjB,GAAG,CAAP,aAAA,CAAN,2DAAM,CAAN;AAED;;AAEDxB,QAAAA,KAAK,CAALA,IAAAA,CAAW,UAAA,EAAA,EAAA,EAAA,EAAY;AACrB,cAAIglB,CAAC,GAAGC,EAAE,CAAV,EAAU,CAAV;AACA,cAAIlW,CAAC,GAAGmW,EAAE,CAAV,EAAU,CAAV;;AAEA,cAAI,CAAJ,aAAA,EAAoB;AAClB,gBAAI1jB,GAAG,CAAHA,QAAAA,CAAJ,CAAIA,CAAJ,EAAqB;AACnBwjB,cAAAA,CAAC,GAAGA,CAAC,CAALA,WAAIA,EAAJA;AACD;;AACD,gBAAIxjB,GAAG,CAAHA,QAAAA,CAAJ,CAAIA,CAAJ,EAAqB;AACnBuN,cAAAA,CAAC,GAAGA,CAAC,CAALA,WAAIA,EAAJA;AACD;AACF;;AAED,iBAAOiW,CAAC,GAADA,CAAAA,GAAAA,CAAAA,GAAaA,CAAC,KAADA,CAAAA,GAAAA,CAAAA,GAAc,CAbb,CAarB,CAbqB,CAakB;AAbzChlB,SAAAA;AAgBA,eAAA,KAAA;AACD;;AAEDlC,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAA,MAAA,EAA2B;AACzB,eAAOwM,IAAI,CAAJA,SAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAAP,MAAOA,CAAP;AACD;;AAEDxM,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,MAAA,CAAA,GAAA,EAAqB;AACnB,YAAIuC,GAAG,YAAYkkB,CAAC,CAApB,UAAA,EAAiC;AAC/B,iBAAA,GAAA;AACD;;AACDlkB,QAAAA,GAAG,GAAIA,GAAG,KAAHA,IAAAA,IAAgBA,GAAG,KAApB,SAACA,GAAD,EAACA,GAAPA,GAAAA;AACA,eAAOkkB,CAAC,CAADA,QAAAA,CAAW/iB,GAAG,CAAHA,MAAAA,CAAWnB,GAAG,CAAhC,QAA6BA,EAAXmB,CAAX+iB,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAmB;AACjB,YAAIuC,GAAG,YAAYkkB,CAAC,CAApB,UAAA,EAAiC;AAC/B,iBAAA,GAAA;AACD;;AACDlkB,QAAAA,GAAG,GAAIA,GAAG,KAAHA,IAAAA,IAAgBA,GAAG,KAApB,SAACA,GAAD,EAACA,GAAPA,GAAAA;AACA,eAAOkkB,CAAC,CAADA,QAAAA,CAAWlkB,GAAG,CAArB,QAAkBA,EAAXkkB,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClB,eAAO2C,GAAG,CAAV,CAAU,CAAV;AACD;;AAED3C,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,WAAA,CAAA,GAAA,EAA0B;AACxBuC,QAAAA,GAAG,GAAIA,GAAG,KAAHA,IAAAA,IAAgBA,GAAG,KAApB,SAACA,GAAD,EAACA,GAAPA,GAAAA;AACA,eAAOkkB,CAAC,CAADA,QAAAA,CAAW/iB,GAAG,CAAHA,MAAAA,CAAWnB,GAAG,CAAhC,QAA6BA,EAAXmB,CAAX+iB,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,WAAAA,GAAAA,WAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAA,IAAA,EAA4B;AAC1B,eAAO0D,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,EAAAA,IAAAA,EAAuB,KAAA,GAAA,CAAA,IAAA,CAA9B,gBAAOA,CAAP;AACD;;AAED1D,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,MAAA,CAAA,GAAA,EAAA,KAAA,EAAA,WAAA,EAAyC;AACvCuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;;AAEA,YAAIA,GAAG,KAAP,EAAA,EAAgB;AACd,iBAAA,EAAA;AACD;;AAEDskB,QAAAA,KAAK,GAAGA,KAAK,IAP0B,CAOvCA,CAPuC,CAQvC;;AACA,YAAM9a,KAAK,GAAGxJ,GAAG,CAAHA,KAAAA,CAAd,IAAcA,CAAd;AACA,YAAM8kB,EAAE,GAAG3jB,GAAG,CAAHA,MAAAA,CAAAA,GAAAA,EAAX,KAAWA,CAAX;AAEA,YAAME,GAAG,GAAG,KAAK,CAAL,GAAA,CAAU,UAAA,CAAA,EAAA,CAAA,EAAU;AAC9B,iBAAQrC,CAAC,KAADA,CAAAA,IAAW,CAAZ,WAACA,GAAD,CAACA,GAAD,KAAA,EAAA,GAAP,CAAA;AADU,SAAA,EAAA,IAAA,CAAZ,IAAY,CAAZ;AAIA,eAAOklB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAP,GAAOA,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAA8B;AAC5BsnB,QAAAA,GAAG,GAAGA,GAAG,IAATA,EAAAA;;AAEA,YAAA,IAAA,EAAU;AACR3kB,UAAAA,GAAG,GAAG,GAAG,CAAH,GAAA,CAAA,GAAA,EAAa,UAAA,CAAA,EAAA;AAAA,mBAAO8L,CAAC,CAAR,IAAQ,CAAR;AAAnB9L,WAAM,CAANA;AACD;;AAED,eAAOA,GAAG,CAAHA,IAAAA,CAAP,GAAOA,CAAP;AACD;;AAED3C,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAmB;AACjB,eAAO2C,GAAG,CAACA,GAAG,CAAHA,MAAAA,GAAX,CAAU,CAAV;AACD;;AAED3C,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,YAAA,CAAA,GAAA,EAA2B;AACzB,YAAIS,KAAK,GAAGmmB,SAAS,CAAA,GAAA,EAArB,EAAqB,CAArB;;AAEA,YAAInmB,KAAK,KAAT,SAAA,EAAyB;AACvB,cACG,OAAA,GAAA,KAAA,UAAA,IAA6BA,KAAK,YAAnC,GAAC,IACA,OAAA,GAAA,KAAA,UAAA,IAA6BA,KAAK,YAFrC,GAAA,EAGE;AACA;AACA,mBAAOA,KAAK,CAAZ,IAAA;AACD;;AACD,cAAIiD,GAAG,CAAHA,QAAAA,CAAAA,KAAAA,KAAuB,EAAEjD,KAAK,YAAYgmB,CAAC,CAA/C,UAA2B,CAA3B,EAA6D;AAC3D;AACA,mBAAO/iB,GAAG,CAAHA,IAAAA,CAAAA,KAAAA,EAAP,MAAA;AACD;;AACD,iBAAOjD,KAAK,CAAZ,MAAA;AACD;;AACD,eAAA,CAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,YAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAmB;AACjB,YAAI0D,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AACrB,iBAAOxC,GAAG,CAAHA,KAAAA,CAAP,EAAOA,CAAP;AADF,SAAA,MAEO,IAAIwC,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AAC5B,iBAAO,GAAG,CAAH,QAAA,CAAaxC,GAAG,IAAhB,EAAA,EAAA,GAAA,CAA4B,UAAA,IAAA,EAAA;AAAA,gBAAEa,GAAF,GAAA,IAAA,CAAA,CAAA,CAAA;AAAA,gBAAOtB,KAAP,GAAA,IAAA,CAAA,CAAA,CAAA;AAAA,mBAAmB;AAACsB,cAAAA,GAAG,EAAJ,GAAA;AAAMtB,cAAAA,KAAK,EAALA;AAAN,aAAnB;AAAnC,WAAO,CAAP;AADK,SAAA,MAEA,IAAIiD,GAAG,CAAHA,OAAAA,CAAJ,GAAIA,CAAJ,EAAsB;AAC3B,iBAAA,GAAA;AADK,SAAA,MAEA;AACL,gBAAM,IAAIA,GAAG,CAAP,aAAA,CAAN,gCAAM,CAAN;AACD;AACF;;AAED1D,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClBuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;AACA,eAAOA,GAAG,CAAV,WAAOA,EAAP;AACD;;AAEDvC,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClB,YAAIuC,GAAG,KAAHA,IAAAA,IAAgBA,GAAG,KAAvB,SAAA,EAAuC;AACrC,iBAAA,EAAA;AACD;;AACD,eAAOkkB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAoBlkB,GAAG,CAAHA,OAAAA,CAAAA,UAAAA,EAA3B,UAA2BA,CAApBkkB,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,MAAA,CAAA,GAAA,EAAqB;AACnB,eAAO2C,GAAG,CAAC+jB,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,KAAgB/jB,GAAG,CAAzC,MAAW+jB,CAAD,CAAV;AACD;;AAED1mB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,iBAAA,CAAA,kBAAA,EAA+C;AAC7C,iBAAA,MAAA,CAAA,GAAA,EAAA,QAAA,EAAA,SAAA,EAAqD;AAAA,cAAhCunB,QAAgC,KAAA,KAAA,CAAA,EAAA;AAAhCA,YAAAA,QAAgC,GAArB,QAAXA;AAAgC;;AACnD,cAAM7gB,OAAO,GAAb,IAAA;AACA,cAAMkP,IAAI,GAAGlP,OAAO,CAAPA,GAAAA,CAAAA,OAAAA,CAAb,QAAaA,CAAb;AAEA,iBAAO,GAAG,CAAH,OAAA,CAAA,GAAA,EAAA,MAAA,CAAwB,SAAA,iBAAA,CAAA,IAAA,EAAiC;AAC9D,mBAAOkP,IAAI,CAAJA,IAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAAA,SAAAA,MAAP,kBAAA;AADF,WAAO,CAAP;AAGD;;AAED,eAAA,MAAA;AACD;;AAED5V,MAAAA,OAAO,CAAPA,MAAAA,GAAiBwnB,iBAAiB,CAAlCxnB,KAAkC,CAAlCA;;AAEA,eAAA,UAAA,CAAA,GAAA,EAAA,IAAA,EAA+B;AAC7B,eAAO,GAAG,CAAH,MAAA,CAAW,UAAA,IAAA,EAAA;AAAA,iBAAU,CAAC4G,IAAI,CAAf,IAAe,CAAf;AAAlB,SAAO,CAAP;AACD;;AAED5G,MAAAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;AAEAA,MAAAA,OAAO,CAAPA,MAAAA,GAAiBwnB,iBAAiB,CAAlCxnB,IAAkC,CAAlCA;;AAEA,eAAA,UAAA,CAAA,GAAA,EAAA,IAAA,EAA+B;AAC7B,eAAO,GAAG,CAAH,MAAA,CAAW,UAAA,IAAA,EAAA;AAAA,iBAAU,CAAC,CAAC4G,IAAI,CAAhB,IAAgB,CAAhB;AAAlB,SAAO,CAAP;AACD;;AAED5G,MAAAA,OAAO,CAAPA,UAAAA,GAAAA,UAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,EAA2C;AACzC,YAAIynB,WAAW,GAAf,GAAA;;AAEA,YAAItnB,GAAG,YAAP,MAAA,EAA2B;AACzB,iBAAOoC,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,EAAP,IAAOA,CAAP;AACD;;AAED,YAAI,OAAA,QAAA,KAAJ,WAAA,EAAqC;AACnCmlB,UAAAA,QAAQ,GAAG,CAAXA,CAAAA;AACD;;AAED,YAAI9jB,GAAG,GAXkC,EAWzC,CAXyC,CAW3B;AAEd;;AACA,YAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3BzD,UAAAA,GAAG,GAAG,KAANA,GAAAA;AADF,SAAA,MAEO,IAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAClC;AACA;AACA,iBAAA,GAAA;AAnBuC,SAAA,CAsBzC;;;AACA,YAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3BoC,UAAAA,GAAG,GAAG,KAANA,GAAAA;AAxBuC,SAAA,CA2BzC;;;AACA,YAAI,OAAA,GAAA,KAAA,QAAA,IAA2B,EAAEA,GAAG,YAAYkkB,CAAC,CAAjD,UAA+B,CAA/B,EAA+D;AAC7D,iBAAA,GAAA;AA7BuC,SAAA,CAgCzC;;;AACA,YAAItmB,GAAG,KAAP,EAAA,EAAgB;AACd;AACA;AACAyD,UAAAA,GAAG,GAAG+jB,IAAI,GAAGplB,GAAG,CAAHA,KAAAA,CAAAA,EAAAA,EAAAA,IAAAA,CAAPolB,IAAOplB,CAAPolB,GAAN/jB,IAAAA;AACA,iBAAO6iB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAP,GAAOA,CAAP;AACD;;AAED,YAAImB,SAAS,GAAGrlB,GAAG,CAAHA,OAAAA,CAxCyB,GAwCzBA,CAAhB,CAxCyC,CAyCzC;AACA;;AACA,YAAImlB,QAAQ,KAARA,CAAAA,IAAkBE,SAAS,KAAK,CAApC,CAAA,EAAwC;AACtC,iBAAA,GAAA;AACD;;AAED,YAAIC,GAAG,GAAP,CAAA;AACA,YAAIC,KAAK,GAhDgC,CAgDzC,CAhDyC,CAgD1B;;AAEf,eAAOF,SAAS,GAAG,CAAZA,CAAAA,KAAmBF,QAAQ,KAAK,CAAbA,CAAAA,IAAmBI,KAAK,GAAlD,QAAOF,CAAP,EAAgE;AAC9D;AACA;AACAhkB,UAAAA,GAAG,IAAIrB,GAAG,CAAHA,SAAAA,CAAAA,GAAAA,EAAAA,SAAAA,IAHuD,IAG9DqB,CAH8D,CAI9D;;AACAikB,UAAAA,GAAG,GAAGD,SAAS,GAAGznB,GAAG,CAArB0nB,MAAAA;AACAC,UAAAA,KAN8D,GAAA,CAO9D;;AACAF,UAAAA,SAAS,GAAGrlB,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,EAAZqlB,GAAYrlB,CAAZqlB;AA1DuC,SAAA,CA6DzC;AACA;;;AACA,YAAIC,GAAG,GAAGtlB,GAAG,CAAb,MAAA,EAAsB;AACpBqB,UAAAA,GAAG,IAAIrB,GAAG,CAAHA,SAAAA,CAAPqB,GAAOrB,CAAPqB;AACD;;AAED,eAAO6iB,CAAC,CAADA,YAAAA,CAAAA,WAAAA,EAAP,GAAOA,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,OAAA,CAAA,GAAA,EAAsB;AACpB,YAAA,GAAA;;AACA,YAAI0D,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AACrBf,UAAAA,GAAG,GAAGolB,IAAI,CAAVplB,GAAU,CAAVA;AADF,SAAA,MAEO;AACL;AACAA,UAAAA,GAAG,GAAG,GAAG,CAAH,GAAA,CAAA,GAAA,EAAa,UAAA,CAAA,EAAC;AAAA,mBAAA,CAAA;AAApBA,WAAM,CAANA;AACD;;AAEDA,QAAAA,GAAG,CAAHA,OAAAA;;AAEA,YAAIe,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AACrB,iBAAO+iB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAoB9jB,GAAG,CAAHA,IAAAA,CAA3B,EAA2BA,CAApB8jB,CAAP;AACD;;AACD,eAAA,GAAA;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAA,SAAA,EAAA,MAAA,EAAuC;AACrCgoB,QAAAA,SAAS,GAAGA,SAAS,IAArBA,CAAAA;AACA,YAAMC,MAAM,GAAGvB,IAAI,CAAJA,GAAAA,CAAAA,EAAAA,EAAf,SAAeA,CAAf;AACA,YAAA,OAAA;;AAEA,YAAIwB,MAAM,KAAV,MAAA,EAAuB;AACrBC,UAAAA,OAAO,GAAGzB,IAAI,CAAdyB,IAAAA;AADF,SAAA,MAEO,IAAID,MAAM,KAAV,OAAA,EAAwB;AAC7BC,UAAAA,OAAO,GAAGzB,IAAI,CAAdyB,KAAAA;AADK,SAAA,MAEA;AACLA,UAAAA,OAAO,GAAGzB,IAAI,CAAdyB,KAAAA;AACD;;AAED,eAAOA,OAAO,CAACjnB,GAAG,GAAXinB,MAAO,CAAPA,GAAP,MAAA;AACD;;AAEDnoB,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAA,MAAA,EAAA,QAAA,EAAsC;AACpC,YAAMooB,WAAW,GAAG1B,IAAI,CAAJA,KAAAA,CAAW/jB,GAAG,CAAHA,MAAAA,GAA/B,MAAoB+jB,CAApB;AACA,YAAM2B,KAAK,GAAG1lB,GAAG,CAAHA,MAAAA,GAAd,MAAA;AACA,YAAMiB,GAAG,GAAT,EAAA;AACA,YAAI0kB,MAAM,GAAV,CAAA;;AAEA,aAAK,IAAI/mB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,MAAA,EAA4BA,CAA5B,EAAA,EAAiC;AAC/B,cAAMgnB,KAAK,GAAGD,MAAM,GAAI/mB,CAAC,GAAzB,WAAA;;AACA,cAAIA,CAAC,GAAL,KAAA,EAAe;AACb+mB,YAAAA,MAAM;AACP;;AACD,cAAME,GAAG,GAAGF,MAAM,GAAI,CAAC/mB,CAAC,GAAF,CAAA,IAAtB,WAAA;AAEA,cAAMknB,SAAS,GAAG9lB,GAAG,CAAHA,KAAAA,CAAAA,KAAAA,EAAlB,GAAkBA,CAAlB;;AACA,cAAI+lB,QAAQ,IAAInnB,CAAC,IAAjB,KAAA,EAA4B;AAC1BknB,YAAAA,SAAS,CAATA,IAAAA,CAAAA,QAAAA;AACD;;AACD7kB,UAAAA,GAAG,CAAHA,IAAAA,CAAAA,SAAAA;AACD;;AAED,eAAA,GAAA;AACD;;AAED5D,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,GAAA,CAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAmC;AAAA,YAAXuoB,KAAW,KAAA,KAAA,CAAA,EAAA;AAAXA,UAAAA,KAAW,GAAH,CAARA;AAAW;;AACjC,YAAA,IAAA,EAAU;AACR5lB,UAAAA,GAAG,GAAG,GAAG,CAAH,GAAA,CAAA,GAAA,EAAa,UAAA,CAAA,EAAA;AAAA,mBAAO8L,CAAC,CAAR,IAAQ,CAAR;AAAnB9L,WAAM,CAANA;AACD;;AAED,eAAO4lB,KAAK,GAAG,GAAG,CAAH,MAAA,CAAW,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,iBAAUrB,CAAC,GAAX,CAAA;AAAX,SAAA,EAAf,CAAe,CAAf;AACD;;AAEDlnB,MAAAA,OAAO,CAAPA,GAAAA,GAAAA,GAAAA;AAEAA,MAAAA,OAAO,CAAPA,IAAAA,GAAe,CAAC,CAAD,SAAA,CACb,CAAA,OAAA,EAAA,SAAA,EAAA,gBAAA,EADa,WACb,CADa,EAAA,EAAA,EAEb,SAAA,UAAA,CAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,IAAA,EAAmD;AAAA,YAAA,KAAA,GAAA,IAAA,CAAA,CACjD;;;AACA,YAAIkC,KAAK,GAAG,GAAG,CAAH,GAAA,CAAA,GAAA,EAAa,UAAA,CAAA,EAAC;AAAA,iBAAA,CAAA;AAA1B,SAAY,CAAZ;AACA,YAAIymB,YAAY,GAAGjlB,GAAG,CAAHA,aAAAA,CAAnB,IAAmBA,CAAnB;AAEAxB,QAAAA,KAAK,CAALA,IAAAA,CAAW,UAAA,CAAA,EAAA,CAAA,EAAU;AACnB,cAAI0mB,CAAC,GAAIznB,IAAD,GAASwnB,YAAY,CAArB,CAAqB,CAArB,GAAR,CAAA;AACA,cAAIE,CAAC,GAAI1nB,IAAD,GAASwnB,YAAY,CAArB,CAAqB,CAArB,GAAR,CAAA;;AAEA,cACE,KAAI,CAAJ,GAAA,CAAA,IAAA,CAAA,gBAAA,IAAA,IAAA,KACSC,CAAC,KAADA,SAAAA,IAAmBC,CAAC,KAF/B,SACE,CADF,EAGE;AACA,kBAAM,IAAA,SAAA,CAAA,uBAAA,IAAA,GAAN,0BAAM,CAAN;AACD;;AAED,cAAI,CAAA,QAAA,IAAanlB,GAAG,CAAHA,QAAAA,CAAb,CAAaA,CAAb,IAAgCA,GAAG,CAAHA,QAAAA,CAApC,CAAoCA,CAApC,EAAqD;AACnDklB,YAAAA,CAAC,GAAGA,CAAC,CAALA,WAAIA,EAAJA;AACAC,YAAAA,CAAC,GAAGA,CAAC,CAALA,WAAIA,EAAJA;AACD;;AAED,cAAID,CAAC,GAAL,CAAA,EAAW;AACT,mBAAOE,QAAQ,GAAA,CAAA,GAAO,CAAtB,CAAA;AADF,WAAA,MAEO,IAAIF,CAAC,GAAL,CAAA,EAAW;AAChB,mBAAOE,QAAQ,GAAG,CAAH,CAAA,GAAf,CAAA;AADK,WAAA,MAEA;AACL,mBAAA,CAAA;AACD;AAtBH5mB,SAAAA;AAyBA,eAAA,KAAA;AAhCJlC,OAAe,CAAfA;;AAmCA,eAAA,MAAA,CAAA,GAAA,EAAqB;AACnB,eAAOymB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAP,GAAOA,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,SAAA,CAAA,KAAA,EAAA,kBAAA,EAA8C;AAC5C+oB,QAAAA,KAAK,GAAGnC,SAAS,CAAA,KAAA,EAAjBmC,EAAiB,CAAjBA;AACA,YAAItH,IAAI,GAAR,gDAAA;AACA,YAAIuH,YAAY,GAAGC,IAAI,CAACF,KAAK,CAALA,OAAAA,CAAAA,IAAAA,EAAxB,EAAwBA,CAAD,CAAvB;AACA,YAAInlB,GAAG,GAAP,EAAA;;AACA,YAAA,kBAAA,EAAwB;AACtBA,UAAAA,GAAG,GAAG,YAAY,CAAZ,OAAA,CAAA,WAAA,EAAA,EAAA,EACsB;AADtB,WAAA,OAAA,CAAA,KAAA,EAAA,GAAA,EAEiB;AAFjB,WAAA,OAAA,CAAA,SAAA,EAAA,IAAA,EAGsB;AAHtB,WAAA,OAAA,CAAA,UAAA,EADgB,MAChB,CAANA,CADsB,CAKU;AALlC,SAAA,MAMO;AACLA,UAAAA,GAAG,GAAGolB,YAAY,CAAZA,OAAAA,CAAAA,OAAAA,EAANplB,GAAMolB,CAANplB;AACD;;AACD,eAAO6iB,CAAC,CAADA,YAAAA,CAAAA,KAAAA,EAAP,GAAOA,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClBuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;AACA,YAAI2mB,KAAK,GAAG,GAAG,CAAH,KAAA,CAAA,GAAA,EAAA,GAAA,CAAmB,UAAA,IAAA,EAAI;AAAA,iBAAIC,UAAU,CAAd,IAAc,CAAd;AAAnC,SAAY,CAAZ;AACA,eAAO1C,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAoByC,KAAK,CAALA,IAAAA,CAA3B,GAA2BA,CAApBzC,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,IAAA,CAAA,GAAA,EAAmB;AACjB,eAAOymB,CAAC,CAADA,YAAAA,CAAAA,GAAAA,EAAoBlkB,GAAG,CAAHA,OAAAA,CAAAA,YAAAA,EAA3B,EAA2BA,CAApBkkB,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;;AAEA,eAAA,QAAA,CAAA,KAAA,EAAA,MAAA,EAAA,SAAA,EAAA,GAAA,EAAiD;AAC/C,YAAIopB,IAAI,GAAR,KAAA;AACAL,QAAAA,KAAK,GAAGnC,SAAS,CAAA,KAAA,EAAjBmC,EAAiB,CAAjBA;AACA9mB,QAAAA,MAAM,GAAGA,MAAM,IAAfA,GAAAA;;AAEA,YAAI8mB,KAAK,CAALA,MAAAA,IAAJ,MAAA,EAA4B;AAC1B,iBAAA,KAAA;AACD;;AAED,YAAA,SAAA,EAAe;AACbA,UAAAA,KAAK,GAAGA,KAAK,CAALA,SAAAA,CAAAA,CAAAA,EAARA,MAAQA,CAARA;AADF,SAAA,MAEO;AACL,cAAI5Q,GAAG,GAAG4Q,KAAK,CAALA,WAAAA,CAAAA,GAAAA,EAAV,MAAUA,CAAV;;AACA,cAAI5Q,GAAG,KAAK,CAAZ,CAAA,EAAgB;AACdA,YAAAA,GAAG,GAAHA,MAAAA;AACD;;AAED4Q,UAAAA,KAAK,GAAGA,KAAK,CAALA,SAAAA,CAAAA,CAAAA,EAARA,GAAQA,CAARA;AACD;;AAEDA,QAAAA,KAAK,IAAKP,GAAG,KAAHA,SAAAA,IAAqBA,GAAG,KAAzB,IAACA,GAAD,GAACA,GAAVO,KAAAA;AACA,eAAOtC,CAAC,CAADA,YAAAA,CAAAA,IAAAA,EAAP,KAAOA,CAAP;AACD;;AAEDzmB,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAoB;AAClBuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;AACA,eAAOA,GAAG,CAAV,WAAOA,EAAP;AACD;;AAEDvC,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;;AAEA,eAAA,SAAA,CAAA,GAAA,EAAwB;AACtB,YAAIqpB,GAAG,GAAP,kBAAA;;AACA,YAAI3lB,GAAG,CAAHA,QAAAA,CAAJ,GAAIA,CAAJ,EAAuB;AACrB,iBAAO2lB,GAAG,CAAV,GAAU,CAAV;AADF,SAAA,MAEO;AACL,cAAIC,OAAO,GAAI5lB,GAAG,CAAHA,OAAAA,CAAD,GAACA,IAAD,GAACA,GAA0BA,GAAG,CAAHA,QAAAA,CAAzC,GAAyCA,CAAzC;AACA,iBAAO,OAAO,CAAP,GAAA,CAAY,UAAA,KAAA,EAAA;AAAA,gBAAER,CAAF,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,gBAAKuL,CAAL,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,mBAAe4a,GAAG,CAAlB,CAAkB,CAAHA,GAAf,GAAeA,GAAUA,GAAG,CAA5B,CAA4B,CAA5B;AAAZ,WAAA,EAAA,IAAA,CAAP,GAAO,CAAP;AACD;AACF;;AAEDrpB,MAAAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA,C,CAEA;AACA;;AACA,UAAMupB,MAAM,GAAZ,2CAAA,C,CACA;;AACA,UAAMC,OAAO,GAAb,0DAAA;AACA,UAAMC,WAAW,GAAjB,iBAAA;AACA,UAAMC,KAAK,GAAX,QAAA;AACA,UAAMC,KAAK,GAAX,8BAAA;;AAEA,eAAA,MAAA,CAAA,GAAA,EAAA,MAAA,EAAA,QAAA,EAAuC;AACrC,YAAIC,KAAK,CAAT,MAAS,CAAT,EAAmB;AACjB3nB,UAAAA,MAAM,GAANA,QAAAA;AACD;;AAED,YAAM4nB,YAAY,GAAIC,QAAQ,KAARA,IAAAA,GAAAA,iBAAAA,GAAtB,EAAA;AAEA,YAAMZ,KAAK,GAAG,GAAG,CAAH,KAAA,CAAA,OAAA,EAAA,MAAA,CAA0B,UAAA,IAAA,EAAU;AAChD;AACA;AACA,iBAAOa,IAAI,IAAIA,IAAI,CAAnB,MAAA;AAHY,SAAA,EAAA,GAAA,CAIP,UAAA,IAAA,EAAU;AACf,cAAI3N,OAAO,GAAG2N,IAAI,CAAJA,KAAAA,CAAd,MAAcA,CAAd;AACA,cAAIC,WAAW,GAAI5N,OAAD,GAAYA,OAAO,CAAnB,CAAmB,CAAnB,GAAlB,IAAA;AACA,cAAI6N,QAAQ,GAAGD,WAAW,CAAXA,MAAAA,CAAAA,CAAAA,EAHA,MAGAA,CAAf,CAHe,CAKf;;AACA,cAAIP,WAAW,CAAXA,IAAAA,CAAJ,WAAIA,CAAJ,EAAmC;AACjC,mBAAA,eAAA,WAAA,GAAA,IAAA,GAAA,YAAA,GAAA,GAAA,GAAA,QAAA,GAAA,MAAA;AAPa,WAAA,CAUf;;;AACA,cAAIC,KAAK,CAALA,IAAAA,CAAJ,WAAIA,CAAJ,EAA6B;AAC3B,mBAAA,sBAAA,WAAA,GAAA,IAAA,GAAA,YAAA,GAAA,GAAA,GAAA,QAAA,GAAA,MAAA;AAZa,WAAA,CAef;;;AACA,cAAIF,OAAO,CAAPA,IAAAA,CAAJ,WAAIA,CAAJ,EAA+B;AAC7B,mBAAA,sBAAA,WAAA,GAAA,KAAA,GAAA,WAAA,GAAA,MAAA;AAjBa,WAAA,CAoBf;;;AACA,cAAIG,KAAK,CAALA,IAAAA,CAAJ,WAAIA,CAAJ,EAA6B;AAC3B,mBAAA,sBAAA,WAAA,GAAA,IAAA,GAAA,YAAA,GAAA,GAAA,GAAA,QAAA,GAAA,MAAA;AACD;;AAED,iBAAA,IAAA;AA7BF,SAAc,CAAd;AAgCA,eAAOT,KAAK,CAALA,IAAAA,CAAP,EAAOA,CAAP;AACD;;AAEDlpB,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;;AAEA,eAAA,SAAA,CAAA,GAAA,EAAwB;AACtBuC,QAAAA,GAAG,GAAGqkB,SAAS,CAAA,GAAA,EAAfrkB,EAAe,CAAfA;AACA,YAAM2mB,KAAK,GAAI3mB,GAAD,GAAQA,GAAG,CAAHA,KAAAA,CAAR,MAAQA,CAAR,GAAd,IAAA;AACA,eAAQ2mB,KAAD,GAAUA,KAAK,CAAf,MAAA,GAAP,IAAA;AACD;;AAEDlpB,MAAAA,OAAO,CAAPA,SAAAA,GAAAA,SAAAA;;AAEA,eAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAyB;AACvB,YAAI4D,GAAG,GAAGsa,UAAU,CAApB,GAAoB,CAApB;AACA,eAAQ0L,KAAK,CAAN,GAAM,CAALA,GAAD,GAACA,GAAR,GAAA;AACD;;AAED5pB,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;AAEA,UAAMkqB,SAAS,GAAG,CAAC,CAAD,SAAA,CAChB,CAAA,OAAA,EAAA,SAAA,EADgB,MAChB,CADgB,EAAA,EAAA,EAGhB,SAAA,KAAA,CAAA,KAAA,EAAA,YAAA,EAAA,IAAA,EAA+C;AAAA,YAAXC,IAAW,KAAA,KAAA,CAAA,EAAA;AAAXA,UAAAA,IAAW,GAAJ,EAAPA;AAAW;;AAC7C,YAAIvmB,GAAG,GAAGqa,QAAQ,CAAA,KAAA,EAAlB,IAAkB,CAAlB;AACA,eAAQ2L,KAAK,CAAN,GAAM,CAALA,GAAD,YAACA,GAAR,GAAA;AALJ,OAAkB,CAAlB;AASA5pB,MAAAA,OAAO,CAAPA,GAAAA,GAAAA,SAAAA,C,CAEA;;AACAA,MAAAA,OAAO,CAAPA,CAAAA,GAAYA,OAAO,CAAnBA,OAAAA;AACAA,MAAAA,OAAO,CAAPA,CAAAA,GAAYA,OAAO,CAAnBA,MAAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACroBA,UAAM4jB,MAAM,GAAGngB,mBAAO,CAAtB,CAAsB,CAAtB;;UAEMyR,iB;;;AACJ,iBAAA,iBAAA,CAAA,iBAAA,EAA+B;AAAA,cAAA,KAAA;;AAC7B,UAAA,KAAA,GAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KAAA,IAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAmBkV,iBAAiB,IAApC,EAAA;AAF6B,iBAAA,KAAA;AAG9B;;;;eAEDtG,S,GAAAA,SAAAA,SAAAA,CAAAA,IAAAA,EAAgB;AACd,cAAI,KAAA,WAAA,CAAJ,IAAI,CAAJ,EAA4B;AAC1B,mBAAO;AACLzM,cAAAA,GAAG,EAAE;AACHhR,gBAAAA,IAAI,EADD,MAAA;AAEHvE,gBAAAA,GAAG,EAAE,KAAA,WAAA,CAAA,IAAA;AAFF,eADA;AAKLd,cAAAA,IAAI,EAAEqD;AALD,aAAP;AAOD;;AACD,iBAAA,IAAA;;;;QAhB4Buf,M;;AAoBhC3jB,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfiV,QAAAA,iBAAiB,EAAEA;AADJ,OAAjBjV;;;;;;;;;ACtBA,UAAI+F,UAAU,GAAGvC,mBAAO,CAAPA,CAAO,CAAPA,CAAjB,UAAA;AAEA;AACA;AACA;AACA;AACA;;;AACA,eAAA,QAAA,CAAA,KAAA,EAAyB;AACvB,eAAO,OAAA,KAAA,KAAP,UAAA;AACD;;AAEDzD,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,OAAA,CAAA,KAAA,EAAwB;AACtB,eAAOS,KAAK,KAAZ,SAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,WAAA,CAAA,GAAA,EAAA,GAAA,EAA+B;AAC7B,eAAQqqB,GAAG,GAAJ,GAACA,KAAR,CAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,WAAAA,GAAAA,WAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,OAAA,CAAA,KAAA,EAAwB;AACtB,eAAOS,KAAK,YAAZ,UAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,OAAA,CAAA,GAAA,EAAA,GAAA,EAA2B;AACzB,eAAOqqB,GAAG,KAAV,GAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA,C,CAEA;;AACAA,MAAAA,OAAO,CAAPA,EAAAA,GAAaA,OAAO,CAApBA,OAAAA;AACAA,MAAAA,OAAO,CAAPA,MAAAA,GAAiBA,OAAO,CAAxBA,OAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,IAAA,CAAA,KAAA,EAAqB;AACnB,eAAOS,KAAK,GAALA,CAAAA,KAAP,CAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,KAAA,CAAA,KAAA,EAAsB;AACpB,eAAO,CAAP,KAAA;AACD;;AAEDA,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAsB;AACpB,eAAOqqB,GAAG,IAAV,GAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,EAAAA,GAAAA,EAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,WAAA,CAAA,GAAA,EAAA,GAAA,EAA+B;AAC7B,eAAOqqB,GAAG,GAAV,GAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,WAAAA,GAAAA,WAAAA,C,CAEA;;AACAA,MAAAA,OAAO,CAAPA,EAAAA,GAAaA,OAAO,CAApBA,WAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAsB;AACpB,eAAOqqB,GAAG,IAAV,GAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,EAAAA,GAAAA,EAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,QAAA,CAAA,GAAA,EAAA,GAAA,EAA4B;AAC1B,eAAOqqB,GAAG,GAAV,GAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA,C,CAEA;;AACAA,MAAAA,OAAO,CAAPA,EAAAA,GAAaA,OAAO,CAApBA,QAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,KAAA,CAAA,KAAA,EAAsB;AACpB,eAAOS,KAAK,CAALA,WAAAA,OAAP,KAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAsB;AACpB,eAAOqqB,GAAG,KAAV,GAAA;AACD;;AAEDrqB,MAAAA,OAAO,CAAPA,EAAAA,GAAAA,EAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,QAAA,CAAA,KAAA,EAAyB;AACvB,eAAOS,KAAK,KAAZ,IAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,IAAAA,GAAAA,QAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,MAAA,CAAA,KAAA,EAAuB;AACrB,eAAO,OAAA,KAAA,KAAP,QAAA;AACD;;AAEDA,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,GAAA,CAAA,KAAA,EAAoB;AAClB,eAAOS,KAAK,GAALA,CAAAA,KAAP,CAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,GAAAA,GAAAA,GAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,MAAA,CAAA,KAAA,EAAuB;AACrB,eAAO,OAAA,KAAA,KAAP,QAAA;AACD;;AAEDA,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,MAAA,CAAA,KAAA,EAAuB;AACrB,eAAO,CAAC,CAAR,KAAA;AACD;;AAEDA,MAAAA,OAAO,CAAPA,MAAAA,GAAAA,MAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,aAAA,CAAA,KAAA,EAA8B;AAC5B,eAAOS,KAAK,KAAZ,SAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,SAAAA,GAAAA,aAAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAA,KAAA,CAAA,KAAA,EAAsB;AACpB,eAAOS,KAAK,CAALA,WAAAA,OAAP,KAAA;AACD;;AAEDT,MAAAA,OAAO,CAAPA,KAAAA,GAAAA,KAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,QAAA,CAAA,KAAA,EAAyB;AACvB,YAAI,OAAA,MAAA,KAAJ,WAAA,EAAmC;AACjC,iBAAO,CAAC,CAACS,KAAK,CAACiE,MAAM,CAArB,QAAc,CAAd;AADF,SAAA,MAEO;AACL,iBAAO/E,KAAK,CAALA,OAAAA,CAAAA,KAAAA,KAAwB,OAAA,KAAA,KAA/B,QAAA;AACD;AACF;;AAEDK,MAAAA,OAAO,CAAPA,QAAAA,GAAAA,QAAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAA,OAAA,CAAA,KAAA,EAAwB;AACtB;AACA,YAAIsqB,IAAI,GAAG7pB,KAAK,KAALA,IAAAA,IACNA,KAAK,KADCA,SAAAA,IAEN,OAAA,KAAA,KAFMA,QAAAA,IAGN,CAACd,KAAK,CAALA,OAAAA,CAHN,KAGMA,CAHN;;AAIA,YAAA,GAAA,EAAS;AACP,iBAAO2qB,IAAI,IAAI,EAAE7pB,KAAK,YAAtB,GAAe,CAAf;AADF,SAAA,MAEO;AACL,iBAAA,IAAA;AACD;AACF;;AAEDT,MAAAA,OAAO,CAAPA,OAAAA,GAAAA,OAAAA;;;;;;;;;AC/RA,eAAA,OAAA,CAAA,KAAA,EAAuB;AACrB,YAAIqC,KAAK,GAAG,CAAZ,CAAA;AAEA,eAAO;AACLmhB,UAAAA,OAAO,EADF,IAAA;AAEL0B,UAAAA,KAFK,EAAA,SAAA,KAAA,GAEG;AACN7iB,YAAAA,KAAK,GAAG,CAARA,CAAAA;AACA,iBAAA,OAAA,GAAA,IAAA;AAJG,WAAA;AAOLS,UAAAA,IAPK,EAAA,SAAA,IAAA,GAOE;AACLT,YAAAA,KAAK;;AACL,gBAAIA,KAAK,IAAIkoB,KAAK,CAAlB,MAAA,EAA2B;AACzBloB,cAAAA,KAAK,GAALA,CAAAA;AACD;;AAED,iBAAA,OAAA,GAAekoB,KAAK,CAApB,KAAoB,CAApB;AACA,mBAAO,KAAP,OAAA;AACD;AAfI,SAAP;AAiBD;;AAED,eAAA,OAAA,CAAA,GAAA,EAAqB;AACnBC,QAAAA,GAAG,GAAGA,GAAG,IAATA,GAAAA;AACA,YAAIzH,KAAK,GAAT,IAAA;AAEA,eAAO,YAAM;AACX,cAAM7hB,GAAG,GAAG6hB,KAAK,GAAA,EAAA,GAAjB,GAAA;AACAA,UAAAA,KAAK,GAALA,KAAAA;AACA,iBAAA,GAAA;AAHF,SAAA;QAOF;AACA;AACA;;;AACA,eAAA,OAAA,GAAmB;AACjB,eAAO;AACL0H,UAAAA,KADK,EAAA,SAAA,KAAA,CAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EACoB;AACvB,gBAAI,OAAA,IAAA,KAAJ,WAAA,EAAiC;AAC/BC,cAAAA,IAAI,GAAJA,KAAAA;AACAnC,cAAAA,KAAK,GAALA,CAAAA;AACAoC,cAAAA,IAAI,GAAJA,CAAAA;AAHF,aAAA,MAIO,IAAI,CAAJ,IAAA,EAAW;AAChBA,cAAAA,IAAI,GAAJA,CAAAA;AACD;;AAED,gBAAMhoB,GAAG,GAAT,EAAA;;AACA,gBAAIgoB,IAAI,GAAR,CAAA,EAAc;AACZ,mBAAK,IAAIppB,CAAC,GAAV,KAAA,EAAoBA,CAAC,GAArB,IAAA,EAA8BA,CAAC,IAA/B,IAAA,EAAyC;AACvCoB,gBAAAA,GAAG,CAAHA,IAAAA,CAAAA,CAAAA;AACD;AAHH,aAAA,MAIO;AACL,mBAAK,IAAIpB,EAAC,GAAV,KAAA,EAAoBA,EAAC,GAArB,IAAA,EAA8BA,EAAC,IAA/B,IAAA,EAAyC;AAAE;AACzCoB,gBAAAA,GAAG,CAAHA,IAAAA,CAAAA,EAAAA;AACD;AACF;;AACD,mBAAA,GAAA;AApBG,WAAA;AAuBLioB,UAAAA,MAvBK,EAAA,SAAA,MAAA,GAuBI;AACP,mBAAOA,OAAM,CAACjrB,KAAK,CAALA,SAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAAd,SAAcA,CAAD,CAAb;AAxBG,WAAA;AA2BLkrB,UAAAA,MA3BK,EAAA,SAAA,MAAA,CAAA,GAAA,EA2BO;AACV,mBAAOA,OAAM,CAAb,GAAa,CAAb;AACD;AA7BI,SAAP;AA+BD;;AAED5qB,MAAAA,MAAM,CAANA,OAAAA,GAAAA,OAAAA;;;;;;;ACxEA,UAAMe,IAAI,GAAGyC,mBAAO,CAApB,CAAoB,CAApB;;AAEAxD,MAAAA,MAAM,CAANA,OAAAA,GAAiB,SAAA,OAAA,CAAA,GAAA,EAAA,GAAA,EAA2B;AAC1C,iBAAA,YAAA,CAAA,IAAA,EAAA,IAAA,EAAkC;AAChC,eAAA,IAAA,GAAA,IAAA;AACA,eAAA,IAAA,GAAA,IAAA;AACA,eAAA,aAAA,GAAqBoU,IAAI,CAAzB,aAAA;AACA,eAAA,GAAA,GAAWrT,IAAI,CAAJA,OAAAA,CAAX,IAAWA,CAAX;;AACA,cAAI,CAAC,KAAD,GAAA,IAAa,CAAC,KAAlB,aAAA,EAAsC;AACpC,kBAAM,IAAA,KAAA,CAAN,gEAAM,CAAN;AACD;;AACD,cAAI,CAAC,KAAL,GAAA,EAAe;AACb,iBAAA,IAAA,IAAc,KAAA,GAAA,GAAW,CAAC,KAAA,aAAA,CAAA,CAAA,MAAA,GAAA,GAAA,GAAA,GAAD,EAAA,IAA6C,KAAtE,aAAA;AACD;AACF;;AAED8pB,QAAAA,YAAY,CAAZA,SAAAA,CAAAA,MAAAA,GAAgC,SAAA,MAAA,CAAA,IAAA,EAAA,EAAA,EAA0B;AACxDjT,UAAAA,GAAG,CAAHA,MAAAA,CAAW,KAAXA,IAAAA,EAAAA,IAAAA,EAAAA,EAAAA;AADFiT,SAAAA;;AAIAC,QAAAA,GAAG,CAAHA,GAAAA,CAAAA,MAAAA,EAAAA,YAAAA;AACAA,QAAAA,GAAG,CAAHA,GAAAA,CAAAA,aAAAA,EAAAA,GAAAA;AACA,eAAA,GAAA;AApBF9qB,OAAAA;;;;;;;;;;ACAA,UAAM+qB,EAAE,GAAGvnB,mBAAO,CAAlB,CAAkB,CAAlB;;AACA,UAAMzC,IAAI,GAAGyC,mBAAO,CAApB,CAAoB,CAApB;;qBACyBA,mBAAO,CAAA,CAAA,C;UAAzBwnB,c,YAAAA,c;;AACP,UAAMnW,QAAQ,GAAGrR,mBAAO,CAAxB,CAAwB,CAAxB;;sBACsBA,mBAAO,CAAA,CAAA,C;UAAtBgS,W,aAAAA,W;;AACP,UAAMyV,gBAAgB,GAAGznB,mBAAO,CAAhC,EAAgC,CAAhC;;AAEA,eAAA,KAAA,CAAA,QAAA,EAAA,QAAA,EAAmC;AACjC,YAAI,CAAC9D,KAAK,CAALA,OAAAA,CAAL,QAAKA,CAAL,EAA8B;AAC5B,iBAAA,KAAA;AACD;;AACD,eAAO,QAAQ,CAAR,IAAA,CAAc,UAAA,OAAA,EAAA;AAAA,iBAAagV,QAAQ,CAARA,KAAAA,CAAb,OAAaA,CAAb;AAArB,SAAO,CAAP;AACD;;AAED,eAAA,gBAAA,CAAA,GAAA,EAAA,IAAA,EAAqC;AACnCN,QAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AACAA,QAAAA,IAAI,CAAJA,QAAAA,GAAAA,IAAAA;AACA,YAAMwD,GAAG,GAAGxD,IAAI,CAAJA,GAAAA,IAAY,IAAA,WAAA,CAAxB,EAAwB,CAAxB;AACA,YAAM8W,OAAO,GAAG9W,IAAI,CAAJA,OAAAA,IAAhB,gBAAA;;AAEA,YAAI,CAACA,IAAI,CAAT,IAAA,EAAgB;AACd,gBAAM,IAAA,KAAA,CAAN,uDAAM,CAAN;AACD;;AACD,eAAO8W,OAAO,CAAC,CAACC,WAAW,CAAA,GAAA,EAAM/W,IAAI,CAAV,IAAA,EAAb,GAAa,CAAZ,CAAD,EAAd,IAAc,CAAd;AACD;;AAED,eAAA,UAAA,CAAA,KAAA,EAAA,IAAA,EAAiC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,QAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AACA,YAAMwD,GAAG,GAAGxD,IAAI,CAAJA,GAAAA,IAAY,IAAA,WAAA,CAAxB,EAAwB,CAAxB;AACA,YAAM8W,OAAO,GAAG9W,IAAI,CAAJA,OAAAA,IAAhB,gBAAA;;AAEA,YAAIA,IAAI,CAAR,QAAA,EAAmB;AACjB,iBAAO8Q,gBAAgB,CAAA,KAAA,EAAvB,IAAuB,CAAvB;AACD;;AAED,YAAMkG,SAAS,GAAGL,EAAE,CAAFA,UAAAA,CAAAA,KAAAA,KAAwBA,EAAE,CAAFA,QAAAA,CAA1C,KAA0CA,CAA1C;AACA,YAAMM,WAAW,GAAjB,EAAA;AACA,YAAMC,SAAS,GAAf,EAAA;;AAEA,iBAAA,YAAA,CAAA,GAAA,EAA2B;AACzBP,UAAAA,EAAE,CAAFA,WAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAA4B,UAAA,IAAA,EAAU;AACpC,gBAAMQ,QAAQ,GAAGxqB,IAAI,CAAJA,IAAAA,CAAAA,GAAAA,EAAjB,IAAiBA,CAAjB;AACA,gBAAIyqB,OAAO,GAAGD,QAAQ,CAARA,MAAAA,CAAgBxqB,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,EAAAA,GAAAA,EAA9B,MAAcwqB,CAAd;AACA,gBAAME,IAAI,GAAGV,EAAE,CAAFA,QAAAA,CAAb,QAAaA,CAAb;;AAEA,gBAAIU,IAAI,IAAIA,IAAI,CAAhB,WAAYA,EAAZ,EAAgC;AAC9BD,cAAAA,OAAO,IAAPA,GAAAA;;AACA,kBAAI,CAACE,KAAK,CAAA,OAAA,EAAUtX,IAAI,CAAxB,OAAU,CAAV,EAAmC;AACjCuX,gBAAAA,YAAY,CAAZA,QAAY,CAAZA;AACD;AAJH,aAAA,MAKO,IAAID,KAAK,CAAA,OAAA,EAAUtX,IAAI,CAAvB,OAAS,CAAT,EAAkC;AACvCkX,cAAAA,SAAS,CAATA,IAAAA,CAAAA,QAAAA;AACD;AAZHP,WAAAA;AAcD;;AAED,YAAIK,SAAS,CAAb,MAAIA,EAAJ,EAAwB;AACtBC,UAAAA,WAAW,CAAXA,IAAAA,CAAiBF,WAAW,CAC1BJ,EAAE,CAAFA,YAAAA,CAAAA,KAAAA,EAD0B,OAC1BA,CAD0B,EAE1B3W,IAAI,CAAJA,IAAAA,IAF0B,KAAA,EAA5BiX,GAA4B,CAA5BA;AADF,SAAA,MAMO,IAAID,SAAS,CAAb,WAAIA,EAAJ,EAA6B;AAClCO,UAAAA,YAAY,CAAZA,KAAY,CAAZA;;AAEA,eAAK,IAAIrqB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGgqB,SAAS,CAA7B,MAAA,EAAsChqB,CAAtC,EAAA,EAA2C;AACzC,gBAAM8C,IAAI,GAAGknB,SAAS,CAATA,CAAS,CAATA,CAAAA,OAAAA,CAAqBvqB,IAAI,CAAJA,IAAAA,CAAAA,KAAAA,EAArBuqB,GAAqBvqB,CAArBuqB,EAAb,EAAaA,CAAb;;AAEA,gBAAI;AACFD,cAAAA,WAAW,CAAXA,IAAAA,CAAiBF,WAAW,CAC1BJ,EAAE,CAAFA,YAAAA,CAAgBO,SAAS,CAAzBP,CAAyB,CAAzBA,EAD0B,OAC1BA,CAD0B,EAAA,IAAA,EAA5BM,GAA4B,CAA5BA;AADF,aAAA,CAME,OAAA,CAAA,EAAU;AACV,kBAAIjX,IAAI,CAAR,KAAA,EAAgB;AACd;AACA;AACAwX,gBAAAA,OAAO,CAAPA,KAAAA,CAHc,CAGdA,EAHc,CAGI;AAHpB,eAAA,MAIO;AACL,sBAAA,CAAA;AACD;AACF;AACF;AACF;;AAED,eAAOV,OAAO,CAAA,WAAA,EAAd,IAAc,CAAd;AACD;;AAED,eAAA,WAAA,CAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAqC;AACnCtT,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAA,WAAA,CAAbA,EAAa,CAAbA;AAEA,YAAM0O,YAAY,GAAG1O,GAAG,CAAxB,YAAA;AACA,YAAMtD,UAAU,GAAGsD,GAAG,CAAtB,cAAA;AACA,YAAA,QAAA;AAEAxT,QAAAA,IAAI,GAAGA,IAAI,CAAJA,OAAAA,CAAAA,KAAAA,EAAPA,GAAOA,CAAPA;;AAEA,YAAI;AACFsW,UAAAA,QAAQ,GAAG7F,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,EAAAA,YAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAIT+C,GAAG,CAJL8C,IAAW7F,CAAX6F;AADF,SAAA,CAME,OAAA,GAAA,EAAY;AACZ,gBAAMsQ,cAAc,CAAA,IAAA,EAAA,KAAA,EAApB,GAAoB,CAApB;AACD;;AAED,eAAO;AACL5mB,UAAAA,IAAI,EADC,IAAA;AAELsW,UAAAA,QAAQ,EAAEA;AAFL,SAAP;AAID;;AAED1a,MAAAA,MAAM,CAANA,OAAAA,GAAiB;AACfwkB,QAAAA,UAAU,EADK,UAAA;AAEfU,QAAAA,gBAAgB,EAAEA;AAFH,OAAjBllB;;;;;;;;;AChIA,eAAA,gBAAA,CAAA,SAAA,EAAA,IAAA,EAA2C;AACzC,YAAI6rB,GAAG,GAAP,EAAA;AACAzX,QAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;;AAEA,aAAK,IAAI9S,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGgqB,SAAS,CAA7B,MAAA,EAAsChqB,CAAtC,EAAA,EAA2C;AACzC,cAAM8C,IAAI,GAAGmI,IAAI,CAAJA,SAAAA,CAAe+e,SAAS,CAATA,CAAS,CAATA,CAA5B,IAAa/e,CAAb;AACA,cAAMmO,QAAQ,GAAG4Q,SAAS,CAATA,CAAS,CAATA,CAAjB,QAAA;AAEAO,UAAAA,GAAG,IAAI,kBAAA,iEAAA,GAAA,GAAA,GAAA,IAAA,GAAA,qBAAA,GAAA,QAAA,GAAPA,WAAAA;;AAIA,cAAIzX,IAAI,CAAR,UAAA,EAAqB;AACnByX,YAAAA,GAAG,IAAI,uDAAA,IAAA,GAAPA,iBAAAA;AACD;;AAEDA,UAAAA,GAAG,IAAHA,SAAAA;AACD;;AACD,eAAA,GAAA;AACD;;AAED7rB,MAAAA,MAAM,CAANA,OAAAA,GAAAA,gBAAAA;;;;;;;ACvBA,eAAA,aAAA,GAAyB;AACvB;AAEA;AAEA;AACA;;AACA,YAAIykB,OAAO,GAAG,KAAd,OAAA;AACA,YAAIhhB,GAAG,GAAG,KARa,GAQvB,CARuB,CASvB;;AACA,YAAIoJ,QAAQ,GAAG,KAAA,QAAA,CAAf,QAAA;AACA,YAAIiM,MAAM,GAAG,KAAA,MAAA,CAAb,MAAA;AACA,YAAI3Q,KAAK,GAAG,KAAZ,KAAA;AACA,YAAI0Q,KAAK,GAAG,KAAZ,KAAA;AAEA,YAAIiT,yBAAyB,GAAGrH,OAAO,CAAvC,oBAAA;AACA,YAAIsH,iBAAiB,GAAGtH,OAAO,CAA/B,YAAA;AACA,YAAA,wBAAA;AACA,YAAA,0BAAA;;AACA,YAAA,QAAA,EAAc;AACZuH,UAAAA,wBAAwB,GAAGnf,QAAQ,CAARA,SAAAA,CAA3Bmf,UAAAA;AACD;;AACD,YAAA,MAAA,EAAY;AACVC,UAAAA,0BAA0B,GAAGnT,MAAM,CAANA,SAAAA,CAA7BmT,cAAAA;AACD;;AAED,iBAAA,SAAA,GAAqB;AACnBxH,UAAAA,OAAO,CAAPA,oBAAAA,GAAAA,yBAAAA;AACAA,UAAAA,OAAO,CAAPA,YAAAA,GAAAA,iBAAAA;;AACA,cAAA,QAAA,EAAc;AACZ5X,YAAAA,QAAQ,CAARA,SAAAA,CAAAA,UAAAA,GAAAA,wBAAAA;AACD;;AACD,cAAA,MAAA,EAAY;AACViM,YAAAA,MAAM,CAANA,SAAAA,CAAAA,cAAAA,GAAAA,0BAAAA;AACD;AACF;;AAED2L,QAAAA,OAAO,CAAPA,oBAAAA,GAA+B,SAAA,oBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAmD;AAChF,cAAIxjB,GAAG,GAAG6qB,yBAAyB,CAAzBA,KAAAA,CAAAA,IAAAA,EAAV,SAAUA,CAAV;;AACA,cAAI7qB,GAAG,KAAP,SAAA,EAAuB;AACrB,mBAAA,GAAA;AACD;;AACD,kBAAA,GAAA;AACE,iBAAA,MAAA;AACE,qBAAA,IAAA;;AACF,iBAAA,OAAA;AACE,qBAAA,KAAA;;AACF,iBAAA,MAAA;AACE,qBAAA,IAAA;;AACF;AACE,qBAAA,SAAA;AARJ;AALFwjB,SAAAA;;AAiBA,iBAAA,cAAA,CAAA,MAAA,EAAgC;AAC9B,iBAAO;AACLriB,YAAAA,KAAK,EAAE8pB,MAAM,CADR,KAAA;AAEL3lB,YAAAA,MAAM,EAAE2lB,MAAM,CAFT,MAAA;AAGL1lB,YAAAA,KAAK,EAAE0lB,MAAM,CAAC1lB;AAHT,WAAP;AAKD;;AAED,YAAIyF,UAAAA,MAAAA,IAAAA,KAAAA,IAAAA,QAAAA,IAAJ,MAAA,EAAsE;AAAE;AACtE,cAAMkgB,KAAK,GAAG,KAAK,CAAL,IAAA,CAAA,MAAA,CAAA,OAAA,EAA2B;AACvCzjB,YAAAA,MAAM,EAAE,CAAA,OAAA,EAAA,MAAA,EAD+B,MAC/B,CAD+B;AAEvCxE,YAAAA,IAFuC,EAAA,SAAA,IAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAEA;AACrCokB,cAAAA,KAAK,GAAGA,KAAK,IAAI,IAAIngB,KAAK,CAAT,OAAA,CAAA,MAAA,EAAA,KAAA,EAAjBmgB,IAAiB,CAAjBA;AACAmC,cAAAA,IAAI,GAAGA,IAAI,IAAI,IAAItiB,KAAK,CAAT,OAAA,CAAA,MAAA,EAAA,KAAA,EAAfsiB,IAAe,CAAfA;AACAC,cAAAA,IAAI,GAAGA,IAAI,IAAI,IAAIviB,KAAK,CAAT,OAAA,CAAA,MAAA,EAAA,KAAA,EAAfuiB,CAAe,CAAfA;AACA,mBAAA,MAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA;AACD;AAPsC,WAA3B,CAAd;;AAUA7d,UAAAA,QAAQ,CAARA,SAAAA,CAAAA,UAAAA,GAAgC,SAAA,UAAA,CAAA,IAAA,EAA0B;AACxD,gBAAIR,IAAI,YAAR,KAAA,EAA2B;AACzB;AACD;;AACD2f,YAAAA,wBAAwB,CAAxBA,KAAAA,CAAAA,IAAAA,EAAAA,SAAAA;AAJFnf,WAAAA;;AAMAA,UAAAA,QAAQ,CAARA,SAAAA,CAAAA,YAAAA,GAAkC,SAAA,YAAA,CAAA,IAAA,EAAA,KAAA,EAAmC;AACnE,iBAAA,KAAA,CAAA,GAAA;;AACA,iBAAA,kBAAA,CAAwBR,IAAI,CAA5B,KAAA,EAAA,KAAA;;AACA,iBAAA,KAAA,CAAA,KAAA;;AACA,iBAAA,kBAAA,CAAwBA,IAAI,CAA5B,IAAA,EAAA,KAAA;;AACA,iBAAA,KAAA,CAAA,KAAA;;AACA,iBAAA,kBAAA,CAAwBA,IAAI,CAA5B,IAAA,EAAA,KAAA;;AACA,iBAAA,KAAA,CAAA,GAAA;AAPFQ,WAAAA;;AAUAiM,UAAAA,MAAM,CAANA,SAAAA,CAAAA,cAAAA,GAAkC,SAAA,cAAA,GAA0B;AAAA,gBAAA,KAAA,GAAA,IAAA;;AAC1D,gBAAIsT,SAAS,GAAGC,cAAc,CAAC,KAD2B,MAC5B,CAA9B,CAD0D,CAE1D;;AACAD,YAAAA,SAAS,CAATA,KAAAA;AACAA,YAAAA,SAAS,CAATA,KAAAA;;AACA,gBAAI;AACF,qBAAOH,0BAA0B,CAA1BA,KAAAA,CAAP,IAAOA,CAAP;AADF,aAAA,CAEE,OAAA,CAAA,EAAU;AACV,kBAAMK,QAAQ,GAAGD,cAAc,CAAC,KAAhC,MAA+B,CAA/B;;AACA,kBAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB9oB,gBAAAA,GAAG,CAAHA,OAAAA,CAAY,KAAI,CAAhBA,MAAAA,EAAAA,QAAAA;;AACA,uBAAA,CAAA;AAJQ,eAEV,CAFU,CAOV;;;AACAA,cAAAA,GAAG,CAAHA,OAAAA,CAAY,KAAZA,MAAAA,EAAAA,SAAAA;;AACA,mBAAA,MAAA,GAAA,KAAA;AAEA,kBAAMuV,GAAG,GAAG,KAAZ,SAAY,EAAZ;;AACA,kBAAIA,GAAG,CAAHA,IAAAA,KAAaH,KAAK,CAAtB,kBAAA,EAA2C;AACzC,sBAAM0T,OAAN,EAAA;AADF,eAAA,MAEO;AACL,qBAAA,SAAA;AACD;;AAED,kBAAMlgB,IAAI,GAAG,IAAA,KAAA,CAAU2M,GAAG,CAAb,MAAA,EAAsBA,GAAG,CAlB5B,KAkBG,CAAb,CAlBU,CAoBV;AACA;;AACA,kBAAIwT,OAAO,GAAX,KAAA;;AAEA,mBAAK,IAAIlrB,CAAC,GAAV,CAAA,EAAgBA,CAAC,IAAI+K,IAAI,CAAJA,MAAAA,CAArB,MAAA,EAAyC/K,CAAzC,EAAA,EAA8C;AAC5C,oBAAI,KAAA,IAAA,CAAUuX,KAAK,CAAnB,mBAAI,CAAJ,EAA0C;AACxC;AACD;;AACD,oBAAIvX,CAAC,KAAK+K,IAAI,CAAJA,MAAAA,CAAV,MAAA,EAA8B;AAC5B,sBAAA,OAAA,EAAa;AACX,yBAAA,IAAA,CAAA,uCAAA,EAAmD2M,GAAG,CAAtD,MAAA,EAA+DA,GAAG,CAAlE,KAAA;AADF,mBAAA,MAEO;AACL;AACD;AACF;;AACD,oBAAI,KAAA,IAAA,CAAUH,KAAK,CAAnB,WAAI,CAAJ,EAAkC;AAChC2T,kBAAAA,OAAO,GAAPA,IAAAA;AADF,iBAAA,MAEO;AACL,sBAAMC,KAAK,GAAGpgB,IAAI,CAAJA,MAAAA,CAAd,CAAcA,CAAd;AACAA,kBAAAA,IAAI,CAAJA,KAAI,CAAJA,GAAc,KAAdA,eAAc,EAAdA;AACAmgB,kBAAAA,OAAO,GAAG,KAAA,IAAA,CAAU3T,KAAK,CAAf,WAAA,KAAV2T,OAAAA;AACD;AACF;;AACD,kBAAI,CAAJ,OAAA,EAAc;AACZ,sBAAMD,OAAN,EAAA;AACD;;AACD,qBAAO,IAAIpkB,KAAK,CAAT,KAAA,CAAgB6Q,GAAG,CAAnB,MAAA,EAA4BA,GAAG,CAA/B,KAAA,EAAuC,CAA9C,IAA8C,CAAvC,CAAP;AACD;AAtDHF,WAAAA;AAwDD;;AAED,iBAAA,WAAA,CAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAA6C;AAC3CjX,UAAAA,GAAG,GAAGA,GAAG,IAATA,EAAAA;;AACA,cAAIymB,KAAK,KAAT,IAAA,EAAoB;AAClBA,YAAAA,KAAK,GAAIoC,IAAI,GAAL,CAACA,GAAa7oB,GAAG,CAAHA,MAAAA,GAAd,CAAC6oB,GAATpC,CAAAA;AACD;;AACD,cAAImC,IAAI,KAAR,IAAA,EAAmB;AACjBA,YAAAA,IAAI,GAAIC,IAAI,GAAL,CAACA,GAAY,CAAb,CAACA,GAAiB7oB,GAAG,CAA5B4oB,MAAAA;AADF,WAAA,MAEO,IAAIA,IAAI,GAAR,CAAA,EAAc;AACnBA,YAAAA,IAAI,IAAI5oB,GAAG,CAAX4oB,MAAAA;AACD;;AAED,cAAInC,KAAK,GAAT,CAAA,EAAe;AACbA,YAAAA,KAAK,IAAIzmB,GAAG,CAAZymB,MAAAA;AACD;;AAED,cAAM7lB,OAAO,GAAb,EAAA;;AAEA,eAAK,IAAInB,CAAC,GAAV,KAAA,GAAsBA,CAAC,IAAvB,IAAA,EAAiC;AAC/B,gBAAIA,CAAC,GAADA,CAAAA,IAASA,CAAC,GAAGO,GAAG,CAApB,MAAA,EAA6B;AAC3B;AACD;;AACD,gBAAI6oB,IAAI,GAAJA,CAAAA,IAAYppB,CAAC,IAAjB,IAAA,EAA2B;AACzB;AACD;;AACD,gBAAIopB,IAAI,GAAJA,CAAAA,IAAYppB,CAAC,IAAjB,IAAA,EAA2B;AACzB;AACD;;AACDmB,YAAAA,OAAO,CAAPA,IAAAA,CAAagiB,OAAO,CAAPA,YAAAA,CAAAA,GAAAA,EAAbhiB,CAAagiB,CAAbhiB;AACD;;AACD,iBAAA,OAAA;AACD;;AAED,iBAAA,UAAA,CAAA,GAAA,EAAA,GAAA,EAA8B;AAC5B,iBAAO7C,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,GAAAA,EAAP,GAAOA,CAAP;AACD;;AAED,YAAM8sB,aAAa,GAAG;AACpBvnB,UAAAA,GADoB,EAAA,SAAA,GAAA,CAAA,KAAA,EACT;AACT,gBAAI/C,KAAK,KAAT,SAAA,EAAyB;AACvB,qBAAO,KAAP,GAAO,EAAP;AACD;;AACD,gBAAIA,KAAK,IAAI,KAATA,MAAAA,IAAwBA,KAAK,GAAjC,CAAA,EAAuC;AACrC,oBAAM,IAAA,KAAA,CAAN,UAAM,CAAN;AACD;;AACD,mBAAO,KAAA,MAAA,CAAA,KAAA,EAAP,CAAO,CAAP;AARkB,WAAA;AAUpBuqB,UAAAA,MAVoB,EAAA,SAAA,MAAA,CAAA,OAAA,EAUJ;AACd,mBAAO,KAAA,IAAA,CAAP,OAAO,CAAP;AAXkB,WAAA;AAapBC,UAAAA,MAboB,EAAA,SAAA,MAAA,CAAA,OAAA,EAaJ;AACd,iBAAK,IAAItrB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG,KAApB,MAAA,EAAiCA,CAAjC,EAAA,EAAsC;AACpC,kBAAI,KAAA,CAAA,MAAJ,OAAA,EAAyB;AACvB,uBAAO,KAAA,MAAA,CAAA,CAAA,EAAP,CAAO,CAAP;AACD;AACF;;AACD,kBAAM,IAAA,KAAA,CAAN,YAAM,CAAN;AAnBkB,WAAA;AAqBpBumB,UAAAA,KArBoB,EAAA,SAAA,KAAA,CAAA,OAAA,EAqBL;AACb,gBAAIA,KAAK,GAAT,CAAA;;AACA,iBAAK,IAAIvmB,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG,KAApB,MAAA,EAAiCA,CAAjC,EAAA,EAAsC;AACpC,kBAAI,KAAA,CAAA,MAAJ,OAAA,EAAyB;AACvBumB,gBAAAA,KAAK;AACN;AACF;;AACD,mBAAA,KAAA;AA5BkB,WAAA;AA8BpBzlB,UAAAA,KA9BoB,EAAA,SAAA,KAAA,CAAA,OAAA,EA8BL;AACb,gBAAA,CAAA;;AACA,gBAAI,CAACd,CAAC,GAAG,KAAA,OAAA,CAAL,OAAK,CAAL,MAAgC,CAApC,CAAA,EAAwC;AACtC,oBAAM,IAAA,KAAA,CAAN,YAAM,CAAN;AACD;;AACD,mBAAA,CAAA;AAnCkB,WAAA;AAqCpBurB,UAAAA,IArCoB,EAAA,SAAA,IAAA,CAAA,OAAA,EAqCN;AACZ,mBAAO,KAAA,OAAA,CAAP,OAAO,CAAP;AAtCkB,WAAA;AAwCpBC,UAAAA,MAxCoB,EAAA,SAAA,MAAA,CAAA,KAAA,EAAA,IAAA,EAwCA;AAClB,mBAAO,KAAA,MAAA,CAAA,KAAA,EAAA,CAAA,EAAP,IAAO,CAAP;AACD;AA1CmB,SAAtB;AA4CA,YAAMC,cAAc,GAAG;AACrBzC,UAAAA,KADqB,EAAA,SAAA,KAAA,GACb;AACN,mBAAO7mB,GAAG,CAAHA,QAAAA,CAAP,IAAOA,CAAP;AAFmB,WAAA;AAIrBupB,UAAAA,MAJqB,EAAA,SAAA,MAAA,GAIZ;AACP,mBAAOvpB,GAAG,CAAHA,OAAAA,CAAP,IAAOA,CAAP;AALmB,WAAA;AAOrBX,UAAAA,IAPqB,EAAA,SAAA,IAAA,GAOd;AACL,mBAAOW,GAAG,CAAHA,IAAAA,CAAP,IAAOA,CAAP;AARmB,WAAA;AAUrB5C,UAAAA,GAVqB,EAAA,SAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAUP;AACZ,gBAAI2Q,MAAM,GAAG,KAAb,GAAa,CAAb;;AACA,gBAAIA,MAAM,KAAV,SAAA,EAA0B;AACxBA,cAAAA,MAAM,GAANA,GAAAA;AACD;;AACD,mBAAA,MAAA;AAfmB,WAAA;AAiBrByb,UAAAA,OAjBqB,EAAA,SAAA,OAAA,CAAA,GAAA,EAiBR;AACX,mBAAOzrB,UAAU,CAAA,IAAA,EAAjB,GAAiB,CAAjB;AAlBmB,WAAA;AAoBrB2D,UAAAA,GApBqB,EAAA,SAAA,GAAA,CAAA,GAAA,EAAA,GAAA,EAoBP;AACZ,gBAAIqM,MAAM,GAAG,KAAb,GAAa,CAAb;;AACA,gBAAIA,MAAM,KAANA,SAAAA,IAAwB0b,GAAG,KAA/B,SAAA,EAA+C;AAC7C1b,cAAAA,MAAM,GAANA,GAAAA;AADF,aAAA,MAEO,IAAIA,MAAM,KAAV,SAAA,EAA0B;AAC/B,oBAAM,IAAA,KAAA,CAAN,UAAM,CAAN;AADK,aAAA,MAEA;AACL,qBAAO,KAAP,GAAO,CAAP;AACD;;AACD,mBAAA,MAAA;AA7BmB,WAAA;AA+BrB2b,UAAAA,OA/BqB,EAAA,SAAA,OAAA,GA+BX;AACR,gBAAMrqB,IAAI,GAAGW,GAAG,CAAHA,IAAAA,CAAb,IAAaA,CAAb;;AACA,gBAAI,CAACX,IAAI,CAAT,MAAA,EAAkB;AAChB,oBAAM,IAAA,KAAA,CAAN,UAAM,CAAN;AACD;;AACD,gBAAMG,CAAC,GAAGH,IAAI,CAAd,CAAc,CAAd;AACA,gBAAM7B,GAAG,GAAG,KAAZ,CAAY,CAAZ;AACA,mBAAO,KAAP,CAAO,CAAP;AACA,mBAAO,CAAA,CAAA,EAAP,GAAO,CAAP;AAvCmB,WAAA;AAyCrBmsB,UAAAA,UAzCqB,EAAA,SAAA,UAAA,CAAA,GAAA,EAAA,GAAA,EAyCO;AAAA,gBAAZF,GAAY,KAAA,KAAA,CAAA,EAAA;AAAZA,cAAAA,GAAY,GAAN,IAANA;AAAY;;AAC1B,gBAAI,EAAEprB,GAAG,IAAT,IAAI,CAAJ,EAAoB;AAClB,mBAAA,GAAA,IAAA,GAAA;AACD;;AACD,mBAAO,KAAP,GAAO,CAAP;AA7CmB,WAAA;AA+CrBurB,UAAAA,MA/CqB,EAAA,SAAA,MAAA,CAAA,MAAA,EA+CN;AACb5pB,YAAAA,GAAG,CAAHA,OAAAA,CAAAA,IAAAA,EAAAA,MAAAA;;AACA,mBAFa,IAEb,CAFa,CAEA;AACd;AAlDoB,SAAvB;AAoDAspB,QAAAA,cAAc,CAAdA,SAAAA,GAA2BA,cAAc,CAAzCA,KAAAA;AACAA,QAAAA,cAAc,CAAdA,UAAAA,GAA4BA,cAAc,CAA1CA,MAAAA;AACAA,QAAAA,cAAc,CAAdA,QAAAA,GAA0BA,cAAc,CAAxCA,IAAAA;;AAEAtI,QAAAA,OAAO,CAAPA,YAAAA,GAAuB,SAAA,YAAA,CAAA,GAAA,EAAA,GAAA,EAAA,UAAA,EAA4C;AACjE,cAAI5c,SAAS,CAATA,MAAAA,KAAJ,CAAA,EAA4B;AAC1B,mBAAOylB,WAAW,CAAXA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AACD;;AACDzrB,UAAAA,GAAG,GAAGA,GAAG,IAJwD,EAIjEA,CAJiE,CAMjE;AACA;;AACA,cAAI4B,GAAG,CAAHA,OAAAA,CAAAA,GAAAA,KAAoBjC,UAAU,CAAA,aAAA,EAAlC,GAAkC,CAAlC,EAAwD;AACtD,mBAAOkrB,aAAa,CAAbA,GAAa,CAAbA,CAAAA,IAAAA,CAAP,GAAOA,CAAP;AACD;;AACD,cAAIjpB,GAAG,CAAHA,QAAAA,CAAAA,GAAAA,KAAqBjC,UAAU,CAAA,cAAA,EAAnC,GAAmC,CAAnC,EAA0D;AACxD,mBAAOurB,cAAc,CAAdA,GAAc,CAAdA,CAAAA,IAAAA,CAAP,GAAOA,CAAP;AACD;;AAED,iBAAOhB,iBAAiB,CAAjBA,KAAAA,CAAAA,IAAAA,EAAP,SAAOA,CAAP;AAfFtH,SAAAA;;AAkBA,eAAA,SAAA;AACD;;AAEDzkB,MAAAA,MAAM,CAANA,OAAAA,GAAAA,aAAAA;;;;;A1BtSA;CAVA","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nunjucks\"] = factory();\n\telse\n\t\troot[\"nunjucks\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 679ff8296d850238baf3","'use strict';\n\nvar ArrayProto = Array.prototype;\nvar ObjProto = Object.prototype;\n\nvar escapeMap = {\n  '&': '&amp;',\n  '\"': '&quot;',\n  '\\'': '&#39;',\n  '<': '&lt;',\n  '>': '&gt;'\n};\n\nvar escapeRegex = /[&\"'<>]/g;\n\nvar exports = module.exports = {};\n\nfunction hasOwnProp(obj, k) {\n  return ObjProto.hasOwnProperty.call(obj, k);\n}\n\nexports.hasOwnProp = hasOwnProp;\n\nfunction lookupEscape(ch) {\n  return escapeMap[ch];\n}\n\nfunction _prettifyError(path, withInternals, err) {\n  if (!err.Update) {\n    // not one of ours, cast it\n    err = new exports.TemplateError(err);\n  }\n  err.Update(path);\n\n  // Unless they marked the dev flag, show them a trace from here\n  if (!withInternals) {\n    const old = err;\n    err = new Error(old.message);\n    err.name = old.name;\n  }\n\n  return err;\n}\n\nexports._prettifyError = _prettifyError;\n\nfunction TemplateError(message, lineno, colno) {\n  var err;\n  var cause;\n\n  if (message instanceof Error) {\n    cause = message;\n    message = `${cause.name}: ${cause.message}`;\n  }\n\n  if (Object.setPrototypeOf) {\n    err = new Error(message);\n    Object.setPrototypeOf(err, TemplateError.prototype);\n  } else {\n    err = this;\n    Object.defineProperty(err, 'message', {\n      enumerable: false,\n      writable: true,\n      value: message,\n    });\n  }\n\n  Object.defineProperty(err, 'name', {\n    value: 'Template render error',\n  });\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(err, this.constructor);\n  }\n\n  let getStack;\n\n  if (cause) {\n    const stackDescriptor = Object.getOwnPropertyDescriptor(cause, 'stack');\n    getStack = stackDescriptor && (stackDescriptor.get || (() => stackDescriptor.value));\n    if (!getStack) {\n      getStack = () => cause.stack;\n    }\n  } else {\n    const stack = (new Error(message)).stack;\n    getStack = (() => stack);\n  }\n\n  Object.defineProperty(err, 'stack', {\n    get: () => getStack.call(err),\n  });\n\n  Object.defineProperty(err, 'cause', {\n    value: cause\n  });\n\n  err.lineno = lineno;\n  err.colno = colno;\n  err.firstUpdate = true;\n\n  err.Update = function Update(path) {\n    let msg = '(' + (path || 'unknown path') + ')';\n\n    // only show lineno + colno next to path of template\n    // where error occurred\n    if (this.firstUpdate) {\n      if (this.lineno && this.colno) {\n        msg += ` [Line ${this.lineno}, Column ${this.colno}]`;\n      } else if (this.lineno) {\n        msg += ` [Line ${this.lineno}]`;\n      }\n    }\n\n    msg += '\\n ';\n    if (this.firstUpdate) {\n      msg += ' ';\n    }\n\n    this.message = msg + (this.message || '');\n    this.firstUpdate = false;\n    return this;\n  };\n\n  return err;\n}\n\n\nif (Object.setPrototypeOf) {\n  Object.setPrototypeOf(TemplateError.prototype, Error.prototype);\n} else {\n  TemplateError.prototype = Object.create(Error.prototype, {\n    constructor: {\n      value: TemplateError,\n    },\n  });\n}\n\nexports.TemplateError = TemplateError;\n\nfunction escape(val) {\n  return val.replace(escapeRegex, lookupEscape);\n}\n\nexports.escape = escape;\n\nfunction isFunction(obj) {\n  return ObjProto.toString.call(obj) === '[object Function]';\n}\n\nexports.isFunction = isFunction;\n\nfunction isArray(obj) {\n  return ObjProto.toString.call(obj) === '[object Array]';\n}\n\nexports.isArray = isArray;\n\nfunction isString(obj) {\n  return ObjProto.toString.call(obj) === '[object String]';\n}\n\nexports.isString = isString;\n\nfunction isObject(obj) {\n  return ObjProto.toString.call(obj) === '[object Object]';\n}\n\nexports.isObject = isObject;\n\n/**\n * @param {string|number} attr\n * @returns {(string|number)[]}\n * @private\n */\nfunction _prepareAttributeParts(attr) {\n  if (!attr) {\n    return [];\n  }\n\n  if (typeof attr === 'string') {\n    return attr.split('.');\n  }\n\n  return [attr];\n}\n\n/**\n * @param {string}   attribute      Attribute value. Dots allowed.\n * @returns {function(Object): *}\n */\nfunction getAttrGetter(attribute) {\n  const parts = _prepareAttributeParts(attribute);\n\n  return function attrGetter(item) {\n    let _item = item;\n\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n\n      // If item is not an object, and we still got parts to handle, it means\n      // that something goes wrong. Just roll out to undefined in that case.\n      if (hasOwnProp(_item, part)) {\n        _item = _item[part];\n      } else {\n        return undefined;\n      }\n    }\n\n    return _item;\n  };\n}\n\nexports.getAttrGetter = getAttrGetter;\n\nfunction groupBy(obj, val, throwOnUndefined) {\n  const result = {};\n  const iterator = isFunction(val) ? val : getAttrGetter(val);\n  for (let i = 0; i < obj.length; i++) {\n    const value = obj[i];\n    const key = iterator(value, i);\n    if (key === undefined && throwOnUndefined === true) {\n      throw new TypeError(`groupby: attribute \"${val}\" resolved to undefined`);\n    }\n    (result[key] || (result[key] = [])).push(value);\n  }\n  return result;\n}\n\nexports.groupBy = groupBy;\n\nfunction toArray(obj) {\n  return Array.prototype.slice.call(obj);\n}\n\nexports.toArray = toArray;\n\nfunction without(array) {\n  const result = [];\n  if (!array) {\n    return result;\n  }\n  const length = array.length;\n  const contains = toArray(arguments).slice(1);\n  let index = -1;\n\n  while (++index < length) {\n    if (indexOf(contains, array[index]) === -1) {\n      result.push(array[index]);\n    }\n  }\n  return result;\n}\n\nexports.without = without;\n\nfunction repeat(char_, n) {\n  var str = '';\n  for (let i = 0; i < n; i++) {\n    str += char_;\n  }\n  return str;\n}\n\nexports.repeat = repeat;\n\nfunction each(obj, func, context) {\n  if (obj == null) {\n    return;\n  }\n\n  if (ArrayProto.forEach && obj.forEach === ArrayProto.forEach) {\n    obj.forEach(func, context);\n  } else if (obj.length === +obj.length) {\n    for (let i = 0, l = obj.length; i < l; i++) {\n      func.call(context, obj[i], i, obj);\n    }\n  }\n}\n\nexports.each = each;\n\nfunction map(obj, func) {\n  var results = [];\n  if (obj == null) {\n    return results;\n  }\n\n  if (ArrayProto.map && obj.map === ArrayProto.map) {\n    return obj.map(func);\n  }\n\n  for (let i = 0; i < obj.length; i++) {\n    results[results.length] = func(obj[i], i);\n  }\n\n  if (obj.length === +obj.length) {\n    results.length = obj.length;\n  }\n\n  return results;\n}\n\nexports.map = map;\n\nfunction asyncIter(arr, iter, cb) {\n  let i = -1;\n\n  function next() {\n    i++;\n\n    if (i < arr.length) {\n      iter(arr[i], i, next, cb);\n    } else {\n      cb();\n    }\n  }\n\n  next();\n}\n\nexports.asyncIter = asyncIter;\n\nfunction asyncFor(obj, iter, cb) {\n  const keys = keys_(obj || {});\n  const len = keys.length;\n  let i = -1;\n\n  function next() {\n    i++;\n    const k = keys[i];\n\n    if (i < len) {\n      iter(k, obj[k], i, len, next);\n    } else {\n      cb();\n    }\n  }\n\n  next();\n}\n\nexports.asyncFor = asyncFor;\n\nfunction indexOf(arr, searchElement, fromIndex) {\n  return Array.prototype.indexOf.call(arr || [], searchElement, fromIndex);\n}\n\nexports.indexOf = indexOf;\n\nfunction keys_(obj) {\n  /* eslint-disable no-restricted-syntax */\n  const arr = [];\n  for (let k in obj) {\n    if (hasOwnProp(obj, k)) {\n      arr.push(k);\n    }\n  }\n  return arr;\n}\n\nexports.keys = keys_;\n\nfunction _entries(obj) {\n  return keys_(obj).map((k) => [k, obj[k]]);\n}\n\nexports._entries = _entries;\n\nfunction _values(obj) {\n  return keys_(obj).map((k) => obj[k]);\n}\n\nexports._values = _values;\n\nfunction extend(obj1, obj2) {\n  obj1 = obj1 || {};\n  keys_(obj2).forEach(k => {\n    obj1[k] = obj2[k];\n  });\n  return obj1;\n}\n\nexports._assign = exports.extend = extend;\n\nfunction inOperator(key, val) {\n  if (isArray(val) || isString(val)) {\n    return val.indexOf(key) !== -1;\n  } else if (isObject(val)) {\n    return key in val;\n  }\n  throw new Error('Cannot use \"in\" operator to search for \"'\n    + key + '\" in unexpected types.');\n}\n\nexports.inOperator = inOperator;\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/lib.js","'use strict';\n\n// A simple class system, more documentation to come\nconst EventEmitter = require('events');\nconst lib = require('./lib');\n\nfunction parentWrap(parent, prop) {\n  if (typeof parent !== 'function' || typeof prop !== 'function') {\n    return prop;\n  }\n  return function wrap() {\n    // Save the current parent method\n    const tmp = this.parent;\n\n    // Set parent to the previous method, call, and restore\n    this.parent = parent;\n    const res = prop.apply(this, arguments);\n    this.parent = tmp;\n\n    return res;\n  };\n}\n\nfunction extendClass(cls, name, props) {\n  props = props || {};\n\n  lib.keys(props).forEach(k => {\n    props[k] = parentWrap(cls.prototype[k], props[k]);\n  });\n\n  class subclass extends cls {\n    get typename() {\n      return name;\n    }\n  }\n\n  lib._assign(subclass.prototype, props);\n\n  return subclass;\n}\n\nclass Obj {\n  constructor(...args) {\n    // Unfortunately necessary for backwards compatibility\n    this.init(...args);\n  }\n\n  init() {}\n\n  get typename() {\n    return this.constructor.name;\n  }\n\n  static extend(name, props) {\n    if (typeof name === 'object') {\n      props = name;\n      name = 'anonymous';\n    }\n    return extendClass(this, name, props);\n  }\n}\n\nclass EmitterObj extends EventEmitter {\n  constructor(...args) {\n    super();\n    // Unfortunately necessary for backwards compatibility\n    this.init(...args);\n  }\n\n  init() {}\n\n  get typename() {\n    return this.constructor.name;\n  }\n\n  static extend(name, props) {\n    if (typeof name === 'object') {\n      props = name;\n      name = 'anonymous';\n    }\n    return extendClass(this, name, props);\n  }\n}\n\nmodule.exports = { Obj, EmitterObj };\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/object.js","'use strict';\n\nvar lib = require('./lib');\nvar arrayFrom = Array.from;\nvar supportsIterators = (\n  typeof Symbol === 'function' && Symbol.iterator && typeof arrayFrom === 'function'\n);\n\n\n// Frames keep track of scoping both at compile-time and run-time so\n// we know how to access variables. Block tags can introduce special\n// variables, for example.\nclass Frame {\n  constructor(parent, isolateWrites) {\n    this.variables = Object.create(null);\n    this.parent = parent;\n    this.topLevel = false;\n    // if this is true, writes (set) should never propagate upwards past\n    // this frame to its parent (though reads may).\n    this.isolateWrites = isolateWrites;\n  }\n\n  set(name, val, resolveUp) {\n    // Allow variables with dots by automatically creating the\n    // nested structure\n    var parts = name.split('.');\n    var obj = this.variables;\n    var frame = this;\n\n    if (resolveUp) {\n      if ((frame = this.resolve(parts[0], true))) {\n        frame.set(name, val);\n        return;\n      }\n    }\n\n    for (let i = 0; i < parts.length - 1; i++) {\n      const id = parts[i];\n\n      if (!obj[id]) {\n        obj[id] = {};\n      }\n      obj = obj[id];\n    }\n\n    obj[parts[parts.length - 1]] = val;\n  }\n\n  get(name) {\n    var val = this.variables[name];\n    if (val !== undefined) {\n      return val;\n    }\n    return null;\n  }\n\n  lookup(name) {\n    var p = this.parent;\n    var val = this.variables[name];\n    if (val !== undefined) {\n      return val;\n    }\n    return p && p.lookup(name);\n  }\n\n  resolve(name, forWrite) {\n    var p = (forWrite && this.isolateWrites) ? undefined : this.parent;\n    var val = this.variables[name];\n    if (val !== undefined) {\n      return this;\n    }\n    return p && p.resolve(name);\n  }\n\n  push(isolateWrites) {\n    return new Frame(this, isolateWrites);\n  }\n\n  pop() {\n    return this.parent;\n  }\n}\n\nfunction makeMacro(argNames, kwargNames, func) {\n  return function macro(...macroArgs) {\n    var argCount = numArgs(macroArgs);\n    var args;\n    var kwargs = getKeywordArgs(macroArgs);\n\n    if (argCount > argNames.length) {\n      args = macroArgs.slice(0, argNames.length);\n\n      // Positional arguments that should be passed in as\n      // keyword arguments (essentially default values)\n      macroArgs.slice(args.length, argCount).forEach((val, i) => {\n        if (i < kwargNames.length) {\n          kwargs[kwargNames[i]] = val;\n        }\n      });\n      args.push(kwargs);\n    } else if (argCount < argNames.length) {\n      args = macroArgs.slice(0, argCount);\n\n      for (let i = argCount; i < argNames.length; i++) {\n        const arg = argNames[i];\n\n        // Keyword arguments that should be passed as\n        // positional arguments, i.e. the caller explicitly\n        // used the name of a positional arg\n        args.push(kwargs[arg]);\n        delete kwargs[arg];\n      }\n      args.push(kwargs);\n    } else {\n      args = macroArgs;\n    }\n\n    return func.apply(this, args);\n  };\n}\n\nfunction makeKeywordArgs(obj) {\n  obj.__keywords = true;\n  return obj;\n}\n\nfunction isKeywordArgs(obj) {\n  return obj && Object.prototype.hasOwnProperty.call(obj, '__keywords');\n}\n\nfunction getKeywordArgs(args) {\n  var len = args.length;\n  if (len) {\n    const lastArg = args[len - 1];\n    if (isKeywordArgs(lastArg)) {\n      return lastArg;\n    }\n  }\n  return {};\n}\n\nfunction numArgs(args) {\n  var len = args.length;\n  if (len === 0) {\n    return 0;\n  }\n\n  const lastArg = args[len - 1];\n  if (isKeywordArgs(lastArg)) {\n    return len - 1;\n  } else {\n    return len;\n  }\n}\n\n// A SafeString object indicates that the string should not be\n// autoescaped. This happens magically because autoescaping only\n// occurs on primitive string objects.\nfunction SafeString(val) {\n  if (typeof val !== 'string') {\n    return val;\n  }\n\n  this.val = val;\n  this.length = val.length;\n}\n\nSafeString.prototype = Object.create(String.prototype, {\n  length: {\n    writable: true,\n    configurable: true,\n    value: 0\n  }\n});\nSafeString.prototype.valueOf = function valueOf() {\n  return this.val;\n};\nSafeString.prototype.toString = function toString() {\n  return this.val;\n};\n\nfunction copySafeness(dest, target) {\n  if (dest instanceof SafeString) {\n    return new SafeString(target);\n  }\n  return target.toString();\n}\n\nfunction markSafe(val) {\n  var type = typeof val;\n\n  if (type === 'string') {\n    return new SafeString(val);\n  } else if (type !== 'function') {\n    return val;\n  } else {\n    return function wrapSafe(args) {\n      var ret = val.apply(this, arguments);\n\n      if (typeof ret === 'string') {\n        return new SafeString(ret);\n      }\n\n      return ret;\n    };\n  }\n}\n\nfunction suppressValue(val, autoescape) {\n  val = (val !== undefined && val !== null) ? val : '';\n\n  if (autoescape && !(val instanceof SafeString)) {\n    val = lib.escape(val.toString());\n  }\n\n  return val;\n}\n\nfunction ensureDefined(val, lineno, colno) {\n  if (val === null || val === undefined) {\n    throw new lib.TemplateError(\n      'attempted to output null or undefined value',\n      lineno + 1,\n      colno + 1\n    );\n  }\n  return val;\n}\n\nfunction memberLookup(obj, val) {\n  if (obj === undefined || obj === null) {\n    return undefined;\n  }\n\n  if (typeof obj[val] === 'function') {\n    return (...args) => obj[val].apply(obj, args);\n  }\n\n  return obj[val];\n}\n\nfunction callWrap(obj, name, context, args) {\n  if (!obj) {\n    throw new Error('Unable to call `' + name + '`, which is undefined or falsey');\n  } else if (typeof obj !== 'function') {\n    throw new Error('Unable to call `' + name + '`, which is not a function');\n  }\n\n  return obj.apply(context, args);\n}\n\nfunction contextOrFrameLookup(context, frame, name) {\n  var val = frame.lookup(name);\n  return (val !== undefined) ?\n    val :\n    context.lookup(name);\n}\n\nfunction handleError(error, lineno, colno) {\n  if (error.lineno) {\n    return error;\n  } else {\n    return new lib.TemplateError(error, lineno, colno);\n  }\n}\n\nfunction asyncEach(arr, dimen, iter, cb) {\n  if (lib.isArray(arr)) {\n    const len = arr.length;\n\n    lib.asyncIter(arr, function iterCallback(item, i, next) {\n      switch (dimen) {\n        case 1:\n          iter(item, i, len, next);\n          break;\n        case 2:\n          iter(item[0], item[1], i, len, next);\n          break;\n        case 3:\n          iter(item[0], item[1], item[2], i, len, next);\n          break;\n        default:\n          item.push(i, len, next);\n          iter.apply(this, item);\n      }\n    }, cb);\n  } else {\n    lib.asyncFor(arr, function iterCallback(key, val, i, len, next) {\n      iter(key, val, i, len, next);\n    }, cb);\n  }\n}\n\nfunction asyncAll(arr, dimen, func, cb) {\n  var finished = 0;\n  var len;\n  var outputArr;\n\n  function done(i, output) {\n    finished++;\n    outputArr[i] = output;\n\n    if (finished === len) {\n      cb(null, outputArr.join(''));\n    }\n  }\n\n  if (lib.isArray(arr)) {\n    len = arr.length;\n    outputArr = new Array(len);\n\n    if (len === 0) {\n      cb(null, '');\n    } else {\n      for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n\n        switch (dimen) {\n          case 1:\n            func(item, i, len, done);\n            break;\n          case 2:\n            func(item[0], item[1], i, len, done);\n            break;\n          case 3:\n            func(item[0], item[1], item[2], i, len, done);\n            break;\n          default:\n            item.push(i, len, done);\n            func.apply(this, item);\n        }\n      }\n    }\n  } else {\n    const keys = lib.keys(arr || {});\n    len = keys.length;\n    outputArr = new Array(len);\n\n    if (len === 0) {\n      cb(null, '');\n    } else {\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        func(k, arr[k], i, len, done);\n      }\n    }\n  }\n}\n\nfunction fromIterator(arr) {\n  if (typeof arr !== 'object' || arr === null || lib.isArray(arr)) {\n    return arr;\n  } else if (supportsIterators && Symbol.iterator in arr) {\n    return arrayFrom(arr);\n  } else {\n    return arr;\n  }\n}\n\nmodule.exports = {\n  Frame: Frame,\n  makeMacro: makeMacro,\n  makeKeywordArgs: makeKeywordArgs,\n  numArgs: numArgs,\n  suppressValue: suppressValue,\n  ensureDefined: ensureDefined,\n  memberLookup: memberLookup,\n  contextOrFrameLookup: contextOrFrameLookup,\n  callWrap: callWrap,\n  handleError: handleError,\n  isArray: lib.isArray,\n  keys: lib.keys,\n  SafeString: SafeString,\n  copySafeness: copySafeness,\n  markSafe: markSafe,\n  asyncEach: asyncEach,\n  asyncAll: asyncAll,\n  inOperator: lib.inOperator,\n  fromIterator: fromIterator\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/runtime.js","'use strict';\n\nconst {Obj} = require('./object');\n\nfunction traverseAndCheck(obj, type, results) {\n  if (obj instanceof type) {\n    results.push(obj);\n  }\n\n  if (obj instanceof Node) {\n    obj.findAll(type, results);\n  }\n}\n\nclass Node extends Obj {\n  init(lineno, colno, ...args) {\n    this.lineno = lineno;\n    this.colno = colno;\n\n    this.fields.forEach((field, i) => {\n      // The first two args are line/col numbers, so offset by 2\n      var val = arguments[i + 2];\n\n      // Fields should never be undefined, but null. It makes\n      // testing easier to normalize values.\n      if (val === undefined) {\n        val = null;\n      }\n\n      this[field] = val;\n    });\n  }\n\n  findAll(type, results) {\n    results = results || [];\n\n    if (this instanceof NodeList) {\n      this.children.forEach(child => traverseAndCheck(child, type, results));\n    } else {\n      this.fields.forEach(field => traverseAndCheck(this[field], type, results));\n    }\n\n    return results;\n  }\n\n  iterFields(func) {\n    this.fields.forEach((field) => {\n      func(this[field], field);\n    });\n  }\n}\n\n// Abstract nodes\nclass Value extends Node {\n  get typename() { return 'Value'; }\n  get fields() {\n    return ['value'];\n  }\n}\n\n// Concrete nodes\nclass NodeList extends Node {\n  get typename() { return 'NodeList'; }\n  get fields() { return ['children']; }\n\n  init(lineno, colno, nodes) {\n    super.init(lineno, colno, nodes || []);\n  }\n\n  addChild(node) {\n    this.children.push(node);\n  }\n}\n\nconst Root = NodeList.extend('Root');\nconst Literal = Value.extend('Literal');\nconst Symbol = Value.extend('Symbol');\nconst Group = NodeList.extend('Group');\nconst ArrayNode = NodeList.extend('Array');\nconst Pair = Node.extend('Pair', { fields: ['key', 'value'] });\nconst Dict = NodeList.extend('Dict');\nconst LookupVal = Node.extend('LookupVal', { fields: ['target', 'val'] });\nconst If = Node.extend('If', { fields: ['cond', 'body', 'else_'] });\nconst IfAsync = If.extend('IfAsync');\nconst InlineIf = Node.extend('InlineIf', { fields: ['cond', 'body', 'else_'] });\nconst For = Node.extend('For', { fields: ['arr', 'name', 'body', 'else_'] });\nconst AsyncEach = For.extend('AsyncEach');\nconst AsyncAll = For.extend('AsyncAll');\nconst Macro = Node.extend('Macro', { fields: ['name', 'args', 'body'] });\nconst Caller = Macro.extend('Caller');\nconst Import = Node.extend('Import', { fields: ['template', 'target', 'withContext'] });\n\nclass FromImport extends Node {\n  get typename() { return 'FromImport'; }\n  get fields() { return ['template', 'names', 'withContext']; }\n\n  init(lineno, colno, template, names, withContext) {\n    super.init(lineno, colno, template, names || new NodeList(), withContext);\n  }\n}\n\nconst FunCall = Node.extend('FunCall', { fields: ['name', 'args'] });\nconst Filter = FunCall.extend('Filter');\nconst FilterAsync = Filter.extend('FilterAsync', { fields: ['name', 'args', 'symbol'] });\nconst KeywordArgs = Dict.extend('KeywordArgs');\nconst Block = Node.extend('Block', { fields: ['name', 'body'] });\nconst Super = Node.extend('Super', { fields: ['blockName', 'symbol'] });\nconst TemplateRef = Node.extend('TemplateRef', { fields: ['template'] });\nconst Extends = TemplateRef.extend('Extends');\nconst Include = Node.extend('Include', { fields: ['template', 'ignoreMissing'] });\nconst Set = Node.extend('Set', { fields: ['targets', 'value'] });\nconst Switch = Node.extend('Switch', { fields: ['expr', 'cases', 'default'] });\nconst Case = Node.extend('Case', { fields: ['cond', 'body'] });\nconst Output = NodeList.extend('Output');\nconst Capture = Node.extend('Capture', { fields: ['body'] });\nconst TemplateData = Literal.extend('TemplateData');\nconst UnaryOp = Node.extend('UnaryOp', { fields: ['target'] });\nconst BinOp = Node.extend('BinOp', { fields: ['left', 'right'] });\nconst In = BinOp.extend('In');\nconst Is = BinOp.extend('Is');\nconst Or = BinOp.extend('Or');\nconst And = BinOp.extend('And');\nconst Not = UnaryOp.extend('Not');\nconst Add = BinOp.extend('Add');\nconst Concat = BinOp.extend('Concat');\nconst Sub = BinOp.extend('Sub');\nconst Mul = BinOp.extend('Mul');\nconst Div = BinOp.extend('Div');\nconst FloorDiv = BinOp.extend('FloorDiv');\nconst Mod = BinOp.extend('Mod');\nconst Pow = BinOp.extend('Pow');\nconst Neg = UnaryOp.extend('Neg');\nconst Pos = UnaryOp.extend('Pos');\nconst Compare = Node.extend('Compare', { fields: ['expr', 'ops'] });\nconst CompareOperand = Node.extend('CompareOperand', { fields: ['expr', 'type'] });\nconst CallExtension = Node.extend('CallExtension', {\n  init(ext, prop, args, contentArgs) {\n    this.parent();\n    this.extName = ext.__name || ext;\n    this.prop = prop;\n    this.args = args || new NodeList();\n    this.contentArgs = contentArgs || [];\n    this.autoescape = ext.autoescape;\n  },\n  fields: ['extName', 'prop', 'args', 'contentArgs']\n});\nconst CallExtensionAsync = CallExtension.extend('CallExtensionAsync');\n\n// This is hacky, but this is just a debugging function anyway\nfunction print(str, indent, inline) {\n  var lines = str.split('\\n');\n\n  lines.forEach((line, i) => {\n    if (line && ((inline && i > 0) || !inline)) {\n      process.stdout.write((' ').repeat(indent));\n    }\n    const nl = (i === lines.length - 1) ? '' : '\\n';\n    process.stdout.write(`${line}${nl}`);\n  });\n}\n\n// Print the AST in a nicely formatted tree format for debuggin\nfunction printNodes(node, indent) {\n  indent = indent || 0;\n\n  print(node.typename + ': ', indent);\n\n  if (node instanceof NodeList) {\n    print('\\n');\n    node.children.forEach((n) => {\n      printNodes(n, indent + 2);\n    });\n  } else if (node instanceof CallExtension) {\n    print(`${node.extName}.${node.prop}\\n`);\n\n    if (node.args) {\n      printNodes(node.args, indent + 2);\n    }\n\n    if (node.contentArgs) {\n      node.contentArgs.forEach((n) => {\n        printNodes(n, indent + 2);\n      });\n    }\n  } else {\n    let nodes = [];\n    let props = null;\n\n    node.iterFields((val, fieldName) => {\n      if (val instanceof Node) {\n        nodes.push([fieldName, val]);\n      } else {\n        props = props || {};\n        props[fieldName] = val;\n      }\n    });\n\n    if (props) {\n      print(JSON.stringify(props, null, 2) + '\\n', null, true);\n    } else {\n      print('\\n');\n    }\n\n    nodes.forEach(([fieldName, n]) => {\n      print(`[${fieldName}] =>`, indent + 2);\n      printNodes(n, indent + 4);\n    });\n  }\n}\n\nmodule.exports = {\n  Node: Node,\n  Root: Root,\n  NodeList: NodeList,\n  Value: Value,\n  Literal: Literal,\n  Symbol: Symbol,\n  Group: Group,\n  Array: ArrayNode,\n  Pair: Pair,\n  Dict: Dict,\n  Output: Output,\n  Capture: Capture,\n  TemplateData: TemplateData,\n  If: If,\n  IfAsync: IfAsync,\n  InlineIf: InlineIf,\n  For: For,\n  AsyncEach: AsyncEach,\n  AsyncAll: AsyncAll,\n  Macro: Macro,\n  Caller: Caller,\n  Import: Import,\n  FromImport: FromImport,\n  FunCall: FunCall,\n  Filter: Filter,\n  FilterAsync: FilterAsync,\n  KeywordArgs: KeywordArgs,\n  Block: Block,\n  Super: Super,\n  Extends: Extends,\n  Include: Include,\n  Set: Set,\n  Switch: Switch,\n  Case: Case,\n  LookupVal: LookupVal,\n  BinOp: BinOp,\n  In: In,\n  Is: Is,\n  Or: Or,\n  And: And,\n  Not: Not,\n  Add: Add,\n  Concat: Concat,\n  Sub: Sub,\n  Mul: Mul,\n  Div: Div,\n  FloorDiv: FloorDiv,\n  Mod: Mod,\n  Pow: Pow,\n  Neg: Neg,\n  Pos: Pos,\n  Compare: Compare,\n  CompareOperand: CompareOperand,\n\n  CallExtension: CallExtension,\n  CallExtensionAsync: CallExtensionAsync,\n\n  printNodes: printNodes\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/nodes.js","'use strict';\n\nconst parser = require('./parser');\nconst transformer = require('./transformer');\nconst nodes = require('./nodes');\nconst {TemplateError} = require('./lib');\nconst {Frame} = require('./runtime');\nconst {Obj} = require('./object');\n\n// These are all the same for now, but shouldn't be passed straight\n// through\nconst compareOps = {\n  '==': '==',\n  '===': '===',\n  '!=': '!=',\n  '!==': '!==',\n  '<': '<',\n  '>': '>',\n  '<=': '<=',\n  '>=': '>='\n};\n\nclass Compiler extends Obj {\n  init(templateName, throwOnUndefined) {\n    this.templateName = templateName;\n    this.codebuf = [];\n    this.lastId = 0;\n    this.buffer = null;\n    this.bufferStack = [];\n    this._scopeClosers = '';\n    this.inBlock = false;\n    this.throwOnUndefined = throwOnUndefined;\n  }\n\n  fail(msg, lineno, colno) {\n    if (lineno !== undefined) {\n      lineno += 1;\n    }\n    if (colno !== undefined) {\n      colno += 1;\n    }\n\n    throw new TemplateError(msg, lineno, colno);\n  }\n\n  _pushBuffer() {\n    const id = this._tmpid();\n    this.bufferStack.push(this.buffer);\n    this.buffer = id;\n    this._emit(`var ${this.buffer} = \"\";`);\n    return id;\n  }\n\n  _popBuffer() {\n    this.buffer = this.bufferStack.pop();\n  }\n\n  _emit(code) {\n    this.codebuf.push(code);\n  }\n\n  _emitLine(code) {\n    this._emit(code + '\\n');\n  }\n\n  _emitLines(...lines) {\n    lines.forEach((line) => this._emitLine(line));\n  }\n\n  _emitFuncBegin(node, name) {\n    this.buffer = 'output';\n    this._scopeClosers = '';\n    this._emitLine(`function ${name}(env, context, frame, runtime, cb) {`);\n    this._emitLine(`var lineno = ${node.lineno};`);\n    this._emitLine(`var colno = ${node.colno};`);\n    this._emitLine(`var ${this.buffer} = \"\";`);\n    this._emitLine('try {');\n  }\n\n  _emitFuncEnd(noReturn) {\n    if (!noReturn) {\n      this._emitLine('cb(null, ' + this.buffer + ');');\n    }\n\n    this._closeScopeLevels();\n    this._emitLine('} catch (e) {');\n    this._emitLine('  cb(runtime.handleError(e, lineno, colno));');\n    this._emitLine('}');\n    this._emitLine('}');\n    this.buffer = null;\n  }\n\n  _addScopeLevel() {\n    this._scopeClosers += '})';\n  }\n\n  _closeScopeLevels() {\n    this._emitLine(this._scopeClosers + ';');\n    this._scopeClosers = '';\n  }\n\n  _withScopedSyntax(func) {\n    var _scopeClosers = this._scopeClosers;\n    this._scopeClosers = '';\n\n    func.call(this);\n\n    this._closeScopeLevels();\n    this._scopeClosers = _scopeClosers;\n  }\n\n  _makeCallback(res) {\n    var err = this._tmpid();\n\n    return 'function(' + err + (res ? ',' + res : '') + ') {\\n' +\n      'if(' + err + ') { cb(' + err + '); return; }';\n  }\n\n  _tmpid() {\n    this.lastId++;\n    return 't_' + this.lastId;\n  }\n\n  _templateName() {\n    return this.templateName == null ? 'undefined' : JSON.stringify(this.templateName);\n  }\n\n  _compileChildren(node, frame) {\n    node.children.forEach((child) => {\n      this.compile(child, frame);\n    });\n  }\n\n  _compileAggregate(node, frame, startChar, endChar) {\n    if (startChar) {\n      this._emit(startChar);\n    }\n\n    node.children.forEach((child, i) => {\n      if (i > 0) {\n        this._emit(',');\n      }\n\n      this.compile(child, frame);\n    });\n\n    if (endChar) {\n      this._emit(endChar);\n    }\n  }\n\n  _compileExpression(node, frame) {\n    // TODO: I'm not really sure if this type check is worth it or\n    // not.\n    this.assertType(\n      node,\n      nodes.Literal,\n      nodes.Symbol,\n      nodes.Group,\n      nodes.Array,\n      nodes.Dict,\n      nodes.FunCall,\n      nodes.Caller,\n      nodes.Filter,\n      nodes.LookupVal,\n      nodes.Compare,\n      nodes.InlineIf,\n      nodes.In,\n      nodes.Is,\n      nodes.And,\n      nodes.Or,\n      nodes.Not,\n      nodes.Add,\n      nodes.Concat,\n      nodes.Sub,\n      nodes.Mul,\n      nodes.Div,\n      nodes.FloorDiv,\n      nodes.Mod,\n      nodes.Pow,\n      nodes.Neg,\n      nodes.Pos,\n      nodes.Compare,\n      nodes.NodeList\n    );\n    this.compile(node, frame);\n  }\n\n  assertType(node, ...types) {\n    if (!types.some(t => node instanceof t)) {\n      this.fail(`assertType: invalid type: ${node.typename}`, node.lineno, node.colno);\n    }\n  }\n\n  compileCallExtension(node, frame, async) {\n    var args = node.args;\n    var contentArgs = node.contentArgs;\n    var autoescape = typeof node.autoescape === 'boolean' ? node.autoescape : true;\n\n    if (!async) {\n      this._emit(`${this.buffer} += runtime.suppressValue(`);\n    }\n\n    this._emit(`env.getExtension(\"${node.extName}\")[\"${node.prop}\"](`);\n    this._emit('context');\n\n    if (args || contentArgs) {\n      this._emit(',');\n    }\n\n    if (args) {\n      if (!(args instanceof nodes.NodeList)) {\n        this.fail('compileCallExtension: arguments must be a NodeList, ' +\n          'use `parser.parseSignature`');\n      }\n\n      args.children.forEach((arg, i) => {\n        // Tag arguments are passed normally to the call. Note\n        // that keyword arguments are turned into a single js\n        // object as the last argument, if they exist.\n        this._compileExpression(arg, frame);\n\n        if (i !== args.children.length - 1 || contentArgs.length) {\n          this._emit(',');\n        }\n      });\n    }\n\n    if (contentArgs.length) {\n      contentArgs.forEach((arg, i) => {\n        if (i > 0) {\n          this._emit(',');\n        }\n\n        if (arg) {\n          this._emitLine('function(cb) {');\n          this._emitLine('if(!cb) { cb = function(err) { if(err) { throw err; }}}');\n          const id = this._pushBuffer();\n\n          this._withScopedSyntax(() => {\n            this.compile(arg, frame);\n            this._emitLine(`cb(null, ${id});`);\n          });\n\n          this._popBuffer();\n          this._emitLine(`return ${id};`);\n          this._emitLine('}');\n        } else {\n          this._emit('null');\n        }\n      });\n    }\n\n    if (async) {\n      const res = this._tmpid();\n      this._emitLine(', ' + this._makeCallback(res));\n      this._emitLine(\n        `${this.buffer} += runtime.suppressValue(${res}, ${autoescape} && env.opts.autoescape);`);\n      this._addScopeLevel();\n    } else {\n      this._emit(')');\n      this._emit(`, ${autoescape} && env.opts.autoescape);\\n`);\n    }\n  }\n\n  compileCallExtensionAsync(node, frame) {\n    this.compileCallExtension(node, frame, true);\n  }\n\n  compileNodeList(node, frame) {\n    this._compileChildren(node, frame);\n  }\n\n  compileLiteral(node) {\n    if (typeof node.value === 'string') {\n      let val = node.value.replace(/\\\\/g, '\\\\\\\\');\n      val = val.replace(/\"/g, '\\\\\"');\n      val = val.replace(/\\n/g, '\\\\n');\n      val = val.replace(/\\r/g, '\\\\r');\n      val = val.replace(/\\t/g, '\\\\t');\n      val = val.replace(/\\u2028/g, '\\\\u2028');\n      this._emit(`\"${val}\"`);\n    } else if (node.value === null) {\n      this._emit('null');\n    } else {\n      this._emit(node.value.toString());\n    }\n  }\n\n  compileSymbol(node, frame) {\n    var name = node.value;\n    var v = frame.lookup(name);\n\n    if (v) {\n      this._emit(v);\n    } else {\n      this._emit('runtime.contextOrFrameLookup(' +\n        'context, frame, \"' + name + '\")');\n    }\n  }\n\n  compileGroup(node, frame) {\n    this._compileAggregate(node, frame, '(', ')');\n  }\n\n  compileArray(node, frame) {\n    this._compileAggregate(node, frame, '[', ']');\n  }\n\n  compileDict(node, frame) {\n    this._compileAggregate(node, frame, '{', '}');\n  }\n\n  compilePair(node, frame) {\n    var key = node.key;\n    var val = node.value;\n\n    if (key instanceof nodes.Symbol) {\n      key = new nodes.Literal(key.lineno, key.colno, key.value);\n    } else if (!(key instanceof nodes.Literal &&\n      typeof key.value === 'string')) {\n      this.fail('compilePair: Dict keys must be strings or names',\n        key.lineno,\n        key.colno);\n    }\n\n    this.compile(key, frame);\n    this._emit(': ');\n    this._compileExpression(val, frame);\n  }\n\n  compileInlineIf(node, frame) {\n    this._emit('(');\n    this.compile(node.cond, frame);\n    this._emit('?');\n    this.compile(node.body, frame);\n    this._emit(':');\n    if (node.else_ !== null) {\n      this.compile(node.else_, frame);\n    } else {\n      this._emit('\"\"');\n    }\n    this._emit(')');\n  }\n\n  compileIn(node, frame) {\n    this._emit('runtime.inOperator(');\n    this.compile(node.left, frame);\n    this._emit(',');\n    this.compile(node.right, frame);\n    this._emit(')');\n  }\n\n  compileIs(node, frame) {\n    // first, we need to try to get the name of the test function, if it's a\n    // callable (i.e., has args) and not a symbol.\n    var right = node.right.name\n      ? node.right.name.value\n      // otherwise go with the symbol value\n      : node.right.value;\n    this._emit('env.getTest(\"' + right + '\").call(context, ');\n    this.compile(node.left, frame);\n    // compile the arguments for the callable if they exist\n    if (node.right.args) {\n      this._emit(',');\n      this.compile(node.right.args, frame);\n    }\n    this._emit(') === true');\n  }\n\n  _binOpEmitter(node, frame, str) {\n    this.compile(node.left, frame);\n    this._emit(str);\n    this.compile(node.right, frame);\n  }\n\n  // ensure concatenation instead of addition\n  // by adding empty string in between\n  compileOr(node, frame) {\n    return this._binOpEmitter(node, frame, ' || ');\n  }\n\n  compileAnd(node, frame) {\n    return this._binOpEmitter(node, frame, ' && ');\n  }\n\n  compileAdd(node, frame) {\n    return this._binOpEmitter(node, frame, ' + ');\n  }\n\n  compileConcat(node, frame) {\n    return this._binOpEmitter(node, frame, ' + \"\" + ');\n  }\n\n  compileSub(node, frame) {\n    return this._binOpEmitter(node, frame, ' - ');\n  }\n\n  compileMul(node, frame) {\n    return this._binOpEmitter(node, frame, ' * ');\n  }\n\n  compileDiv(node, frame) {\n    return this._binOpEmitter(node, frame, ' / ');\n  }\n\n  compileMod(node, frame) {\n    return this._binOpEmitter(node, frame, ' % ');\n  }\n\n  compileNot(node, frame) {\n    this._emit('!');\n    this.compile(node.target, frame);\n  }\n\n  compileFloorDiv(node, frame) {\n    this._emit('Math.floor(');\n    this.compile(node.left, frame);\n    this._emit(' / ');\n    this.compile(node.right, frame);\n    this._emit(')');\n  }\n\n  compilePow(node, frame) {\n    this._emit('Math.pow(');\n    this.compile(node.left, frame);\n    this._emit(', ');\n    this.compile(node.right, frame);\n    this._emit(')');\n  }\n\n  compileNeg(node, frame) {\n    this._emit('-');\n    this.compile(node.target, frame);\n  }\n\n  compilePos(node, frame) {\n    this._emit('+');\n    this.compile(node.target, frame);\n  }\n\n  compileCompare(node, frame) {\n    this.compile(node.expr, frame);\n\n    node.ops.forEach((op) => {\n      this._emit(` ${compareOps[op.type]} `);\n      this.compile(op.expr, frame);\n    });\n  }\n\n  compileLookupVal(node, frame) {\n    this._emit('runtime.memberLookup((');\n    this._compileExpression(node.target, frame);\n    this._emit('),');\n    this._compileExpression(node.val, frame);\n    this._emit(')');\n  }\n\n  _getNodeName(node) {\n    switch (node.typename) {\n      case 'Symbol':\n        return node.value;\n      case 'FunCall':\n        return 'the return value of (' + this._getNodeName(node.name) + ')';\n      case 'LookupVal':\n        return this._getNodeName(node.target) + '[\"' +\n          this._getNodeName(node.val) + '\"]';\n      case 'Literal':\n        return node.value.toString();\n      default:\n        return '--expression--';\n    }\n  }\n\n  compileFunCall(node, frame) {\n    // Keep track of line/col info at runtime by settings\n    // variables within an expression. An expression in javascript\n    // like (x, y, z) returns the last value, and x and y can be\n    // anything\n    this._emit('(lineno = ' + node.lineno +\n      ', colno = ' + node.colno + ', ');\n\n    this._emit('runtime.callWrap(');\n    // Compile it as normal.\n    this._compileExpression(node.name, frame);\n\n    // Output the name of what we're calling so we can get friendly errors\n    // if the lookup fails.\n    this._emit(', \"' + this._getNodeName(node.name).replace(/\"/g, '\\\\\"') + '\", context, ');\n\n    this._compileAggregate(node.args, frame, '[', '])');\n\n    this._emit(')');\n  }\n\n  compileFilter(node, frame) {\n    var name = node.name;\n    this.assertType(name, nodes.Symbol);\n    this._emit('env.getFilter(\"' + name.value + '\").call(context, ');\n    this._compileAggregate(node.args, frame);\n    this._emit(')');\n  }\n\n  compileFilterAsync(node, frame) {\n    var name = node.name;\n    var symbol = node.symbol.value;\n\n    this.assertType(name, nodes.Symbol);\n\n    frame.set(symbol, symbol);\n\n    this._emit('env.getFilter(\"' + name.value + '\").call(context, ');\n    this._compileAggregate(node.args, frame);\n    this._emitLine(', ' + this._makeCallback(symbol));\n\n    this._addScopeLevel();\n  }\n\n  compileKeywordArgs(node, frame) {\n    this._emit('runtime.makeKeywordArgs(');\n    this.compileDict(node, frame);\n    this._emit(')');\n  }\n\n  compileSet(node, frame) {\n    var ids = [];\n\n    // Lookup the variable names for each identifier and create\n    // new ones if necessary\n    node.targets.forEach((target) => {\n      var name = target.value;\n      var id = frame.lookup(name);\n\n      if (id === null || id === undefined) {\n        id = this._tmpid();\n\n        // Note: This relies on js allowing scope across\n        // blocks, in case this is created inside an `if`\n        this._emitLine('var ' + id + ';');\n      }\n\n      ids.push(id);\n    });\n\n    if (node.value) {\n      this._emit(ids.join(' = ') + ' = ');\n      this._compileExpression(node.value, frame);\n      this._emitLine(';');\n    } else {\n      this._emit(ids.join(' = ') + ' = ');\n      this.compile(node.body, frame);\n      this._emitLine(';');\n    }\n\n    node.targets.forEach((target, i) => {\n      var id = ids[i];\n      var name = target.value;\n\n      // We are running this for every var, but it's very\n      // uncommon to assign to multiple vars anyway\n      this._emitLine(`frame.set(\"${name}\", ${id}, true);`);\n\n      this._emitLine('if(frame.topLevel) {');\n      this._emitLine(`context.setVariable(\"${name}\", ${id});`);\n      this._emitLine('}');\n\n      if (name.charAt(0) !== '_') {\n        this._emitLine('if(frame.topLevel) {');\n        this._emitLine(`context.addExport(\"${name}\", ${id});`);\n        this._emitLine('}');\n      }\n    });\n  }\n\n  compileSwitch(node, frame) {\n    this._emit('switch (');\n    this.compile(node.expr, frame);\n    this._emit(') {');\n    node.cases.forEach((c, i) => {\n      this._emit('case ');\n      this.compile(c.cond, frame);\n      this._emit(': ');\n      this.compile(c.body, frame);\n      // preserve fall-throughs\n      if (c.body.children.length) {\n        this._emitLine('break;');\n      }\n    });\n    if (node.default) {\n      this._emit('default:');\n      this.compile(node.default, frame);\n    }\n    this._emit('}');\n  }\n\n  compileIf(node, frame, async) {\n    this._emit('if(');\n    this._compileExpression(node.cond, frame);\n    this._emitLine(') {');\n\n    this._withScopedSyntax(() => {\n      this.compile(node.body, frame);\n\n      if (async) {\n        this._emit('cb()');\n      }\n    });\n\n    if (node.else_) {\n      this._emitLine('}\\nelse {');\n\n      this._withScopedSyntax(() => {\n        this.compile(node.else_, frame);\n\n        if (async) {\n          this._emit('cb()');\n        }\n      });\n    } else if (async) {\n      this._emitLine('}\\nelse {');\n      this._emit('cb()');\n    }\n\n    this._emitLine('}');\n  }\n\n  compileIfAsync(node, frame) {\n    this._emit('(function(cb) {');\n    this.compileIf(node, frame, true);\n    this._emit('})(' + this._makeCallback());\n    this._addScopeLevel();\n  }\n\n  _emitLoopBindings(node, arr, i, len) {\n    const bindings = [\n      {name: 'index', val: `${i} + 1`},\n      {name: 'index0', val: i},\n      {name: 'revindex', val: `${len} - ${i}`},\n      {name: 'revindex0', val: `${len} - ${i} - 1`},\n      {name: 'first', val: `${i} === 0`},\n      {name: 'last', val: `${i} === ${len} - 1`},\n      {name: 'length', val: len},\n    ];\n\n    bindings.forEach((b) => {\n      this._emitLine(`frame.set(\"loop.${b.name}\", ${b.val});`);\n    });\n  }\n\n  compileFor(node, frame) {\n    // Some of this code is ugly, but it keeps the generated code\n    // as fast as possible. ForAsync also shares some of this, but\n    // not much.\n\n    const i = this._tmpid();\n    const len = this._tmpid();\n    const arr = this._tmpid();\n    frame = frame.push();\n\n    this._emitLine('frame = frame.push();');\n\n    this._emit(`var ${arr} = `);\n    this._compileExpression(node.arr, frame);\n    this._emitLine(';');\n\n    this._emit(`if(${arr}) {`);\n    this._emitLine(arr + ' = runtime.fromIterator(' + arr + ');');\n\n    // If multiple names are passed, we need to bind them\n    // appropriately\n    if (node.name instanceof nodes.Array) {\n      this._emitLine(`var ${i};`);\n\n      // The object could be an arroy or object. Note that the\n      // body of the loop is duplicated for each condition, but\n      // we are optimizing for speed over size.\n      this._emitLine(`if(runtime.isArray(${arr})) {`);\n      this._emitLine(`var ${len} = ${arr}.length;`);\n      this._emitLine(`for(${i}=0; ${i} < ${arr}.length; ${i}++) {`);\n\n      // Bind each declared var\n      node.name.children.forEach((child, u) => {\n        var tid = this._tmpid();\n        this._emitLine(`var ${tid} = ${arr}[${i}][${u}];`);\n        this._emitLine(`frame.set(\"${child}\", ${arr}[${i}][${u}]);`);\n        frame.set(node.name.children[u].value, tid);\n      });\n\n      this._emitLoopBindings(node, arr, i, len);\n      this._withScopedSyntax(() => {\n        this.compile(node.body, frame);\n      });\n      this._emitLine('}');\n\n      this._emitLine('} else {');\n      // Iterate over the key/values of an object\n      const [key, val] = node.name.children;\n      const k = this._tmpid();\n      const v = this._tmpid();\n      frame.set(key.value, k);\n      frame.set(val.value, v);\n\n      this._emitLine(`${i} = -1;`);\n      this._emitLine(`var ${len} = runtime.keys(${arr}).length;`);\n      this._emitLine(`for(var ${k} in ${arr}) {`);\n      this._emitLine(`${i}++;`);\n      this._emitLine(`var ${v} = ${arr}[${k}];`);\n      this._emitLine(`frame.set(\"${key.value}\", ${k});`);\n      this._emitLine(`frame.set(\"${val.value}\", ${v});`);\n\n      this._emitLoopBindings(node, arr, i, len);\n      this._withScopedSyntax(() => {\n        this.compile(node.body, frame);\n      });\n      this._emitLine('}');\n\n      this._emitLine('}');\n    } else {\n      // Generate a typical array iteration\n      const v = this._tmpid();\n      frame.set(node.name.value, v);\n\n      this._emitLine(`var ${len} = ${arr}.length;`);\n      this._emitLine(`for(var ${i}=0; ${i} < ${arr}.length; ${i}++) {`);\n      this._emitLine(`var ${v} = ${arr}[${i}];`);\n      this._emitLine(`frame.set(\"${node.name.value}\", ${v});`);\n\n      this._emitLoopBindings(node, arr, i, len);\n\n      this._withScopedSyntax(() => {\n        this.compile(node.body, frame);\n      });\n\n      this._emitLine('}');\n    }\n\n    this._emitLine('}');\n    if (node.else_) {\n      this._emitLine('if (!' + len + ') {');\n      this.compile(node.else_, frame);\n      this._emitLine('}');\n    }\n\n    this._emitLine('frame = frame.pop();');\n  }\n\n  _compileAsyncLoop(node, frame, parallel) {\n    // This shares some code with the For tag, but not enough to\n    // worry about. This iterates across an object asynchronously,\n    // but not in parallel.\n\n    var i = this._tmpid();\n    var len = this._tmpid();\n    var arr = this._tmpid();\n    var asyncMethod = parallel ? 'asyncAll' : 'asyncEach';\n    frame = frame.push();\n\n    this._emitLine('frame = frame.push();');\n\n    this._emit('var ' + arr + ' = runtime.fromIterator(');\n    this._compileExpression(node.arr, frame);\n    this._emitLine(');');\n\n    if (node.name instanceof nodes.Array) {\n      const arrayLen = node.name.children.length;\n      this._emit(`runtime.${asyncMethod}(${arr}, ${arrayLen}, function(`);\n\n      node.name.children.forEach((name) => {\n        this._emit(`${name.value},`);\n      });\n\n      this._emit(i + ',' + len + ',next) {');\n\n      node.name.children.forEach((name) => {\n        const id = name.value;\n        frame.set(id, id);\n        this._emitLine(`frame.set(\"${id}\", ${id});`);\n      });\n    } else {\n      const id = node.name.value;\n      this._emitLine(`runtime.${asyncMethod}(${arr}, 1, function(${id}, ${i}, ${len},next) {`);\n      this._emitLine('frame.set(\"' + id + '\", ' + id + ');');\n      frame.set(id, id);\n    }\n\n    this._emitLoopBindings(node, arr, i, len);\n\n    this._withScopedSyntax(() => {\n      let buf;\n      if (parallel) {\n        buf = this._pushBuffer();\n      }\n\n      this.compile(node.body, frame);\n      this._emitLine('next(' + i + (buf ? ',' + buf : '') + ');');\n\n      if (parallel) {\n        this._popBuffer();\n      }\n    });\n\n    const output = this._tmpid();\n    this._emitLine('}, ' + this._makeCallback(output));\n    this._addScopeLevel();\n\n    if (parallel) {\n      this._emitLine(this.buffer + ' += ' + output + ';');\n    }\n\n    if (node.else_) {\n      this._emitLine('if (!' + arr + '.length) {');\n      this.compile(node.else_, frame);\n      this._emitLine('}');\n    }\n\n    this._emitLine('frame = frame.pop();');\n  }\n\n  compileAsyncEach(node, frame) {\n    this._compileAsyncLoop(node, frame);\n  }\n\n  compileAsyncAll(node, frame) {\n    this._compileAsyncLoop(node, frame, true);\n  }\n\n  _compileMacro(node, frame) {\n    var args = [];\n    var kwargs = null;\n    var funcId = 'macro_' + this._tmpid();\n    var keepFrame = (frame !== undefined);\n\n    // Type check the definition of the args\n    node.args.children.forEach((arg, i) => {\n      if (i === node.args.children.length - 1 && arg instanceof nodes.Dict) {\n        kwargs = arg;\n      } else {\n        this.assertType(arg, nodes.Symbol);\n        args.push(arg);\n      }\n    });\n\n    const realNames = [...args.map((n) => `l_${n.value}`), 'kwargs'];\n\n    // Quoted argument names\n    const argNames = args.map((n) => `\"${n.value}\"`);\n    const kwargNames = ((kwargs && kwargs.children) || []).map((n) => `\"${n.key.value}\"`);\n\n    // We pass a function to makeMacro which destructures the\n    // arguments so support setting positional args with keywords\n    // args and passing keyword args as positional args\n    // (essentially default values). See runtime.js.\n    let currFrame;\n    if (keepFrame) {\n      currFrame = frame.push(true);\n    } else {\n      currFrame = new Frame();\n    }\n    this._emitLines(\n      `var ${funcId} = runtime.makeMacro(`,\n      `[${argNames.join(', ')}], `,\n      `[${kwargNames.join(', ')}], `,\n      `function (${realNames.join(', ')}) {`,\n      'var callerFrame = frame;',\n      'frame = ' + ((keepFrame) ? 'frame.push(true);' : 'new runtime.Frame();'),\n      'kwargs = kwargs || {};',\n      'if (Object.prototype.hasOwnProperty.call(kwargs, \"caller\")) {',\n      'frame.set(\"caller\", kwargs.caller); }');\n\n    // Expose the arguments to the template. Don't need to use\n    // random names because the function\n    // will create a new run-time scope for us\n    args.forEach((arg) => {\n      this._emitLine(`frame.set(\"${arg.value}\", l_${arg.value});`);\n      currFrame.set(arg.value, `l_${arg.value}`);\n    });\n\n    // Expose the keyword arguments\n    if (kwargs) {\n      kwargs.children.forEach((pair) => {\n        const name = pair.key.value;\n        this._emit(`frame.set(\"${name}\", `);\n        this._emit(`Object.prototype.hasOwnProperty.call(kwargs, \"${name}\")`);\n        this._emit(` ? kwargs[\"${name}\"] : `);\n        this._compileExpression(pair.value, currFrame);\n        this._emit(');');\n      });\n    }\n\n    const bufferId = this._pushBuffer();\n\n    this._withScopedSyntax(() => {\n      this.compile(node.body, currFrame);\n    });\n\n    this._emitLine('frame = ' + ((keepFrame) ? 'frame.pop();' : 'callerFrame;'));\n    this._emitLine(`return new runtime.SafeString(${bufferId});`);\n    this._emitLine('});');\n    this._popBuffer();\n\n    return funcId;\n  }\n\n  compileMacro(node, frame) {\n    var funcId = this._compileMacro(node);\n\n    // Expose the macro to the templates\n    var name = node.name.value;\n    frame.set(name, funcId);\n\n    if (frame.parent) {\n      this._emitLine(`frame.set(\"${name}\", ${funcId});`);\n    } else {\n      if (node.name.value.charAt(0) !== '_') {\n        this._emitLine(`context.addExport(\"${name}\");`);\n      }\n      this._emitLine(`context.setVariable(\"${name}\", ${funcId});`);\n    }\n  }\n\n  compileCaller(node, frame) {\n    // basically an anonymous \"macro expression\"\n    this._emit('(function (){');\n    const funcId = this._compileMacro(node, frame);\n    this._emit(`return ${funcId};})()`);\n  }\n\n  _compileGetTemplate(node, frame, eagerCompile, ignoreMissing) {\n    const parentTemplateId = this._tmpid();\n    const parentName = this._templateName();\n    const cb = this._makeCallback(parentTemplateId);\n    const eagerCompileArg = (eagerCompile) ? 'true' : 'false';\n    const ignoreMissingArg = (ignoreMissing) ? 'true' : 'false';\n    this._emit('env.getTemplate(');\n    this._compileExpression(node.template, frame);\n    this._emitLine(`, ${eagerCompileArg}, ${parentName}, ${ignoreMissingArg}, ${cb}`);\n    return parentTemplateId;\n  }\n\n  compileImport(node, frame) {\n    const target = node.target.value;\n    const id = this._compileGetTemplate(node, frame, false, false);\n    this._addScopeLevel();\n\n    this._emitLine(id + '.getExported(' +\n      (node.withContext ? 'context.getVariables(), frame, ' : '') +\n      this._makeCallback(id));\n    this._addScopeLevel();\n\n    frame.set(target, id);\n\n    if (frame.parent) {\n      this._emitLine(`frame.set(\"${target}\", ${id});`);\n    } else {\n      this._emitLine(`context.setVariable(\"${target}\", ${id});`);\n    }\n  }\n\n  compileFromImport(node, frame) {\n    const importedId = this._compileGetTemplate(node, frame, false, false);\n    this._addScopeLevel();\n\n    this._emitLine(importedId + '.getExported(' +\n      (node.withContext ? 'context.getVariables(), frame, ' : '') +\n      this._makeCallback(importedId));\n    this._addScopeLevel();\n\n    node.names.children.forEach((nameNode) => {\n      var name;\n      var alias;\n      var id = this._tmpid();\n\n      if (nameNode instanceof nodes.Pair) {\n        name = nameNode.key.value;\n        alias = nameNode.value.value;\n      } else {\n        name = nameNode.value;\n        alias = name;\n      }\n\n      this._emitLine(`if(Object.prototype.hasOwnProperty.call(${importedId}, \"${name}\")) {`);\n      this._emitLine(`var ${id} = ${importedId}.${name};`);\n      this._emitLine('} else {');\n      this._emitLine(`cb(new Error(\"cannot import '${name}'\")); return;`);\n      this._emitLine('}');\n\n      frame.set(alias, id);\n\n      if (frame.parent) {\n        this._emitLine(`frame.set(\"${alias}\", ${id});`);\n      } else {\n        this._emitLine(`context.setVariable(\"${alias}\", ${id});`);\n      }\n    });\n  }\n\n  compileBlock(node) {\n    var id = this._tmpid();\n\n    // If we are executing outside a block (creating a top-level\n    // block), we really don't want to execute its code because it\n    // will execute twice: once when the child template runs and\n    // again when the parent template runs. Note that blocks\n    // within blocks will *always* execute immediately *and*\n    // wherever else they are invoked (like used in a parent\n    // template). This may have behavioral differences from jinja\n    // because blocks can have side effects, but it seems like a\n    // waste of performance to always execute huge top-level\n    // blocks twice\n    if (!this.inBlock) {\n      this._emit('(parentTemplate ? function(e, c, f, r, cb) { cb(\"\"); } : ');\n    }\n    this._emit(`context.getBlock(\"${node.name.value}\")`);\n    if (!this.inBlock) {\n      this._emit(')');\n    }\n    this._emitLine('(env, context, frame, runtime, ' + this._makeCallback(id));\n    this._emitLine(`${this.buffer} += ${id};`);\n    this._addScopeLevel();\n  }\n\n  compileSuper(node, frame) {\n    var name = node.blockName.value;\n    var id = node.symbol.value;\n\n    const cb = this._makeCallback(id);\n    this._emitLine(`context.getSuper(env, \"${name}\", b_${name}, frame, runtime, ${cb}`);\n    this._emitLine(`${id} = runtime.markSafe(${id});`);\n    this._addScopeLevel();\n    frame.set(id, id);\n  }\n\n  compileExtends(node, frame) {\n    var k = this._tmpid();\n\n    const parentTemplateId = this._compileGetTemplate(node, frame, true, false);\n\n    // extends is a dynamic tag and can occur within a block like\n    // `if`, so if this happens we need to capture the parent\n    // template in the top-level scope\n    this._emitLine(`parentTemplate = ${parentTemplateId}`);\n\n    this._emitLine(`for(var ${k} in parentTemplate.blocks) {`);\n    this._emitLine(`context.addBlock(${k}, parentTemplate.blocks[${k}]);`);\n    this._emitLine('}');\n\n    this._addScopeLevel();\n  }\n\n  compileInclude(node, frame) {\n    this._emitLine('var tasks = [];');\n    this._emitLine('tasks.push(');\n    this._emitLine('function(callback) {');\n    const id = this._compileGetTemplate(node, frame, false, node.ignoreMissing);\n    this._emitLine(`callback(null,${id});});`);\n    this._emitLine('});');\n\n    const id2 = this._tmpid();\n    this._emitLine('tasks.push(');\n    this._emitLine('function(template, callback){');\n    this._emitLine('template.render(context.getVariables(), frame, ' + this._makeCallback(id2));\n    this._emitLine('callback(null,' + id2 + ');});');\n    this._emitLine('});');\n\n    this._emitLine('tasks.push(');\n    this._emitLine('function(result, callback){');\n    this._emitLine(`${this.buffer} += result;`);\n    this._emitLine('callback(null);');\n    this._emitLine('});');\n    this._emitLine('env.waterfall(tasks, function(){');\n    this._addScopeLevel();\n  }\n\n  compileTemplateData(node, frame) {\n    this.compileLiteral(node, frame);\n  }\n\n  compileCapture(node, frame) {\n    // we need to temporarily override the current buffer id as 'output'\n    // so the set block writes to the capture output instead of the buffer\n    var buffer = this.buffer;\n    this.buffer = 'output';\n    this._emitLine('(function() {');\n    this._emitLine('var output = \"\";');\n    this._withScopedSyntax(() => {\n      this.compile(node.body, frame);\n    });\n    this._emitLine('return output;');\n    this._emitLine('})()');\n    // and of course, revert back to the old buffer id\n    this.buffer = buffer;\n  }\n\n  compileOutput(node, frame) {\n    const children = node.children;\n    children.forEach(child => {\n      // TemplateData is a special case because it is never\n      // autoescaped, so simply output it for optimization\n      if (child instanceof nodes.TemplateData) {\n        if (child.value) {\n          this._emit(`${this.buffer} += `);\n          this.compileLiteral(child, frame);\n          this._emitLine(';');\n        }\n      } else {\n        this._emit(`${this.buffer} += runtime.suppressValue(`);\n        if (this.throwOnUndefined) {\n          this._emit('runtime.ensureDefined(');\n        }\n        this.compile(child, frame);\n        if (this.throwOnUndefined) {\n          this._emit(`,${node.lineno},${node.colno})`);\n        }\n        this._emit(', env.opts.autoescape);\\n');\n      }\n    });\n  }\n\n  compileRoot(node, frame) {\n    if (frame) {\n      this.fail('compileRoot: root node can\\'t have frame');\n    }\n\n    frame = new Frame();\n\n    this._emitFuncBegin(node, 'root');\n    this._emitLine('var parentTemplate = null;');\n    this._compileChildren(node, frame);\n    this._emitLine('if(parentTemplate) {');\n    this._emitLine('parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);');\n    this._emitLine('} else {');\n    this._emitLine(`cb(null, ${this.buffer});`);\n    this._emitLine('}');\n    this._emitFuncEnd(true);\n\n    this.inBlock = true;\n\n    const blockNames = [];\n\n    const blocks = node.findAll(nodes.Block);\n\n    blocks.forEach((block, i) => {\n      const name = block.name.value;\n\n      if (blockNames.indexOf(name) !== -1) {\n        throw new Error(`Block \"${name}\" defined more than once.`);\n      }\n      blockNames.push(name);\n\n      this._emitFuncBegin(block, `b_${name}`);\n\n      const tmpFrame = new Frame();\n      this._emitLine('var frame = frame.push(true);');\n      this.compile(block.body, tmpFrame);\n      this._emitFuncEnd();\n    });\n\n    this._emitLine('return {');\n\n    blocks.forEach((block, i) => {\n      const blockName = `b_${block.name.value}`;\n      this._emitLine(`${blockName}: ${blockName},`);\n    });\n\n    this._emitLine('root: root\\n};');\n  }\n\n  compile(node, frame) {\n    var _compile = this['compile' + node.typename];\n    if (_compile) {\n      _compile.call(this, node, frame);\n    } else {\n      this.fail(`compile: Cannot compile node: ${node.typename}`, node.lineno, node.colno);\n    }\n  }\n\n  getCode() {\n    return this.codebuf.join('');\n  }\n}\n\nmodule.exports = {\n  compile: function compile(src, asyncFilters, extensions, name, opts = {}) {\n    const c = new Compiler(name, opts.throwOnUndefined);\n\n    // Run the extension preprocessors against the source.\n    const preprocessors = (extensions || []).map(ext => ext.preprocess).filter(f => !!f);\n\n    const processedSrc = preprocessors.reduce((s, processor) => processor(s), src);\n\n    c.compile(transformer.transform(\n      parser.parse(processedSrc, extensions, opts),\n      asyncFilters,\n      name\n    ));\n    return c.getCode();\n  },\n\n  Compiler: Compiler\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/compiler.js","'use strict';\n\nconst path = require('path');\nconst {EmitterObj} = require('./object');\n\nmodule.exports = class Loader extends EmitterObj {\n  resolve(from, to) {\n    return path.resolve(path.dirname(from), to);\n  }\n\n  isRelative(filename) {\n    return (filename.indexOf('./') === 0 || filename.indexOf('../') === 0);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/loader.js","'use strict';\n\nconst asap = require('asap');\nconst waterfall = require('a-sync-waterfall');\nconst lib = require('./lib');\nconst compiler = require('./compiler');\nconst filters = require('./filters');\nconst {FileSystemLoader, WebLoader, PrecompiledLoader} = require('./loaders');\nconst tests = require('./tests');\nconst globals = require('./globals');\nconst {Obj, EmitterObj} = require('./object');\nconst globalRuntime = require('./runtime');\nconst {handleError, Frame} = globalRuntime;\nconst expressApp = require('./express-app');\n\n// If the user is using the async API, *always* call it\n// asynchronously even if the template was synchronous.\nfunction callbackAsap(cb, err, res) {\n  asap(() => {\n    cb(err, res);\n  });\n}\n\n/**\n * A no-op template, for use with {% include ignore missing %}\n */\nconst noopTmplSrc = {\n  type: 'code',\n  obj: {\n    root(env, context, frame, runtime, cb) {\n      try {\n        cb(null, '');\n      } catch (e) {\n        cb(handleError(e, null, null));\n      }\n    }\n  }\n};\n\nclass Environment extends EmitterObj {\n  init(loaders, opts) {\n    // The dev flag determines the trace that'll be shown on errors.\n    // If set to true, returns the full trace from the error point,\n    // otherwise will return trace starting from Template.render\n    // (the full trace from within nunjucks may confuse developers using\n    //  the library)\n    // defaults to false\n    opts = this.opts = opts || {};\n    this.opts.dev = !!opts.dev;\n\n    // The autoescape flag sets global autoescaping. If true,\n    // every string variable will be escaped by default.\n    // If false, strings can be manually escaped using the `escape` filter.\n    // defaults to true\n    this.opts.autoescape = opts.autoescape != null ? opts.autoescape : true;\n\n    // If true, this will make the system throw errors if trying\n    // to output a null or undefined value\n    this.opts.throwOnUndefined = !!opts.throwOnUndefined;\n    this.opts.trimBlocks = !!opts.trimBlocks;\n    this.opts.lstripBlocks = !!opts.lstripBlocks;\n\n    this.loaders = [];\n\n    if (!loaders) {\n      // The filesystem loader is only available server-side\n      if (FileSystemLoader) {\n        this.loaders = [new FileSystemLoader('views')];\n      } else if (WebLoader) {\n        this.loaders = [new WebLoader('/views')];\n      }\n    } else {\n      this.loaders = lib.isArray(loaders) ? loaders : [loaders];\n    }\n\n    // It's easy to use precompiled templates: just include them\n    // before you configure nunjucks and this will automatically\n    // pick it up and use it\n    if (typeof window !== 'undefined' && window.nunjucksPrecompiled) {\n      this.loaders.unshift(\n        new PrecompiledLoader(window.nunjucksPrecompiled)\n      );\n    }\n\n    this._initLoaders();\n\n    this.globals = globals();\n    this.filters = {};\n    this.tests = {};\n    this.asyncFilters = [];\n    this.extensions = {};\n    this.extensionsList = [];\n\n    lib._entries(filters).forEach(([name, filter]) => this.addFilter(name, filter));\n    lib._entries(tests).forEach(([name, test]) => this.addTest(name, test));\n  }\n\n  _initLoaders() {\n    this.loaders.forEach((loader) => {\n      // Caching and cache busting\n      loader.cache = {};\n      if (typeof loader.on === 'function') {\n        loader.on('update', (name, fullname) => {\n          loader.cache[name] = null;\n          this.emit('update', name, fullname, loader);\n        });\n        loader.on('load', (name, source) => {\n          this.emit('load', name, source, loader);\n        });\n      }\n    });\n  }\n\n  invalidateCache() {\n    this.loaders.forEach((loader) => {\n      loader.cache = {};\n    });\n  }\n\n  addExtension(name, extension) {\n    extension.__name = name;\n    this.extensions[name] = extension;\n    this.extensionsList.push(extension);\n    return this;\n  }\n\n  removeExtension(name) {\n    var extension = this.getExtension(name);\n    if (!extension) {\n      return;\n    }\n\n    this.extensionsList = lib.without(this.extensionsList, extension);\n    delete this.extensions[name];\n  }\n\n  getExtension(name) {\n    return this.extensions[name];\n  }\n\n  hasExtension(name) {\n    return !!this.extensions[name];\n  }\n\n  addGlobal(name, value) {\n    this.globals[name] = value;\n    return this;\n  }\n\n  getGlobal(name) {\n    if (typeof this.globals[name] === 'undefined') {\n      throw new Error('global not found: ' + name);\n    }\n    return this.globals[name];\n  }\n\n  addFilter(name, func, async) {\n    var wrapped = func;\n\n    if (async) {\n      this.asyncFilters.push(name);\n    }\n    this.filters[name] = wrapped;\n    return this;\n  }\n\n  getFilter(name) {\n    if (!this.filters[name]) {\n      throw new Error('filter not found: ' + name);\n    }\n    return this.filters[name];\n  }\n\n  addTest(name, func) {\n    this.tests[name] = func;\n    return this;\n  }\n\n  getTest(name) {\n    if (!this.tests[name]) {\n      throw new Error('test not found: ' + name);\n    }\n    return this.tests[name];\n  }\n\n  resolveTemplate(loader, parentName, filename) {\n    var isRelative = (loader.isRelative && parentName) ? loader.isRelative(filename) : false;\n    return (isRelative && loader.resolve) ? loader.resolve(parentName, filename) : filename;\n  }\n\n  getTemplate(name, eagerCompile, parentName, ignoreMissing, cb) {\n    var that = this;\n    var tmpl = null;\n    if (name && name.raw) {\n      // this fixes autoescape for templates referenced in symbols\n      name = name.raw;\n    }\n\n    if (lib.isFunction(parentName)) {\n      cb = parentName;\n      parentName = null;\n      eagerCompile = eagerCompile || false;\n    }\n\n    if (lib.isFunction(eagerCompile)) {\n      cb = eagerCompile;\n      eagerCompile = false;\n    }\n\n    if (name instanceof Template) {\n      tmpl = name;\n    } else if (typeof name !== 'string') {\n      throw new Error('template names must be a string: ' + name);\n    } else {\n      for (let i = 0; i < this.loaders.length; i++) {\n        const loader = this.loaders[i];\n        tmpl = loader.cache[this.resolveTemplate(loader, parentName, name)];\n        if (tmpl) {\n          break;\n        }\n      }\n    }\n\n    if (tmpl) {\n      if (eagerCompile) {\n        tmpl.compile();\n      }\n\n      if (cb) {\n        cb(null, tmpl);\n        return undefined;\n      } else {\n        return tmpl;\n      }\n    }\n    let syncResult;\n\n    const createTemplate = (err, info) => {\n      if (!info && !err && !ignoreMissing) {\n        err = new Error('template not found: ' + name);\n      }\n\n      if (err) {\n        if (cb) {\n          cb(err);\n          return;\n        } else {\n          throw err;\n        }\n      }\n      let newTmpl;\n      if (!info) {\n        newTmpl = new Template(noopTmplSrc, this, '', eagerCompile);\n      } else {\n        newTmpl = new Template(info.src, this, info.path, eagerCompile);\n        if (!info.noCache) {\n          info.loader.cache[name] = newTmpl;\n        }\n      }\n      if (cb) {\n        cb(null, newTmpl);\n      } else {\n        syncResult = newTmpl;\n      }\n    };\n\n    lib.asyncIter(this.loaders, (loader, i, next, done) => {\n      function handle(err, src) {\n        if (err) {\n          done(err);\n        } else if (src) {\n          src.loader = loader;\n          done(null, src);\n        } else {\n          next();\n        }\n      }\n\n      // Resolve name relative to parentName\n      name = that.resolveTemplate(loader, parentName, name);\n\n      if (loader.async) {\n        loader.getSource(name, handle);\n      } else {\n        handle(null, loader.getSource(name));\n      }\n    }, createTemplate);\n\n    return syncResult;\n  }\n\n  express(app) {\n    return expressApp(this, app);\n  }\n\n  render(name, ctx, cb) {\n    if (lib.isFunction(ctx)) {\n      cb = ctx;\n      ctx = null;\n    }\n\n    // We support a synchronous API to make it easier to migrate\n    // existing code to async. This works because if you don't do\n    // anything async work, the whole thing is actually run\n    // synchronously.\n    let syncResult = null;\n\n    this.getTemplate(name, (err, tmpl) => {\n      if (err && cb) {\n        callbackAsap(cb, err);\n      } else if (err) {\n        throw err;\n      } else {\n        syncResult = tmpl.render(ctx, cb);\n      }\n    });\n\n    return syncResult;\n  }\n\n  renderString(src, ctx, opts, cb) {\n    if (lib.isFunction(opts)) {\n      cb = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    const tmpl = new Template(src, this, opts.path);\n    return tmpl.render(ctx, cb);\n  }\n\n  waterfall(tasks, callback, forceAsync) {\n    return waterfall(tasks, callback, forceAsync);\n  }\n}\n\nclass Context extends Obj {\n  init(ctx, blocks, env) {\n    // Has to be tied to an environment so we can tap into its globals.\n    this.env = env || new Environment();\n\n    // Make a duplicate of ctx\n    this.ctx = lib.extend({}, ctx);\n\n    this.blocks = {};\n    this.exported = [];\n\n    lib.keys(blocks).forEach(name => {\n      this.addBlock(name, blocks[name]);\n    });\n  }\n\n  lookup(name) {\n    // This is one of the most called functions, so optimize for\n    // the typical case where the name isn't in the globals\n    if (name in this.env.globals && !(name in this.ctx)) {\n      return this.env.globals[name];\n    } else {\n      return this.ctx[name];\n    }\n  }\n\n  setVariable(name, val) {\n    this.ctx[name] = val;\n  }\n\n  getVariables() {\n    return this.ctx;\n  }\n\n  addBlock(name, block) {\n    this.blocks[name] = this.blocks[name] || [];\n    this.blocks[name].push(block);\n    return this;\n  }\n\n  getBlock(name) {\n    if (!this.blocks[name]) {\n      throw new Error('unknown block \"' + name + '\"');\n    }\n\n    return this.blocks[name][0];\n  }\n\n  getSuper(env, name, block, frame, runtime, cb) {\n    var idx = lib.indexOf(this.blocks[name] || [], block);\n    var blk = this.blocks[name][idx + 1];\n    var context = this;\n\n    if (idx === -1 || !blk) {\n      throw new Error('no super block available for \"' + name + '\"');\n    }\n\n    blk(env, context, frame, runtime, cb);\n  }\n\n  addExport(name) {\n    this.exported.push(name);\n  }\n\n  getExported() {\n    var exported = {};\n    this.exported.forEach((name) => {\n      exported[name] = this.ctx[name];\n    });\n    return exported;\n  }\n}\n\nclass Template extends Obj {\n  init(src, env, path, eagerCompile) {\n    this.env = env || new Environment();\n\n    if (lib.isObject(src)) {\n      switch (src.type) {\n        case 'code':\n          this.tmplProps = src.obj;\n          break;\n        case 'string':\n          this.tmplStr = src.obj;\n          break;\n        default:\n          throw new Error(\n            `Unexpected template object type ${src.type}; expected 'code', or 'string'`);\n      }\n    } else if (lib.isString(src)) {\n      this.tmplStr = src;\n    } else {\n      throw new Error('src must be a string or an object describing the source');\n    }\n\n    this.path = path;\n\n    if (eagerCompile) {\n      try {\n        this._compile();\n      } catch (err) {\n        throw lib._prettifyError(this.path, this.env.opts.dev, err);\n      }\n    } else {\n      this.compiled = false;\n    }\n  }\n\n  render(ctx, parentFrame, cb) {\n    if (typeof ctx === 'function') {\n      cb = ctx;\n      ctx = {};\n    } else if (typeof parentFrame === 'function') {\n      cb = parentFrame;\n      parentFrame = null;\n    }\n\n    // If there is a parent frame, we are being called from internal\n    // code of another template, and the internal system\n    // depends on the sync/async nature of the parent template\n    // to be inherited, so force an async callback\n    const forceAsync = !parentFrame;\n\n    // Catch compile errors for async rendering\n    try {\n      this.compile();\n    } catch (e) {\n      const err = lib._prettifyError(this.path, this.env.opts.dev, e);\n      if (cb) {\n        return callbackAsap(cb, err);\n      } else {\n        throw err;\n      }\n    }\n\n    const context = new Context(ctx || {}, this.blocks, this.env);\n    const frame = parentFrame ? parentFrame.push(true) : new Frame();\n    frame.topLevel = true;\n    let syncResult = null;\n    let didError = false;\n\n    this.rootRenderFunc(this.env, context, frame, globalRuntime, (err, res) => {\n      // TODO: this is actually a bug in the compiled template (because waterfall\n      // tasks are both not passing errors up the chain of callbacks AND are not\n      // causing a return from the top-most render function). But fixing that\n      // will require a more substantial change to the compiler.\n      if (didError && cb && typeof res !== 'undefined') {\n        // prevent multiple calls to cb\n        return;\n      }\n\n      if (err) {\n        err = lib._prettifyError(this.path, this.env.opts.dev, err);\n        didError = true;\n      }\n\n      if (cb) {\n        if (forceAsync) {\n          callbackAsap(cb, err, res);\n        } else {\n          cb(err, res);\n        }\n      } else {\n        if (err) {\n          throw err;\n        }\n        syncResult = res;\n      }\n    });\n\n    return syncResult;\n  }\n\n\n  getExported(ctx, parentFrame, cb) { // eslint-disable-line consistent-return\n    if (typeof ctx === 'function') {\n      cb = ctx;\n      ctx = {};\n    }\n\n    if (typeof parentFrame === 'function') {\n      cb = parentFrame;\n      parentFrame = null;\n    }\n\n    // Catch compile errors for async rendering\n    try {\n      this.compile();\n    } catch (e) {\n      if (cb) {\n        return cb(e);\n      } else {\n        throw e;\n      }\n    }\n\n    const frame = parentFrame ? parentFrame.push() : new Frame();\n    frame.topLevel = true;\n\n    // Run the rootRenderFunc to populate the context with exported vars\n    const context = new Context(ctx || {}, this.blocks, this.env);\n    this.rootRenderFunc(this.env, context, frame, globalRuntime, (err) => {\n      if (err) {\n        cb(err, null);\n      } else {\n        cb(null, context.getExported());\n      }\n    });\n  }\n\n  compile() {\n    if (!this.compiled) {\n      this._compile();\n    }\n  }\n\n  _compile() {\n    var props;\n\n    if (this.tmplProps) {\n      props = this.tmplProps;\n    } else {\n      const source = compiler.compile(this.tmplStr,\n        this.env.asyncFilters,\n        this.env.extensionsList,\n        this.path,\n        this.env.opts);\n\n      const func = new Function(source); // eslint-disable-line no-new-func\n      props = func();\n    }\n\n    this.blocks = this._getBlocks(props);\n    this.rootRenderFunc = props.root;\n    this.compiled = true;\n  }\n\n  _getBlocks(props) {\n    var blocks = {};\n\n    lib.keys(props).forEach((k) => {\n      if (k.slice(0, 2) === 'b_') {\n        blocks[k.slice(2)] = props[k];\n      }\n    });\n\n    return blocks;\n  }\n}\n\nmodule.exports = {\n  Environment: Environment,\n  Template: Template\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/environment.js","'use strict';\n\nvar lexer = require('./lexer');\nvar nodes = require('./nodes');\nvar Obj = require('./object').Obj;\nvar lib = require('./lib');\n\nclass Parser extends Obj {\n  init(tokens) {\n    this.tokens = tokens;\n    this.peeked = null;\n    this.breakOnBlocks = null;\n    this.dropLeadingWhitespace = false;\n\n    this.extensions = [];\n  }\n\n  nextToken(withWhitespace) {\n    var tok;\n\n    if (this.peeked) {\n      if (!withWhitespace && this.peeked.type === lexer.TOKEN_WHITESPACE) {\n        this.peeked = null;\n      } else {\n        tok = this.peeked;\n        this.peeked = null;\n        return tok;\n      }\n    }\n\n    tok = this.tokens.nextToken();\n\n    if (!withWhitespace) {\n      while (tok && tok.type === lexer.TOKEN_WHITESPACE) {\n        tok = this.tokens.nextToken();\n      }\n    }\n\n    return tok;\n  }\n\n  peekToken() {\n    this.peeked = this.peeked || this.nextToken();\n    return this.peeked;\n  }\n\n  pushToken(tok) {\n    if (this.peeked) {\n      throw new Error('pushToken: can only push one token on between reads');\n    }\n    this.peeked = tok;\n  }\n\n  error(msg, lineno, colno) {\n    if (lineno === undefined || colno === undefined) {\n      const tok = this.peekToken() || {};\n      lineno = tok.lineno;\n      colno = tok.colno;\n    }\n    if (lineno !== undefined) {\n      lineno += 1;\n    }\n    if (colno !== undefined) {\n      colno += 1;\n    }\n    return new lib.TemplateError(msg, lineno, colno);\n  }\n\n  fail(msg, lineno, colno) {\n    throw this.error(msg, lineno, colno);\n  }\n\n  skip(type) {\n    var tok = this.nextToken();\n    if (!tok || tok.type !== type) {\n      this.pushToken(tok);\n      return false;\n    }\n    return true;\n  }\n\n  expect(type) {\n    var tok = this.nextToken();\n    if (tok.type !== type) {\n      this.fail('expected ' + type + ', got ' + tok.type,\n        tok.lineno,\n        tok.colno);\n    }\n    return tok;\n  }\n\n  skipValue(type, val) {\n    var tok = this.nextToken();\n    if (!tok || tok.type !== type || tok.value !== val) {\n      this.pushToken(tok);\n      return false;\n    }\n    return true;\n  }\n\n  skipSymbol(val) {\n    return this.skipValue(lexer.TOKEN_SYMBOL, val);\n  }\n\n  advanceAfterBlockEnd(name) {\n    var tok;\n    if (!name) {\n      tok = this.peekToken();\n\n      if (!tok) {\n        this.fail('unexpected end of file');\n      }\n\n      if (tok.type !== lexer.TOKEN_SYMBOL) {\n        this.fail('advanceAfterBlockEnd: expected symbol token or ' +\n          'explicit name to be passed');\n      }\n\n      name = this.nextToken().value;\n    }\n\n    tok = this.nextToken();\n\n    if (tok && tok.type === lexer.TOKEN_BLOCK_END) {\n      if (tok.value.charAt(0) === '-') {\n        this.dropLeadingWhitespace = true;\n      }\n    } else {\n      this.fail('expected block end in ' + name + ' statement');\n    }\n\n    return tok;\n  }\n\n  advanceAfterVariableEnd() {\n    var tok = this.nextToken();\n\n    if (tok && tok.type === lexer.TOKEN_VARIABLE_END) {\n      this.dropLeadingWhitespace = tok.value.charAt(\n        tok.value.length - this.tokens.tags.VARIABLE_END.length - 1\n      ) === '-';\n    } else {\n      this.pushToken(tok);\n      this.fail('expected variable end');\n    }\n  }\n\n  parseFor() {\n    var forTok = this.peekToken();\n    var node;\n    var endBlock;\n\n    if (this.skipSymbol('for')) {\n      node = new nodes.For(forTok.lineno, forTok.colno);\n      endBlock = 'endfor';\n    } else if (this.skipSymbol('asyncEach')) {\n      node = new nodes.AsyncEach(forTok.lineno, forTok.colno);\n      endBlock = 'endeach';\n    } else if (this.skipSymbol('asyncAll')) {\n      node = new nodes.AsyncAll(forTok.lineno, forTok.colno);\n      endBlock = 'endall';\n    } else {\n      this.fail('parseFor: expected for{Async}', forTok.lineno, forTok.colno);\n    }\n\n    node.name = this.parsePrimary();\n\n    if (!(node.name instanceof nodes.Symbol)) {\n      this.fail('parseFor: variable name expected for loop');\n    }\n\n    const type = this.peekToken().type;\n    if (type === lexer.TOKEN_COMMA) {\n      // key/value iteration\n      const key = node.name;\n      node.name = new nodes.Array(key.lineno, key.colno);\n      node.name.addChild(key);\n\n      while (this.skip(lexer.TOKEN_COMMA)) {\n        const prim = this.parsePrimary();\n        node.name.addChild(prim);\n      }\n    }\n\n    if (!this.skipSymbol('in')) {\n      this.fail('parseFor: expected \"in\" keyword for loop',\n        forTok.lineno,\n        forTok.colno);\n    }\n\n    node.arr = this.parseExpression();\n    this.advanceAfterBlockEnd(forTok.value);\n\n    node.body = this.parseUntilBlocks(endBlock, 'else');\n\n    if (this.skipSymbol('else')) {\n      this.advanceAfterBlockEnd('else');\n      node.else_ = this.parseUntilBlocks(endBlock);\n    }\n\n    this.advanceAfterBlockEnd();\n\n    return node;\n  }\n\n  parseMacro() {\n    const macroTok = this.peekToken();\n    if (!this.skipSymbol('macro')) {\n      this.fail('expected macro');\n    }\n\n    const name = this.parsePrimary(true);\n    const args = this.parseSignature();\n    const node = new nodes.Macro(macroTok.lineno, macroTok.colno, name, args);\n\n    this.advanceAfterBlockEnd(macroTok.value);\n    node.body = this.parseUntilBlocks('endmacro');\n    this.advanceAfterBlockEnd();\n\n    return node;\n  }\n\n  parseCall() {\n    // a call block is parsed as a normal FunCall, but with an added\n    // 'caller' kwarg which is a Caller node.\n    var callTok = this.peekToken();\n    if (!this.skipSymbol('call')) {\n      this.fail('expected call');\n    }\n\n    const callerArgs = this.parseSignature(true) || new nodes.NodeList();\n    const macroCall = this.parsePrimary();\n\n    this.advanceAfterBlockEnd(callTok.value);\n    const body = this.parseUntilBlocks('endcall');\n    this.advanceAfterBlockEnd();\n\n    const callerName = new nodes.Symbol(callTok.lineno,\n      callTok.colno,\n      'caller');\n    const callerNode = new nodes.Caller(callTok.lineno,\n      callTok.colno,\n      callerName,\n      callerArgs,\n      body);\n\n    // add the additional caller kwarg, adding kwargs if necessary\n    const args = macroCall.args.children;\n    if (!(args[args.length - 1] instanceof nodes.KeywordArgs)) {\n      args.push(new nodes.KeywordArgs());\n    }\n    const kwargs = args[args.length - 1];\n    kwargs.addChild(new nodes.Pair(callTok.lineno,\n      callTok.colno,\n      callerName,\n      callerNode));\n\n    return new nodes.Output(callTok.lineno,\n      callTok.colno,\n      [macroCall]);\n  }\n\n  parseWithContext() {\n    var tok = this.peekToken();\n\n    var withContext = null;\n\n    if (this.skipSymbol('with')) {\n      withContext = true;\n    } else if (this.skipSymbol('without')) {\n      withContext = false;\n    }\n\n    if (withContext !== null) {\n      if (!this.skipSymbol('context')) {\n        this.fail('parseFrom: expected context after with/without',\n          tok.lineno,\n          tok.colno);\n      }\n    }\n\n    return withContext;\n  }\n\n  parseImport() {\n    var importTok = this.peekToken();\n    if (!this.skipSymbol('import')) {\n      this.fail('parseImport: expected import',\n        importTok.lineno,\n        importTok.colno);\n    }\n\n    const template = this.parseExpression();\n\n    if (!this.skipSymbol('as')) {\n      this.fail('parseImport: expected \"as\" keyword',\n        importTok.lineno,\n        importTok.colno);\n    }\n\n    const target = this.parseExpression();\n    const withContext = this.parseWithContext();\n    const node = new nodes.Import(importTok.lineno,\n      importTok.colno,\n      template,\n      target,\n      withContext);\n\n    this.advanceAfterBlockEnd(importTok.value);\n\n    return node;\n  }\n\n  parseFrom() {\n    const fromTok = this.peekToken();\n    if (!this.skipSymbol('from')) {\n      this.fail('parseFrom: expected from');\n    }\n\n    const template = this.parseExpression();\n\n    if (!this.skipSymbol('import')) {\n      this.fail('parseFrom: expected import',\n        fromTok.lineno,\n        fromTok.colno);\n    }\n\n    const names = new nodes.NodeList();\n    let withContext;\n\n    while (1) { // eslint-disable-line no-constant-condition\n      const nextTok = this.peekToken();\n      if (nextTok.type === lexer.TOKEN_BLOCK_END) {\n        if (!names.children.length) {\n          this.fail('parseFrom: Expected at least one import name',\n            fromTok.lineno,\n            fromTok.colno);\n        }\n\n        // Since we are manually advancing past the block end,\n        // need to keep track of whitespace control (normally\n        // this is done in `advanceAfterBlockEnd`\n        if (nextTok.value.charAt(0) === '-') {\n          this.dropLeadingWhitespace = true;\n        }\n\n        this.nextToken();\n        break;\n      }\n\n      if (names.children.length > 0 && !this.skip(lexer.TOKEN_COMMA)) {\n        this.fail('parseFrom: expected comma',\n          fromTok.lineno,\n          fromTok.colno);\n      }\n\n      const name = this.parsePrimary();\n      if (name.value.charAt(0) === '_') {\n        this.fail('parseFrom: names starting with an underscore cannot be imported',\n          name.lineno,\n          name.colno);\n      }\n\n      if (this.skipSymbol('as')) {\n        const alias = this.parsePrimary();\n        names.addChild(new nodes.Pair(name.lineno,\n          name.colno,\n          name,\n          alias));\n      } else {\n        names.addChild(name);\n      }\n\n      withContext = this.parseWithContext();\n    }\n\n    return new nodes.FromImport(fromTok.lineno,\n      fromTok.colno,\n      template,\n      names,\n      withContext);\n  }\n\n  parseBlock() {\n    const tag = this.peekToken();\n    if (!this.skipSymbol('block')) {\n      this.fail('parseBlock: expected block', tag.lineno, tag.colno);\n    }\n\n    const node = new nodes.Block(tag.lineno, tag.colno);\n\n    node.name = this.parsePrimary();\n    if (!(node.name instanceof nodes.Symbol)) {\n      this.fail('parseBlock: variable name expected',\n        tag.lineno,\n        tag.colno);\n    }\n\n    this.advanceAfterBlockEnd(tag.value);\n\n    node.body = this.parseUntilBlocks('endblock');\n    this.skipSymbol('endblock');\n    this.skipSymbol(node.name.value);\n\n    const tok = this.peekToken();\n    if (!tok) {\n      this.fail('parseBlock: expected endblock, got end of file');\n    }\n\n    this.advanceAfterBlockEnd(tok.value);\n\n    return node;\n  }\n\n  parseExtends() {\n    const tagName = 'extends';\n    const tag = this.peekToken();\n    if (!this.skipSymbol(tagName)) {\n      this.fail('parseTemplateRef: expected ' + tagName);\n    }\n\n    const node = new nodes.Extends(tag.lineno, tag.colno);\n    node.template = this.parseExpression();\n\n    this.advanceAfterBlockEnd(tag.value);\n    return node;\n  }\n\n  parseInclude() {\n    const tagName = 'include';\n    const tag = this.peekToken();\n    if (!this.skipSymbol(tagName)) {\n      this.fail('parseInclude: expected ' + tagName);\n    }\n\n    const node = new nodes.Include(tag.lineno, tag.colno);\n    node.template = this.parseExpression();\n\n    if (this.skipSymbol('ignore') && this.skipSymbol('missing')) {\n      node.ignoreMissing = true;\n    }\n\n    this.advanceAfterBlockEnd(tag.value);\n    return node;\n  }\n\n  parseIf() {\n    const tag = this.peekToken();\n    let node;\n\n    if (this.skipSymbol('if') || this.skipSymbol('elif') || this.skipSymbol('elseif')) {\n      node = new nodes.If(tag.lineno, tag.colno);\n    } else if (this.skipSymbol('ifAsync')) {\n      node = new nodes.IfAsync(tag.lineno, tag.colno);\n    } else {\n      this.fail('parseIf: expected if, elif, or elseif',\n        tag.lineno,\n        tag.colno);\n    }\n\n    node.cond = this.parseExpression();\n    this.advanceAfterBlockEnd(tag.value);\n\n    node.body = this.parseUntilBlocks('elif', 'elseif', 'else', 'endif');\n    const tok = this.peekToken();\n\n    switch (tok && tok.value) {\n      case 'elseif':\n      case 'elif':\n        node.else_ = this.parseIf();\n        break;\n      case 'else':\n        this.advanceAfterBlockEnd();\n        node.else_ = this.parseUntilBlocks('endif');\n        this.advanceAfterBlockEnd();\n        break;\n      case 'endif':\n        node.else_ = null;\n        this.advanceAfterBlockEnd();\n        break;\n      default:\n        this.fail('parseIf: expected elif, else, or endif, got end of file');\n    }\n\n    return node;\n  }\n\n  parseSet() {\n    const tag = this.peekToken();\n    if (!this.skipSymbol('set')) {\n      this.fail('parseSet: expected set', tag.lineno, tag.colno);\n    }\n\n    const node = new nodes.Set(tag.lineno, tag.colno, []);\n\n    let target;\n    while ((target = this.parsePrimary())) {\n      node.targets.push(target);\n\n      if (!this.skip(lexer.TOKEN_COMMA)) {\n        break;\n      }\n    }\n\n    if (!this.skipValue(lexer.TOKEN_OPERATOR, '=')) {\n      if (!this.skip(lexer.TOKEN_BLOCK_END)) {\n        this.fail('parseSet: expected = or block end in set tag',\n          tag.lineno,\n          tag.colno);\n      } else {\n        node.body = new nodes.Capture(\n          tag.lineno,\n          tag.colno,\n          this.parseUntilBlocks('endset')\n        );\n        node.value = null;\n        this.advanceAfterBlockEnd();\n      }\n    } else {\n      node.value = this.parseExpression();\n      this.advanceAfterBlockEnd(tag.value);\n    }\n\n    return node;\n  }\n\n  parseSwitch() {\n    /*\n     * Store the tag names in variables in case someone ever wants to\n     * customize this.\n     */\n    const switchStart = 'switch';\n    const switchEnd = 'endswitch';\n    const caseStart = 'case';\n    const caseDefault = 'default';\n\n    // Get the switch tag.\n    const tag = this.peekToken();\n\n    // fail early if we get some unexpected tag.\n    if (\n      !this.skipSymbol(switchStart)\n      && !this.skipSymbol(caseStart)\n      && !this.skipSymbol(caseDefault)\n    ) {\n      this.fail('parseSwitch: expected \"switch,\" \"case\" or \"default\"', tag.lineno, tag.colno);\n    }\n\n    // parse the switch expression\n    const expr = this.parseExpression();\n\n    // advance until a start of a case, a default case or an endswitch.\n    this.advanceAfterBlockEnd(switchStart);\n    this.parseUntilBlocks(caseStart, caseDefault, switchEnd);\n\n    // this is the first case. it could also be an endswitch, we'll check.\n    let tok = this.peekToken();\n\n    // create new variables for our cases and default case.\n    const cases = [];\n    let defaultCase;\n\n    // while we're dealing with new cases nodes...\n    do {\n      // skip the start symbol and get the case expression\n      this.skipSymbol(caseStart);\n      const cond = this.parseExpression();\n      this.advanceAfterBlockEnd(switchStart);\n      // get the body of the case node and add it to the array of cases.\n      const body = this.parseUntilBlocks(caseStart, caseDefault, switchEnd);\n      cases.push(new nodes.Case(tok.line, tok.col, cond, body));\n      // get our next case\n      tok = this.peekToken();\n    } while (tok && tok.value === caseStart);\n\n    // we either have a default case or a switch end.\n    switch (tok.value) {\n      case caseDefault:\n        this.advanceAfterBlockEnd();\n        defaultCase = this.parseUntilBlocks(switchEnd);\n        this.advanceAfterBlockEnd();\n        break;\n      case switchEnd:\n        this.advanceAfterBlockEnd();\n        break;\n      default:\n        // otherwise bail because EOF\n        this.fail('parseSwitch: expected \"case,\" \"default\" or \"endswitch,\" got EOF.');\n    }\n\n    // and return the switch node.\n    return new nodes.Switch(tag.lineno, tag.colno, expr, cases, defaultCase);\n  }\n\n  parseStatement() {\n    var tok = this.peekToken();\n    var node;\n\n    if (tok.type !== lexer.TOKEN_SYMBOL) {\n      this.fail('tag name expected', tok.lineno, tok.colno);\n    }\n\n    if (this.breakOnBlocks &&\n      lib.indexOf(this.breakOnBlocks, tok.value) !== -1) {\n      return null;\n    }\n\n    switch (tok.value) {\n      case 'raw':\n        return this.parseRaw();\n      case 'verbatim':\n        return this.parseRaw('verbatim');\n      case 'if':\n      case 'ifAsync':\n        return this.parseIf();\n      case 'for':\n      case 'asyncEach':\n      case 'asyncAll':\n        return this.parseFor();\n      case 'block':\n        return this.parseBlock();\n      case 'extends':\n        return this.parseExtends();\n      case 'include':\n        return this.parseInclude();\n      case 'set':\n        return this.parseSet();\n      case 'macro':\n        return this.parseMacro();\n      case 'call':\n        return this.parseCall();\n      case 'import':\n        return this.parseImport();\n      case 'from':\n        return this.parseFrom();\n      case 'filter':\n        return this.parseFilterStatement();\n      case 'switch':\n        return this.parseSwitch();\n      default:\n        if (this.extensions.length) {\n          for (let i = 0; i < this.extensions.length; i++) {\n            const ext = this.extensions[i];\n            if (lib.indexOf(ext.tags || [], tok.value) !== -1) {\n              return ext.parse(this, nodes, lexer);\n            }\n          }\n        }\n        this.fail('unknown block tag: ' + tok.value, tok.lineno, tok.colno);\n    }\n\n    return node;\n  }\n\n  parseRaw(tagName) {\n    tagName = tagName || 'raw';\n    const endTagName = 'end' + tagName;\n    // Look for upcoming raw blocks (ignore all other kinds of blocks)\n    const rawBlockRegex = new RegExp('([\\\\s\\\\S]*?){%\\\\s*(' + tagName + '|' + endTagName + ')\\\\s*(?=%})%}');\n    let rawLevel = 1;\n    let str = '';\n    let matches = null;\n\n    // Skip opening raw token\n    // Keep this token to track line and column numbers\n    const begun = this.advanceAfterBlockEnd();\n\n    // Exit when there's nothing to match\n    // or when we've found the matching \"endraw\" block\n    while ((matches = this.tokens._extractRegex(rawBlockRegex)) && rawLevel > 0) {\n      const all = matches[0];\n      const pre = matches[1];\n      const blockName = matches[2];\n\n      // Adjust rawlevel\n      if (blockName === tagName) {\n        rawLevel += 1;\n      } else if (blockName === endTagName) {\n        rawLevel -= 1;\n      }\n\n      // Add to str\n      if (rawLevel === 0) {\n        // We want to exclude the last \"endraw\"\n        str += pre;\n        // Move tokenizer to beginning of endraw block\n        this.tokens.backN(all.length - pre.length);\n      } else {\n        str += all;\n      }\n    }\n\n    return new nodes.Output(\n      begun.lineno,\n      begun.colno,\n      [new nodes.TemplateData(begun.lineno, begun.colno, str)]\n    );\n  }\n\n  parsePostfix(node) {\n    let lookup;\n    let tok = this.peekToken();\n\n    while (tok) {\n      if (tok.type === lexer.TOKEN_LEFT_PAREN) {\n        // Function call\n        node = new nodes.FunCall(tok.lineno,\n          tok.colno,\n          node,\n          this.parseSignature());\n      } else if (tok.type === lexer.TOKEN_LEFT_BRACKET) {\n        // Reference\n        lookup = this.parseAggregate();\n        if (lookup.children.length > 1) {\n          this.fail('invalid index');\n        }\n\n        node = new nodes.LookupVal(tok.lineno,\n          tok.colno,\n          node,\n          lookup.children[0]);\n      } else if (tok.type === lexer.TOKEN_OPERATOR && tok.value === '.') {\n        // Reference\n        this.nextToken();\n        const val = this.nextToken();\n\n        if (val.type !== lexer.TOKEN_SYMBOL) {\n          this.fail('expected name as lookup value, got ' + val.value,\n            val.lineno,\n            val.colno);\n        }\n\n        // Make a literal string because it's not a variable\n        // reference\n        lookup = new nodes.Literal(val.lineno,\n          val.colno,\n          val.value);\n\n        node = new nodes.LookupVal(tok.lineno,\n          tok.colno,\n          node,\n          lookup);\n      } else {\n        break;\n      }\n\n      tok = this.peekToken();\n    }\n\n    return node;\n  }\n\n  parseExpression() {\n    var node = this.parseInlineIf();\n    return node;\n  }\n\n  parseInlineIf() {\n    let node = this.parseOr();\n    if (this.skipSymbol('if')) {\n      const condNode = this.parseOr();\n      const bodyNode = node;\n      node = new nodes.InlineIf(node.lineno, node.colno);\n      node.body = bodyNode;\n      node.cond = condNode;\n      if (this.skipSymbol('else')) {\n        node.else_ = this.parseOr();\n      } else {\n        node.else_ = null;\n      }\n    }\n\n    return node;\n  }\n\n  parseOr() {\n    let node = this.parseAnd();\n    while (this.skipSymbol('or')) {\n      const node2 = this.parseAnd();\n      node = new nodes.Or(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseAnd() {\n    let node = this.parseNot();\n    while (this.skipSymbol('and')) {\n      const node2 = this.parseNot();\n      node = new nodes.And(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseNot() {\n    const tok = this.peekToken();\n    if (this.skipSymbol('not')) {\n      return new nodes.Not(tok.lineno,\n        tok.colno,\n        this.parseNot());\n    }\n    return this.parseIn();\n  }\n\n  parseIn() {\n    let node = this.parseIs();\n    while (1) { // eslint-disable-line no-constant-condition\n      // check if the next token is 'not'\n      const tok = this.nextToken();\n      if (!tok) {\n        break;\n      }\n      const invert = tok.type === lexer.TOKEN_SYMBOL && tok.value === 'not';\n      // if it wasn't 'not', put it back\n      if (!invert) {\n        this.pushToken(tok);\n      }\n      if (this.skipSymbol('in')) {\n        const node2 = this.parseIs();\n        node = new nodes.In(node.lineno,\n          node.colno,\n          node,\n          node2);\n        if (invert) {\n          node = new nodes.Not(node.lineno,\n            node.colno,\n            node);\n        }\n      } else {\n        // if we'd found a 'not' but this wasn't an 'in', put back the 'not'\n        if (invert) {\n          this.pushToken(tok);\n        }\n        break;\n      }\n    }\n    return node;\n  }\n\n  // I put this right after \"in\" in the operator precedence stack. That can\n  // obviously be changed to be closer to Jinja.\n  parseIs() {\n    let node = this.parseCompare();\n    // look for an is\n    if (this.skipSymbol('is')) {\n      // look for a not\n      const not = this.skipSymbol('not');\n      // get the next node\n      const node2 = this.parseCompare();\n      // create an Is node using the next node and the info from our Is node.\n      node = new nodes.Is(node.lineno, node.colno, node, node2);\n      // if we have a Not, create a Not node from our Is node.\n      if (not) {\n        node = new nodes.Not(node.lineno, node.colno, node);\n      }\n    }\n    // return the node.\n    return node;\n  }\n\n  parseCompare() {\n    const compareOps = ['==', '===', '!=', '!==', '<', '>', '<=', '>='];\n    const expr = this.parseConcat();\n    const ops = [];\n\n    while (1) { // eslint-disable-line no-constant-condition\n      const tok = this.nextToken();\n\n      if (!tok) {\n        break;\n      } else if (compareOps.indexOf(tok.value) !== -1) {\n        ops.push(new nodes.CompareOperand(tok.lineno,\n          tok.colno,\n          this.parseConcat(),\n          tok.value));\n      } else {\n        this.pushToken(tok);\n        break;\n      }\n    }\n\n    if (ops.length) {\n      return new nodes.Compare(ops[0].lineno,\n        ops[0].colno,\n        expr,\n        ops);\n    } else {\n      return expr;\n    }\n  }\n\n  // finds the '~' for string concatenation\n  parseConcat() {\n    let node = this.parseAdd();\n    while (this.skipValue(lexer.TOKEN_TILDE, '~')) {\n      const node2 = this.parseAdd();\n      node = new nodes.Concat(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseAdd() {\n    let node = this.parseSub();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '+')) {\n      const node2 = this.parseSub();\n      node = new nodes.Add(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseSub() {\n    let node = this.parseMul();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '-')) {\n      const node2 = this.parseMul();\n      node = new nodes.Sub(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseMul() {\n    let node = this.parseDiv();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '*')) {\n      const node2 = this.parseDiv();\n      node = new nodes.Mul(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseDiv() {\n    let node = this.parseFloorDiv();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '/')) {\n      const node2 = this.parseFloorDiv();\n      node = new nodes.Div(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseFloorDiv() {\n    let node = this.parseMod();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '//')) {\n      const node2 = this.parseMod();\n      node = new nodes.FloorDiv(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseMod() {\n    let node = this.parsePow();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '%')) {\n      const node2 = this.parsePow();\n      node = new nodes.Mod(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parsePow() {\n    let node = this.parseUnary();\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '**')) {\n      const node2 = this.parseUnary();\n      node = new nodes.Pow(node.lineno,\n        node.colno,\n        node,\n        node2);\n    }\n    return node;\n  }\n\n  parseUnary(noFilters) {\n    const tok = this.peekToken();\n    let node;\n\n    if (this.skipValue(lexer.TOKEN_OPERATOR, '-')) {\n      node = new nodes.Neg(tok.lineno,\n        tok.colno,\n        this.parseUnary(true));\n    } else if (this.skipValue(lexer.TOKEN_OPERATOR, '+')) {\n      node = new nodes.Pos(tok.lineno,\n        tok.colno,\n        this.parseUnary(true));\n    } else {\n      node = this.parsePrimary();\n    }\n\n    if (!noFilters) {\n      node = this.parseFilter(node);\n    }\n\n    return node;\n  }\n\n  parsePrimary(noPostfix) {\n    const tok = this.nextToken();\n    let val;\n    let node = null;\n\n    if (!tok) {\n      this.fail('expected expression, got end of file');\n    } else if (tok.type === lexer.TOKEN_STRING) {\n      val = tok.value;\n    } else if (tok.type === lexer.TOKEN_INT) {\n      val = parseInt(tok.value, 10);\n    } else if (tok.type === lexer.TOKEN_FLOAT) {\n      val = parseFloat(tok.value);\n    } else if (tok.type === lexer.TOKEN_BOOLEAN) {\n      if (tok.value === 'true') {\n        val = true;\n      } else if (tok.value === 'false') {\n        val = false;\n      } else {\n        this.fail('invalid boolean: ' + tok.value,\n          tok.lineno,\n          tok.colno);\n      }\n    } else if (tok.type === lexer.TOKEN_NONE) {\n      val = null;\n    } else if (tok.type === lexer.TOKEN_REGEX) {\n      val = new RegExp(tok.value.body, tok.value.flags);\n    }\n\n    if (val !== undefined) {\n      node = new nodes.Literal(tok.lineno, tok.colno, val);\n    } else if (tok.type === lexer.TOKEN_SYMBOL) {\n      node = new nodes.Symbol(tok.lineno, tok.colno, tok.value);\n    } else {\n      // See if it's an aggregate type, we need to push the\n      // current delimiter token back on\n      this.pushToken(tok);\n      node = this.parseAggregate();\n    }\n\n    if (!noPostfix) {\n      node = this.parsePostfix(node);\n    }\n\n    if (node) {\n      return node;\n    } else {\n      throw this.error(`unexpected token: ${tok.value}`, tok.lineno, tok.colno);\n    }\n  }\n\n  parseFilterName() {\n    const tok = this.expect(lexer.TOKEN_SYMBOL);\n    let name = tok.value;\n\n    while (this.skipValue(lexer.TOKEN_OPERATOR, '.')) {\n      name += '.' + this.expect(lexer.TOKEN_SYMBOL).value;\n    }\n\n    return new nodes.Symbol(tok.lineno, tok.colno, name);\n  }\n\n  parseFilterArgs(node) {\n    if (this.peekToken().type === lexer.TOKEN_LEFT_PAREN) {\n      // Get a FunCall node and add the parameters to the\n      // filter\n      const call = this.parsePostfix(node);\n      return call.args.children;\n    }\n    return [];\n  }\n\n  parseFilter(node) {\n    while (this.skip(lexer.TOKEN_PIPE)) {\n      const name = this.parseFilterName();\n\n      node = new nodes.Filter(\n        name.lineno,\n        name.colno,\n        name,\n        new nodes.NodeList(\n          name.lineno,\n          name.colno,\n          [node].concat(this.parseFilterArgs(node))\n        )\n      );\n    }\n\n    return node;\n  }\n\n  parseFilterStatement() {\n    var filterTok = this.peekToken();\n    if (!this.skipSymbol('filter')) {\n      this.fail('parseFilterStatement: expected filter');\n    }\n\n    const name = this.parseFilterName();\n    const args = this.parseFilterArgs(name);\n\n    this.advanceAfterBlockEnd(filterTok.value);\n    const body = new nodes.Capture(\n      name.lineno,\n      name.colno,\n      this.parseUntilBlocks('endfilter')\n    );\n    this.advanceAfterBlockEnd();\n\n    const node = new nodes.Filter(\n      name.lineno,\n      name.colno,\n      name,\n      new nodes.NodeList(\n        name.lineno,\n        name.colno,\n        [body].concat(args)\n      )\n    );\n\n    return new nodes.Output(\n      name.lineno,\n      name.colno,\n      [node]\n    );\n  }\n\n  parseAggregate() {\n    var tok = this.nextToken();\n    var node;\n\n    switch (tok.type) {\n      case lexer.TOKEN_LEFT_PAREN:\n        node = new nodes.Group(tok.lineno, tok.colno);\n        break;\n      case lexer.TOKEN_LEFT_BRACKET:\n        node = new nodes.Array(tok.lineno, tok.colno);\n        break;\n      case lexer.TOKEN_LEFT_CURLY:\n        node = new nodes.Dict(tok.lineno, tok.colno);\n        break;\n      default:\n        return null;\n    }\n\n    while (1) { // eslint-disable-line no-constant-condition\n      const type = this.peekToken().type;\n      if (type === lexer.TOKEN_RIGHT_PAREN ||\n        type === lexer.TOKEN_RIGHT_BRACKET ||\n        type === lexer.TOKEN_RIGHT_CURLY) {\n        this.nextToken();\n        break;\n      }\n\n      if (node.children.length > 0) {\n        if (!this.skip(lexer.TOKEN_COMMA)) {\n          this.fail('parseAggregate: expected comma after expression',\n            tok.lineno,\n            tok.colno);\n        }\n      }\n\n      if (node instanceof nodes.Dict) {\n        // TODO: check for errors\n        const key = this.parsePrimary();\n\n        // We expect a key/value pair for dicts, separated by a\n        // colon\n        if (!this.skip(lexer.TOKEN_COLON)) {\n          this.fail('parseAggregate: expected colon after dict key',\n            tok.lineno,\n            tok.colno);\n        }\n\n        // TODO: check for errors\n        const value = this.parseExpression();\n        node.addChild(new nodes.Pair(key.lineno,\n          key.colno,\n          key,\n          value));\n      } else {\n        // TODO: check for errors\n        const expr = this.parseExpression();\n        node.addChild(expr);\n      }\n    }\n\n    return node;\n  }\n\n  parseSignature(tolerant, noParens) {\n    let tok = this.peekToken();\n    if (!noParens && tok.type !== lexer.TOKEN_LEFT_PAREN) {\n      if (tolerant) {\n        return null;\n      } else {\n        this.fail('expected arguments', tok.lineno, tok.colno);\n      }\n    }\n\n    if (tok.type === lexer.TOKEN_LEFT_PAREN) {\n      tok = this.nextToken();\n    }\n\n    const args = new nodes.NodeList(tok.lineno, tok.colno);\n    const kwargs = new nodes.KeywordArgs(tok.lineno, tok.colno);\n    let checkComma = false;\n\n    while (1) { // eslint-disable-line no-constant-condition\n      tok = this.peekToken();\n      if (!noParens && tok.type === lexer.TOKEN_RIGHT_PAREN) {\n        this.nextToken();\n        break;\n      } else if (noParens && tok.type === lexer.TOKEN_BLOCK_END) {\n        break;\n      }\n\n      if (checkComma && !this.skip(lexer.TOKEN_COMMA)) {\n        this.fail('parseSignature: expected comma after expression',\n          tok.lineno,\n          tok.colno);\n      } else {\n        const arg = this.parseExpression();\n\n        if (this.skipValue(lexer.TOKEN_OPERATOR, '=')) {\n          kwargs.addChild(\n            new nodes.Pair(arg.lineno,\n              arg.colno,\n              arg,\n              this.parseExpression())\n          );\n        } else {\n          args.addChild(arg);\n        }\n      }\n\n      checkComma = true;\n    }\n\n    if (kwargs.children.length) {\n      args.addChild(kwargs);\n    }\n\n    return args;\n  }\n\n  parseUntilBlocks(...blockNames) {\n    const prev = this.breakOnBlocks;\n    this.breakOnBlocks = blockNames;\n\n    const ret = this.parse();\n\n    this.breakOnBlocks = prev;\n    return ret;\n  }\n\n  parseNodes() {\n    let tok;\n    const buf = [];\n\n    while ((tok = this.nextToken())) {\n      if (tok.type === lexer.TOKEN_DATA) {\n        let data = tok.value;\n        const nextToken = this.peekToken();\n        const nextVal = nextToken && nextToken.value;\n\n        // If the last token has \"-\" we need to trim the\n        // leading whitespace of the data. This is marked with\n        // the `dropLeadingWhitespace` variable.\n        if (this.dropLeadingWhitespace) {\n          // TODO: this could be optimized (don't use regex)\n          data = data.replace(/^\\s*/, '');\n          this.dropLeadingWhitespace = false;\n        }\n\n        // Same for the succeeding block start token\n        if (nextToken &&\n          ((nextToken.type === lexer.TOKEN_BLOCK_START &&\n          nextVal.charAt(nextVal.length - 1) === '-') ||\n          (nextToken.type === lexer.TOKEN_VARIABLE_START &&\n          nextVal.charAt(this.tokens.tags.VARIABLE_START.length)\n          === '-') ||\n          (nextToken.type === lexer.TOKEN_COMMENT &&\n          nextVal.charAt(this.tokens.tags.COMMENT_START.length)\n          === '-'))) {\n          // TODO: this could be optimized (don't use regex)\n          data = data.replace(/\\s*$/, '');\n        }\n\n        buf.push(new nodes.Output(tok.lineno,\n          tok.colno,\n          [new nodes.TemplateData(tok.lineno,\n            tok.colno,\n            data)]));\n      } else if (tok.type === lexer.TOKEN_BLOCK_START) {\n        this.dropLeadingWhitespace = false;\n        const n = this.parseStatement();\n        if (!n) {\n          break;\n        }\n        buf.push(n);\n      } else if (tok.type === lexer.TOKEN_VARIABLE_START) {\n        const e = this.parseExpression();\n        this.dropLeadingWhitespace = false;\n        this.advanceAfterVariableEnd();\n        buf.push(new nodes.Output(tok.lineno, tok.colno, [e]));\n      } else if (tok.type === lexer.TOKEN_COMMENT) {\n        this.dropLeadingWhitespace = tok.value.charAt(\n          tok.value.length - this.tokens.tags.COMMENT_END.length - 1\n        ) === '-';\n      } else {\n        // Ignore comments, otherwise this should be an error\n        this.fail('Unexpected token at top-level: ' +\n          tok.type, tok.lineno, tok.colno);\n      }\n    }\n\n    return buf;\n  }\n\n  parse() {\n    return new nodes.NodeList(0, 0, this.parseNodes());\n  }\n\n  parseAsRoot() {\n    return new nodes.Root(0, 0, this.parseNodes());\n  }\n}\n\n// var util = require('util');\n\n// var l = lexer.lex('{%- if x -%}\\n hello {% endif %}');\n// var t;\n// while((t = l.nextToken())) {\n//     console.log(util.inspect(t));\n// }\n\n// var p = new Parser(lexer.lex('hello {% filter title %}' +\n//                              'Hello madam how are you' +\n//                              '{% endfilter %}'));\n// var n = p.parseAsRoot();\n// nodes.printNodes(n);\n\nmodule.exports = {\n  parse(src, extensions, opts) {\n    var p = new Parser(lexer.lex(src, opts));\n    if (extensions !== undefined) {\n      p.extensions = extensions;\n    }\n    return p.parseAsRoot();\n  },\n  Parser: Parser\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/parser.js","'use strict';\n\nconst lib = require('./lib');\n\nlet whitespaceChars = ' \\n\\t\\r\\u00A0';\nlet delimChars = '()[]{}%*-+~/#,:|.<>=!';\nlet intChars = '0123456789';\n\nlet BLOCK_START = '{%';\nlet BLOCK_END = '%}';\nlet VARIABLE_START = '{{';\nlet VARIABLE_END = '}}';\nlet COMMENT_START = '{#';\nlet COMMENT_END = '#}';\n\nlet TOKEN_STRING = 'string';\nlet TOKEN_WHITESPACE = 'whitespace';\nlet TOKEN_DATA = 'data';\nlet TOKEN_BLOCK_START = 'block-start';\nlet TOKEN_BLOCK_END = 'block-end';\nlet TOKEN_VARIABLE_START = 'variable-start';\nlet TOKEN_VARIABLE_END = 'variable-end';\nlet TOKEN_COMMENT = 'comment';\nlet TOKEN_LEFT_PAREN = 'left-paren';\nlet TOKEN_RIGHT_PAREN = 'right-paren';\nlet TOKEN_LEFT_BRACKET = 'left-bracket';\nlet TOKEN_RIGHT_BRACKET = 'right-bracket';\nlet TOKEN_LEFT_CURLY = 'left-curly';\nlet TOKEN_RIGHT_CURLY = 'right-curly';\nlet TOKEN_OPERATOR = 'operator';\nlet TOKEN_COMMA = 'comma';\nlet TOKEN_COLON = 'colon';\nlet TOKEN_TILDE = 'tilde';\nlet TOKEN_PIPE = 'pipe';\nlet TOKEN_INT = 'int';\nlet TOKEN_FLOAT = 'float';\nlet TOKEN_BOOLEAN = 'boolean';\nlet TOKEN_NONE = 'none';\nlet TOKEN_SYMBOL = 'symbol';\nlet TOKEN_SPECIAL = 'special';\nlet TOKEN_REGEX = 'regex';\n\nfunction token(type, value, lineno, colno) {\n  return {\n    type: type,\n    value: value,\n    lineno: lineno,\n    colno: colno\n  };\n}\n\nclass Tokenizer {\n  constructor(str, opts) {\n    this.str = str;\n    this.index = 0;\n    this.len = str.length;\n    this.lineno = 0;\n    this.colno = 0;\n\n    this.in_code = false;\n\n    opts = opts || {};\n\n    let tags = opts.tags || {};\n    this.tags = {\n      BLOCK_START: tags.blockStart || BLOCK_START,\n      BLOCK_END: tags.blockEnd || BLOCK_END,\n      VARIABLE_START: tags.variableStart || VARIABLE_START,\n      VARIABLE_END: tags.variableEnd || VARIABLE_END,\n      COMMENT_START: tags.commentStart || COMMENT_START,\n      COMMENT_END: tags.commentEnd || COMMENT_END\n    };\n\n    this.trimBlocks = !!opts.trimBlocks;\n    this.lstripBlocks = !!opts.lstripBlocks;\n  }\n\n  nextToken() {\n    let lineno = this.lineno;\n    let colno = this.colno;\n    let tok;\n\n    if (this.in_code) {\n      // Otherwise, if we are in a block parse it as code\n      let cur = this.current();\n\n      if (this.isFinished()) {\n        // We have nothing else to parse\n        return null;\n      } else if (cur === '\"' || cur === '\\'') {\n        // We've hit a string\n        return token(TOKEN_STRING, this._parseString(cur), lineno, colno);\n      } else if ((tok = this._extract(whitespaceChars))) {\n        // We hit some whitespace\n        return token(TOKEN_WHITESPACE, tok, lineno, colno);\n      } else if ((tok = this._extractString(this.tags.BLOCK_END)) ||\n        (tok = this._extractString('-' + this.tags.BLOCK_END))) {\n        // Special check for the block end tag\n        //\n        // It is a requirement that start and end tags are composed of\n        // delimiter characters (%{}[] etc), and our code always\n        // breaks on delimiters so we can assume the token parsing\n        // doesn't consume these elsewhere\n        this.in_code = false;\n        if (this.trimBlocks) {\n          cur = this.current();\n          if (cur === '\\n') {\n            // Skip newline\n            this.forward();\n          } else if (cur === '\\r') {\n            // Skip CRLF newline\n            this.forward();\n            cur = this.current();\n            if (cur === '\\n') {\n              this.forward();\n            } else {\n              // Was not a CRLF, so go back\n              this.back();\n            }\n          }\n        }\n        return token(TOKEN_BLOCK_END, tok, lineno, colno);\n      } else if ((tok = this._extractString(this.tags.VARIABLE_END)) ||\n        (tok = this._extractString('-' + this.tags.VARIABLE_END))) {\n        // Special check for variable end tag (see above)\n        this.in_code = false;\n        return token(TOKEN_VARIABLE_END, tok, lineno, colno);\n      } else if (cur === 'r' && this.str.charAt(this.index + 1) === '/') {\n        // Skip past 'r/'.\n        this.forwardN(2);\n\n        // Extract until the end of the regex -- / ends it, \\/ does not.\n        let regexBody = '';\n        while (!this.isFinished()) {\n          if (this.current() === '/' && this.previous() !== '\\\\') {\n            this.forward();\n            break;\n          } else {\n            regexBody += this.current();\n            this.forward();\n          }\n        }\n\n        // Check for flags.\n        // The possible flags are according to https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/RegExp)\n        let POSSIBLE_FLAGS = ['g', 'i', 'm', 'y'];\n        let regexFlags = '';\n        while (!this.isFinished()) {\n          let isCurrentAFlag = POSSIBLE_FLAGS.indexOf(this.current()) !== -1;\n          if (isCurrentAFlag) {\n            regexFlags += this.current();\n            this.forward();\n          } else {\n            break;\n          }\n        }\n\n        return token(TOKEN_REGEX, {\n          body: regexBody,\n          flags: regexFlags\n        }, lineno, colno);\n      } else if (delimChars.indexOf(cur) !== -1) {\n        // We've hit a delimiter (a special char like a bracket)\n        this.forward();\n        let complexOps = ['==', '===', '!=', '!==', '<=', '>=', '//', '**'];\n        let curComplex = cur + this.current();\n        let type;\n\n        if (lib.indexOf(complexOps, curComplex) !== -1) {\n          this.forward();\n          cur = curComplex;\n\n          // See if this is a strict equality/inequality comparator\n          if (lib.indexOf(complexOps, curComplex + this.current()) !== -1) {\n            cur = curComplex + this.current();\n            this.forward();\n          }\n        }\n\n        switch (cur) {\n          case '(':\n            type = TOKEN_LEFT_PAREN;\n            break;\n          case ')':\n            type = TOKEN_RIGHT_PAREN;\n            break;\n          case '[':\n            type = TOKEN_LEFT_BRACKET;\n            break;\n          case ']':\n            type = TOKEN_RIGHT_BRACKET;\n            break;\n          case '{':\n            type = TOKEN_LEFT_CURLY;\n            break;\n          case '}':\n            type = TOKEN_RIGHT_CURLY;\n            break;\n          case ',':\n            type = TOKEN_COMMA;\n            break;\n          case ':':\n            type = TOKEN_COLON;\n            break;\n          case '~':\n            type = TOKEN_TILDE;\n            break;\n          case '|':\n            type = TOKEN_PIPE;\n            break;\n          default:\n            type = TOKEN_OPERATOR;\n        }\n\n        return token(type, cur, lineno, colno);\n      } else {\n        // We are not at whitespace or a delimiter, so extract the\n        // text and parse it\n        tok = this._extractUntil(whitespaceChars + delimChars);\n\n        if (tok.match(/^[-+]?[0-9]+$/)) {\n          if (this.current() === '.') {\n            this.forward();\n            let dec = this._extract(intChars);\n            return token(TOKEN_FLOAT, tok + '.' + dec, lineno, colno);\n          } else {\n            return token(TOKEN_INT, tok, lineno, colno);\n          }\n        } else if (tok.match(/^(true|false)$/)) {\n          return token(TOKEN_BOOLEAN, tok, lineno, colno);\n        } else if (tok === 'none') {\n          return token(TOKEN_NONE, tok, lineno, colno);\n        /*\n         * Added to make the test `null is null` evaluate truthily.\n         * Otherwise, Nunjucks will look up null in the context and\n         * return `undefined`, which is not what we want. This *may* have\n         * consequences is someone is using null in their templates as a\n         * variable.\n         */\n        } else if (tok === 'null') {\n          return token(TOKEN_NONE, tok, lineno, colno);\n        } else if (tok) {\n          return token(TOKEN_SYMBOL, tok, lineno, colno);\n        } else {\n          throw new Error('Unexpected value while parsing: ' + tok);\n        }\n      }\n    } else {\n      // Parse out the template text, breaking on tag\n      // delimiters because we need to look for block/variable start\n      // tags (don't use the full delimChars for optimization)\n      let beginChars = (this.tags.BLOCK_START.charAt(0) +\n      this.tags.VARIABLE_START.charAt(0) +\n      this.tags.COMMENT_START.charAt(0) +\n      this.tags.COMMENT_END.charAt(0));\n\n      if (this.isFinished()) {\n        return null;\n      } else if ((tok = this._extractString(this.tags.BLOCK_START + '-')) ||\n        (tok = this._extractString(this.tags.BLOCK_START))) {\n        this.in_code = true;\n        return token(TOKEN_BLOCK_START, tok, lineno, colno);\n      } else if ((tok = this._extractString(this.tags.VARIABLE_START + '-')) ||\n        (tok = this._extractString(this.tags.VARIABLE_START))) {\n        this.in_code = true;\n        return token(TOKEN_VARIABLE_START, tok, lineno, colno);\n      } else {\n        tok = '';\n        let data;\n        let inComment = false;\n\n        if (this._matches(this.tags.COMMENT_START)) {\n          inComment = true;\n          tok = this._extractString(this.tags.COMMENT_START);\n        }\n\n        // Continually consume text, breaking on the tag delimiter\n        // characters and checking to see if it's a start tag.\n        //\n        // We could hit the end of the template in the middle of\n        // our looping, so check for the null return value from\n        // _extractUntil\n        while ((data = this._extractUntil(beginChars)) !== null) {\n          tok += data;\n\n          if ((this._matches(this.tags.BLOCK_START) ||\n            this._matches(this.tags.VARIABLE_START) ||\n            this._matches(this.tags.COMMENT_START)) &&\n            !inComment) {\n            if (this.lstripBlocks &&\n              this._matches(this.tags.BLOCK_START) &&\n              this.colno > 0 &&\n              this.colno <= tok.length) {\n              let lastLine = tok.slice(-this.colno);\n              if (/^\\s+$/.test(lastLine)) {\n                // Remove block leading whitespace from beginning of the string\n                tok = tok.slice(0, -this.colno);\n                if (!tok.length) {\n                  // All data removed, collapse to avoid unnecessary nodes\n                  // by returning next token (block start)\n                  return this.nextToken();\n                }\n              }\n            }\n            // If it is a start tag, stop looping\n            break;\n          } else if (this._matches(this.tags.COMMENT_END)) {\n            if (!inComment) {\n              throw new Error('unexpected end of comment');\n            }\n            tok += this._extractString(this.tags.COMMENT_END);\n            break;\n          } else {\n            // It does not match any tag, so add the character and\n            // carry on\n            tok += this.current();\n            this.forward();\n          }\n        }\n\n        if (data === null && inComment) {\n          throw new Error('expected end of comment, got end of file');\n        }\n\n        return token(inComment ? TOKEN_COMMENT : TOKEN_DATA,\n          tok,\n          lineno,\n          colno);\n      }\n    }\n  }\n\n  _parseString(delimiter) {\n    this.forward();\n\n    let str = '';\n\n    while (!this.isFinished() && this.current() !== delimiter) {\n      let cur = this.current();\n\n      if (cur === '\\\\') {\n        this.forward();\n        switch (this.current()) {\n          case 'n':\n            str += '\\n';\n            break;\n          case 't':\n            str += '\\t';\n            break;\n          case 'r':\n            str += '\\r';\n            break;\n          default:\n            str += this.current();\n        }\n        this.forward();\n      } else {\n        str += cur;\n        this.forward();\n      }\n    }\n\n    this.forward();\n    return str;\n  }\n\n  _matches(str) {\n    if (this.index + str.length > this.len) {\n      return null;\n    }\n\n    let m = this.str.slice(this.index, this.index + str.length);\n    return m === str;\n  }\n\n  _extractString(str) {\n    if (this._matches(str)) {\n      this.forwardN(str.length);\n      return str;\n    }\n    return null;\n  }\n\n  _extractUntil(charString) {\n    // Extract all non-matching chars, with the default matching set\n    // to everything\n    return this._extractMatching(true, charString || '');\n  }\n\n  _extract(charString) {\n    // Extract all matching chars (no default, so charString must be\n    // explicit)\n    return this._extractMatching(false, charString);\n  }\n\n  _extractMatching(breakOnMatch, charString) {\n    // Pull out characters until a breaking char is hit.\n    // If breakOnMatch is false, a non-matching char stops it.\n    // If breakOnMatch is true, a matching char stops it.\n\n    if (this.isFinished()) {\n      return null;\n    }\n\n    let first = charString.indexOf(this.current());\n\n    // Only proceed if the first character doesn't meet our condition\n    if ((breakOnMatch && first === -1) ||\n      (!breakOnMatch && first !== -1)) {\n      let t = this.current();\n      this.forward();\n\n      // And pull out all the chars one at a time until we hit a\n      // breaking char\n      let idx = charString.indexOf(this.current());\n\n      while (((breakOnMatch && idx === -1) ||\n        (!breakOnMatch && idx !== -1)) && !this.isFinished()) {\n        t += this.current();\n        this.forward();\n\n        idx = charString.indexOf(this.current());\n      }\n\n      return t;\n    }\n\n    return '';\n  }\n\n  _extractRegex(regex) {\n    let matches = this.currentStr().match(regex);\n    if (!matches) {\n      return null;\n    }\n\n    // Move forward whatever was matched\n    this.forwardN(matches[0].length);\n\n    return matches;\n  }\n\n  isFinished() {\n    return this.index >= this.len;\n  }\n\n  forwardN(n) {\n    for (let i = 0; i < n; i++) {\n      this.forward();\n    }\n  }\n\n  forward() {\n    this.index++;\n\n    if (this.previous() === '\\n') {\n      this.lineno++;\n      this.colno = 0;\n    } else {\n      this.colno++;\n    }\n  }\n\n  backN(n) {\n    for (let i = 0; i < n; i++) {\n      this.back();\n    }\n  }\n\n  back() {\n    this.index--;\n\n    if (this.current() === '\\n') {\n      this.lineno--;\n\n      let idx = this.src.lastIndexOf('\\n', this.index - 1);\n      if (idx === -1) {\n        this.colno = this.index;\n      } else {\n        this.colno = this.index - idx;\n      }\n    } else {\n      this.colno--;\n    }\n  }\n\n  // current returns current character\n  current() {\n    if (!this.isFinished()) {\n      return this.str.charAt(this.index);\n    }\n    return '';\n  }\n\n  // currentStr returns what's left of the unparsed string\n  currentStr() {\n    if (!this.isFinished()) {\n      return this.str.substr(this.index);\n    }\n    return '';\n  }\n\n  previous() {\n    return this.str.charAt(this.index - 1);\n  }\n}\n\nmodule.exports = {\n  lex(src, opts) {\n    return new Tokenizer(src, opts);\n  },\n\n  TOKEN_STRING: TOKEN_STRING,\n  TOKEN_WHITESPACE: TOKEN_WHITESPACE,\n  TOKEN_DATA: TOKEN_DATA,\n  TOKEN_BLOCK_START: TOKEN_BLOCK_START,\n  TOKEN_BLOCK_END: TOKEN_BLOCK_END,\n  TOKEN_VARIABLE_START: TOKEN_VARIABLE_START,\n  TOKEN_VARIABLE_END: TOKEN_VARIABLE_END,\n  TOKEN_COMMENT: TOKEN_COMMENT,\n  TOKEN_LEFT_PAREN: TOKEN_LEFT_PAREN,\n  TOKEN_RIGHT_PAREN: TOKEN_RIGHT_PAREN,\n  TOKEN_LEFT_BRACKET: TOKEN_LEFT_BRACKET,\n  TOKEN_RIGHT_BRACKET: TOKEN_RIGHT_BRACKET,\n  TOKEN_LEFT_CURLY: TOKEN_LEFT_CURLY,\n  TOKEN_RIGHT_CURLY: TOKEN_RIGHT_CURLY,\n  TOKEN_OPERATOR: TOKEN_OPERATOR,\n  TOKEN_COMMA: TOKEN_COMMA,\n  TOKEN_COLON: TOKEN_COLON,\n  TOKEN_TILDE: TOKEN_TILDE,\n  TOKEN_PIPE: TOKEN_PIPE,\n  TOKEN_INT: TOKEN_INT,\n  TOKEN_FLOAT: TOKEN_FLOAT,\n  TOKEN_BOOLEAN: TOKEN_BOOLEAN,\n  TOKEN_NONE: TOKEN_NONE,\n  TOKEN_SYMBOL: TOKEN_SYMBOL,\n  TOKEN_SPECIAL: TOKEN_SPECIAL,\n  TOKEN_REGEX: TOKEN_REGEX\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/lexer.js","'use strict';\n\nconst Loader = require('./loader');\nconst {PrecompiledLoader} = require('./precompiled-loader.js');\n\nclass WebLoader extends Loader {\n  constructor(baseURL, opts) {\n    super();\n    this.baseURL = baseURL || '.';\n    opts = opts || {};\n\n    // By default, the cache is turned off because there's no way\n    // to \"watch\" templates over HTTP, so they are re-downloaded\n    // and compiled each time. (Remember, PRECOMPILE YOUR\n    // TEMPLATES in production!)\n    this.useCache = !!opts.useCache;\n\n    // We default `async` to false so that the simple synchronous\n    // API can be used when you aren't doing anything async in\n    // your templates (which is most of the time). This performs a\n    // sync ajax request, but that's ok because it should *only*\n    // happen in development. PRECOMPILE YOUR TEMPLATES.\n    this.async = !!opts.async;\n  }\n\n  resolve(from, to) {\n    throw new Error('relative templates not support in the browser yet');\n  }\n\n  getSource(name, cb) {\n    var useCache = this.useCache;\n    var result;\n    this.fetch(this.baseURL + '/' + name, (err, src) => {\n      if (err) {\n        if (cb) {\n          cb(err.content);\n        } else if (err.status === 404) {\n          result = null;\n        } else {\n          throw err.content;\n        }\n      } else {\n        result = {\n          src: src,\n          path: name,\n          noCache: !useCache\n        };\n        this.emit('load', name, result);\n        if (cb) {\n          cb(null, result);\n        }\n      }\n    });\n\n    // if this WebLoader isn't running asynchronously, the\n    // fetch above would actually run sync and we'll have a\n    // result here\n    return result;\n  }\n\n  fetch(url, cb) {\n    // Only in the browser please\n    if (typeof window === 'undefined') {\n      throw new Error('WebLoader can only by used in a browser');\n    }\n\n    const ajax = new XMLHttpRequest();\n    let loading = true;\n\n    ajax.onreadystatechange = () => {\n      if (ajax.readyState === 4 && loading) {\n        loading = false;\n        if (ajax.status === 0 || ajax.status === 200) {\n          cb(null, ajax.responseText);\n        } else {\n          cb({\n            status: ajax.status,\n            content: ajax.responseText\n          });\n        }\n      }\n    };\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + 's=' +\n    (new Date().getTime());\n\n    ajax.open('GET', url, this.async);\n    ajax.send();\n  }\n}\n\nmodule.exports = {\n  WebLoader: WebLoader,\n  PrecompiledLoader: PrecompiledLoader\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/web-loaders.js","'use strict';\n\nconst lib = require('./src/lib');\nconst {Environment, Template} = require('./src/environment');\nconst Loader = require('./src/loader');\nconst loaders = require('./src/loaders');\nconst precompile = require('./src/precompile');\nconst compiler = require('./src/compiler');\nconst parser = require('./src/parser');\nconst lexer = require('./src/lexer');\nconst runtime = require('./src/runtime');\nconst nodes = require('./src/nodes');\nconst installJinjaCompat = require('./src/jinja-compat');\n\n// A single instance of an environment, since this is so commonly used\nlet e;\n\nfunction configure(templatesPath, opts) {\n  opts = opts || {};\n  if (lib.isObject(templatesPath)) {\n    opts = templatesPath;\n    templatesPath = null;\n  }\n\n  let TemplateLoader;\n  if (loaders.FileSystemLoader) {\n    TemplateLoader = new loaders.FileSystemLoader(templatesPath, {\n      watch: opts.watch,\n      noCache: opts.noCache\n    });\n  } else if (loaders.WebLoader) {\n    TemplateLoader = new loaders.WebLoader(templatesPath, {\n      useCache: opts.web && opts.web.useCache,\n      async: opts.web && opts.web.async\n    });\n  }\n\n  e = new Environment(TemplateLoader, opts);\n\n  if (opts && opts.express) {\n    e.express(opts.express);\n  }\n\n  return e;\n}\n\nmodule.exports = {\n  Environment: Environment,\n  Template: Template,\n  Loader: Loader,\n  FileSystemLoader: loaders.FileSystemLoader,\n  NodeResolveLoader: loaders.NodeResolveLoader,\n  PrecompiledLoader: loaders.PrecompiledLoader,\n  WebLoader: loaders.WebLoader,\n  compiler: compiler,\n  parser: parser,\n  lexer: lexer,\n  runtime: runtime,\n  lib: lib,\n  nodes: nodes,\n  installJinjaCompat: installJinjaCompat,\n  configure: configure,\n  reset() {\n    e = undefined;\n  },\n  compile(src, env, path, eagerCompile) {\n    if (!e) {\n      configure();\n    }\n    return new Template(src, env, path, eagerCompile);\n  },\n  render(name, ctx, cb) {\n    if (!e) {\n      configure();\n    }\n\n    return e.render(name, ctx, cb);\n  },\n  renderString(src, ctx, cb) {\n    if (!e) {\n      configure();\n    }\n\n    return e.renderString(src, ctx, cb);\n  },\n  precompile: (precompile) ? precompile.precompile : undefined,\n  precompileString: (precompile) ? precompile.precompileString : undefined,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/index.js","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-asap.js\n// module id = 12\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 13\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 14\n// module chunks = 0","// MIT license (by Elan Shanker).\n(function(globals) {\n  'use strict';\n\n  var executeSync = function(){\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'function'){\n      args[0].apply(null, args.splice(1));\n    }\n  };\n\n  var executeAsync = function(fn){\n    if (typeof setImmediate === 'function') {\n      setImmediate(fn);\n    } else if (typeof process !== 'undefined' && process.nextTick) {\n      process.nextTick(fn);\n    } else {\n      setTimeout(fn, 0);\n    }\n  };\n\n  var makeIterator = function (tasks) {\n    var makeCallback = function (index) {\n      var fn = function () {\n        if (tasks.length) {\n          tasks[index].apply(null, arguments);\n        }\n        return fn.next();\n      };\n      fn.next = function () {\n        return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n      };\n      return fn;\n    };\n    return makeCallback(0);\n  };\n  \n  var _isArray = Array.isArray || function(maybeArray){\n    return Object.prototype.toString.call(maybeArray) === '[object Array]';\n  };\n\n  var waterfall = function (tasks, callback, forceAsync) {\n    var nextTick = forceAsync ? executeAsync : executeSync;\n    callback = callback || function () {};\n    if (!_isArray(tasks)) {\n      var err = new Error('First argument to waterfall must be an array of functions');\n      return callback(err);\n    }\n    if (!tasks.length) {\n      return callback();\n    }\n    var wrapIterator = function (iterator) {\n      return function (err) {\n        if (err) {\n          callback.apply(null, arguments);\n          callback = function () {};\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var next = iterator.next();\n          if (next) {\n            args.push(wrapIterator(next));\n          } else {\n            args.push(callback);\n          }\n          nextTick(function () {\n            iterator.apply(null, args);\n          });\n        }\n      };\n    };\n    wrapIterator(makeIterator(tasks))();\n  };\n\n  if (typeof define !== 'undefined' && define.amd) {\n    define([], function () {\n      return waterfall;\n    }); // RequireJS\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = waterfall; // CommonJS\n  } else {\n    globals.waterfall = waterfall; // <script>\n  }\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/a-sync-waterfall/index.js\n// module id = 15\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/events/events.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nvar nodes = require('./nodes');\nvar lib = require('./lib');\n\nvar sym = 0;\nfunction gensym() {\n  return 'hole_' + sym++;\n}\n\n// copy-on-write version of map\nfunction mapCOW(arr, func) {\n  var res = null;\n  for (let i = 0; i < arr.length; i++) {\n    const item = func(arr[i]);\n\n    if (item !== arr[i]) {\n      if (!res) {\n        res = arr.slice();\n      }\n\n      res[i] = item;\n    }\n  }\n\n  return res || arr;\n}\n\nfunction walk(ast, func, depthFirst) {\n  if (!(ast instanceof nodes.Node)) {\n    return ast;\n  }\n\n  if (!depthFirst) {\n    const astT = func(ast);\n\n    if (astT && astT !== ast) {\n      return astT;\n    }\n  }\n\n  if (ast instanceof nodes.NodeList) {\n    const children = mapCOW(ast.children, (node) => walk(node, func, depthFirst));\n\n    if (children !== ast.children) {\n      ast = new nodes[ast.typename](ast.lineno, ast.colno, children);\n    }\n  } else if (ast instanceof nodes.CallExtension) {\n    const args = walk(ast.args, func, depthFirst);\n    const contentArgs = mapCOW(ast.contentArgs, (node) => walk(node, func, depthFirst));\n\n    if (args !== ast.args || contentArgs !== ast.contentArgs) {\n      ast = new nodes[ast.typename](ast.extName, ast.prop, args, contentArgs);\n    }\n  } else {\n    const props = ast.fields.map((field) => ast[field]);\n    const propsT = mapCOW(props, (prop) => walk(prop, func, depthFirst));\n\n    if (propsT !== props) {\n      ast = new nodes[ast.typename](ast.lineno, ast.colno);\n      propsT.forEach((prop, i) => {\n        ast[ast.fields[i]] = prop;\n      });\n    }\n  }\n\n  return depthFirst ? (func(ast) || ast) : ast;\n}\n\nfunction depthWalk(ast, func) {\n  return walk(ast, func, true);\n}\n\nfunction _liftFilters(node, asyncFilters, prop) {\n  var children = [];\n\n  var walked = depthWalk(prop ? node[prop] : node, (descNode) => {\n    let symbol;\n    if (descNode instanceof nodes.Block) {\n      return descNode;\n    } else if ((descNode instanceof nodes.Filter &&\n      lib.indexOf(asyncFilters, descNode.name.value) !== -1) ||\n      descNode instanceof nodes.CallExtensionAsync) {\n      symbol = new nodes.Symbol(descNode.lineno,\n        descNode.colno,\n        gensym());\n\n      children.push(new nodes.FilterAsync(descNode.lineno,\n        descNode.colno,\n        descNode.name,\n        descNode.args,\n        symbol));\n    }\n    return symbol;\n  });\n\n  if (prop) {\n    node[prop] = walked;\n  } else {\n    node = walked;\n  }\n\n  if (children.length) {\n    children.push(node);\n\n    return new nodes.NodeList(\n      node.lineno,\n      node.colno,\n      children\n    );\n  } else {\n    return node;\n  }\n}\n\nfunction liftFilters(ast, asyncFilters) {\n  return depthWalk(ast, (node) => {\n    if (node instanceof nodes.Output) {\n      return _liftFilters(node, asyncFilters);\n    } else if (node instanceof nodes.Set) {\n      return _liftFilters(node, asyncFilters, 'value');\n    } else if (node instanceof nodes.For) {\n      return _liftFilters(node, asyncFilters, 'arr');\n    } else if (node instanceof nodes.If) {\n      return _liftFilters(node, asyncFilters, 'cond');\n    } else if (node instanceof nodes.CallExtension) {\n      return _liftFilters(node, asyncFilters, 'args');\n    } else {\n      return undefined;\n    }\n  });\n}\n\nfunction liftSuper(ast) {\n  return walk(ast, (blockNode) => {\n    if (!(blockNode instanceof nodes.Block)) {\n      return;\n    }\n\n    let hasSuper = false;\n    const symbol = gensym();\n\n    blockNode.body = walk(blockNode.body, (node) => { // eslint-disable-line consistent-return\n      if (node instanceof nodes.FunCall && node.name.value === 'super') {\n        hasSuper = true;\n        return new nodes.Symbol(node.lineno, node.colno, symbol);\n      }\n    });\n\n    if (hasSuper) {\n      blockNode.body.children.unshift(new nodes.Super(\n        0, 0, blockNode.name, new nodes.Symbol(0, 0, symbol)\n      ));\n    }\n  });\n}\n\nfunction convertStatements(ast) {\n  return depthWalk(ast, (node) => {\n    if (!(node instanceof nodes.If) && !(node instanceof nodes.For)) {\n      return undefined;\n    }\n\n    let async = false;\n    walk(node, (child) => {\n      if (child instanceof nodes.FilterAsync ||\n        child instanceof nodes.IfAsync ||\n        child instanceof nodes.AsyncEach ||\n        child instanceof nodes.AsyncAll ||\n        child instanceof nodes.CallExtensionAsync) {\n        async = true;\n        // Stop iterating by returning the node\n        return child;\n      }\n      return undefined;\n    });\n\n    if (async) {\n      if (node instanceof nodes.If) {\n        return new nodes.IfAsync(\n          node.lineno,\n          node.colno,\n          node.cond,\n          node.body,\n          node.else_\n        );\n      } else if (node instanceof nodes.For && !(node instanceof nodes.AsyncAll)) {\n        return new nodes.AsyncEach(\n          node.lineno,\n          node.colno,\n          node.arr,\n          node.name,\n          node.body,\n          node.else_\n        );\n      }\n    }\n    return undefined;\n  });\n}\n\nfunction cps(ast, asyncFilters) {\n  return convertStatements(liftSuper(liftFilters(ast, asyncFilters)));\n}\n\nfunction transform(ast, asyncFilters) {\n  return cps(ast, asyncFilters || []);\n}\n\n// var parser = require('./parser');\n// var src = 'hello {% foo %}{% endfoo %} end';\n// var ast = transform(parser.parse(src, [new FooExtension()]), ['bar']);\n// nodes.printNodes(ast);\n\nmodule.exports = {\n  transform: transform\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/transformer.js","'use strict';\n\nvar lib = require('./lib');\nvar r = require('./runtime');\n\nvar exports = module.exports = {};\n\nfunction normalize(value, defaultValue) {\n  if (value === null || value === undefined || value === false) {\n    return defaultValue;\n  }\n  return value;\n}\n\nexports.abs = Math.abs;\n\nfunction isNaN(num) {\n  return num !== num; // eslint-disable-line no-self-compare\n}\n\nfunction batch(arr, linecount, fillWith) {\n  var i;\n  var res = [];\n  var tmp = [];\n\n  for (i = 0; i < arr.length; i++) {\n    if (i % linecount === 0 && tmp.length) {\n      res.push(tmp);\n      tmp = [];\n    }\n\n    tmp.push(arr[i]);\n  }\n\n  if (tmp.length) {\n    if (fillWith) {\n      for (i = tmp.length; i < linecount; i++) {\n        tmp.push(fillWith);\n      }\n    }\n\n    res.push(tmp);\n  }\n\n  return res;\n}\n\nexports.batch = batch;\n\nfunction capitalize(str) {\n  str = normalize(str, '');\n  const ret = str.toLowerCase();\n  return r.copySafeness(str, ret.charAt(0).toUpperCase() + ret.slice(1));\n}\n\nexports.capitalize = capitalize;\n\nfunction center(str, width) {\n  str = normalize(str, '');\n  width = width || 80;\n\n  if (str.length >= width) {\n    return str;\n  }\n\n  const spaces = width - str.length;\n  const pre = lib.repeat(' ', (spaces / 2) - (spaces % 2));\n  const post = lib.repeat(' ', spaces / 2);\n  return r.copySafeness(str, pre + str + post);\n}\n\nexports.center = center;\n\nfunction default_(val, def, bool) {\n  if (bool) {\n    return val || def;\n  } else {\n    return (val !== undefined) ? val : def;\n  }\n}\n\n// TODO: it is confusing to export something called 'default'\nexports['default'] = default_; // eslint-disable-line dot-notation\n\nfunction dictsort(val, caseSensitive, by) {\n  if (!lib.isObject(val)) {\n    throw new lib.TemplateError('dictsort filter: val must be an object');\n  }\n\n  let array = [];\n  // deliberately include properties from the object's prototype\n  for (let k in val) { // eslint-disable-line guard-for-in, no-restricted-syntax\n    array.push([k, val[k]]);\n  }\n\n  let si;\n  if (by === undefined || by === 'key') {\n    si = 0;\n  } else if (by === 'value') {\n    si = 1;\n  } else {\n    throw new lib.TemplateError(\n      'dictsort filter: You can only sort by either key or value');\n  }\n\n  array.sort((t1, t2) => {\n    var a = t1[si];\n    var b = t2[si];\n\n    if (!caseSensitive) {\n      if (lib.isString(a)) {\n        a = a.toUpperCase();\n      }\n      if (lib.isString(b)) {\n        b = b.toUpperCase();\n      }\n    }\n\n    return a > b ? 1 : (a === b ? 0 : -1); // eslint-disable-line no-nested-ternary\n  });\n\n  return array;\n}\n\nexports.dictsort = dictsort;\n\nfunction dump(obj, spaces) {\n  return JSON.stringify(obj, null, spaces);\n}\n\nexports.dump = dump;\n\nfunction escape(str) {\n  if (str instanceof r.SafeString) {\n    return str;\n  }\n  str = (str === null || str === undefined) ? '' : str;\n  return r.markSafe(lib.escape(str.toString()));\n}\n\nexports.escape = escape;\n\nfunction safe(str) {\n  if (str instanceof r.SafeString) {\n    return str;\n  }\n  str = (str === null || str === undefined) ? '' : str;\n  return r.markSafe(str.toString());\n}\n\nexports.safe = safe;\n\nfunction first(arr) {\n  return arr[0];\n}\n\nexports.first = first;\n\nfunction forceescape(str) {\n  str = (str === null || str === undefined) ? '' : str;\n  return r.markSafe(lib.escape(str.toString()));\n}\n\nexports.forceescape = forceescape;\n\nfunction groupby(arr, attr) {\n  return lib.groupBy(arr, attr, this.env.opts.throwOnUndefined);\n}\n\nexports.groupby = groupby;\n\nfunction indent(str, width, indentfirst) {\n  str = normalize(str, '');\n\n  if (str === '') {\n    return '';\n  }\n\n  width = width || 4;\n  // let res = '';\n  const lines = str.split('\\n');\n  const sp = lib.repeat(' ', width);\n\n  const res = lines.map((l, i) => {\n    return (i === 0 && !indentfirst) ? l : `${sp}${l}`;\n  }).join('\\n');\n\n  return r.copySafeness(str, res);\n}\n\nexports.indent = indent;\n\nfunction join(arr, del, attr) {\n  del = del || '';\n\n  if (attr) {\n    arr = lib.map(arr, (v) => v[attr]);\n  }\n\n  return arr.join(del);\n}\n\nexports.join = join;\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\n\nexports.last = last;\n\nfunction lengthFilter(val) {\n  var value = normalize(val, '');\n\n  if (value !== undefined) {\n    if (\n      (typeof Map === 'function' && value instanceof Map) ||\n      (typeof Set === 'function' && value instanceof Set)\n    ) {\n      // ECMAScript 2015 Maps and Sets\n      return value.size;\n    }\n    if (lib.isObject(value) && !(value instanceof r.SafeString)) {\n      // Objects (besides SafeStrings), non-primative Arrays\n      return lib.keys(value).length;\n    }\n    return value.length;\n  }\n  return 0;\n}\n\nexports.length = lengthFilter;\n\nfunction list(val) {\n  if (lib.isString(val)) {\n    return val.split('');\n  } else if (lib.isObject(val)) {\n    return lib._entries(val || {}).map(([key, value]) => ({key, value}));\n  } else if (lib.isArray(val)) {\n    return val;\n  } else {\n    throw new lib.TemplateError('list filter: type not iterable');\n  }\n}\n\nexports.list = list;\n\nfunction lower(str) {\n  str = normalize(str, '');\n  return str.toLowerCase();\n}\n\nexports.lower = lower;\n\nfunction nl2br(str) {\n  if (str === null || str === undefined) {\n    return '';\n  }\n  return r.copySafeness(str, str.replace(/\\r\\n|\\n/g, '<br />\\n'));\n}\n\nexports.nl2br = nl2br;\n\nfunction random(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexports.random = random;\n\n/**\n * Construct select or reject filter\n *\n * @param {boolean} expectedTestResult\n * @returns {function(array, string, *): array}\n */\nfunction getSelectOrReject(expectedTestResult) {\n  function filter(arr, testName = 'truthy', secondArg) {\n    const context = this;\n    const test = context.env.getTest(testName);\n\n    return lib.toArray(arr).filter(function examineTestResult(item) {\n      return test.call(context, item, secondArg) === expectedTestResult;\n    });\n  }\n\n  return filter;\n}\n\nexports.reject = getSelectOrReject(false);\n\nfunction rejectattr(arr, attr) {\n  return arr.filter((item) => !item[attr]);\n}\n\nexports.rejectattr = rejectattr;\n\nexports.select = getSelectOrReject(true);\n\nfunction selectattr(arr, attr) {\n  return arr.filter((item) => !!item[attr]);\n}\n\nexports.selectattr = selectattr;\n\nfunction replace(str, old, new_, maxCount) {\n  var originalStr = str;\n\n  if (old instanceof RegExp) {\n    return str.replace(old, new_);\n  }\n\n  if (typeof maxCount === 'undefined') {\n    maxCount = -1;\n  }\n\n  let res = ''; // Output\n\n  // Cast Numbers in the search term to string\n  if (typeof old === 'number') {\n    old = '' + old;\n  } else if (typeof old !== 'string') {\n    // If it is something other than number or string,\n    // return the original string\n    return str;\n  }\n\n  // Cast numbers in the replacement to string\n  if (typeof str === 'number') {\n    str = '' + str;\n  }\n\n  // If by now, we don't have a string, throw it back\n  if (typeof str !== 'string' && !(str instanceof r.SafeString)) {\n    return str;\n  }\n\n  // ShortCircuits\n  if (old === '') {\n    // Mimic the python behaviour: empty string is replaced\n    // by replacement e.g. \"abc\"|replace(\"\", \".\") -> .a.b.c.\n    res = new_ + str.split('').join(new_) + new_;\n    return r.copySafeness(str, res);\n  }\n\n  let nextIndex = str.indexOf(old);\n  // if # of replacements to perform is 0, or the string to does\n  // not contain the old value, return the string\n  if (maxCount === 0 || nextIndex === -1) {\n    return str;\n  }\n\n  let pos = 0;\n  let count = 0; // # of replacements made\n\n  while (nextIndex > -1 && (maxCount === -1 || count < maxCount)) {\n    // Grab the next chunk of src string and add it with the\n    // replacement, to the result\n    res += str.substring(pos, nextIndex) + new_;\n    // Increment our pointer in the src string\n    pos = nextIndex + old.length;\n    count++;\n    // See if there are any more replacements to be made\n    nextIndex = str.indexOf(old, pos);\n  }\n\n  // We've either reached the end, or done the max # of\n  // replacements, tack on any remaining string\n  if (pos < str.length) {\n    res += str.substring(pos);\n  }\n\n  return r.copySafeness(originalStr, res);\n}\n\nexports.replace = replace;\n\nfunction reverse(val) {\n  var arr;\n  if (lib.isString(val)) {\n    arr = list(val);\n  } else {\n    // Copy it\n    arr = lib.map(val, v => v);\n  }\n\n  arr.reverse();\n\n  if (lib.isString(val)) {\n    return r.copySafeness(val, arr.join(''));\n  }\n  return arr;\n}\n\nexports.reverse = reverse;\n\nfunction round(val, precision, method) {\n  precision = precision || 0;\n  const factor = Math.pow(10, precision);\n  let rounder;\n\n  if (method === 'ceil') {\n    rounder = Math.ceil;\n  } else if (method === 'floor') {\n    rounder = Math.floor;\n  } else {\n    rounder = Math.round;\n  }\n\n  return rounder(val * factor) / factor;\n}\n\nexports.round = round;\n\nfunction slice(arr, slices, fillWith) {\n  const sliceLength = Math.floor(arr.length / slices);\n  const extra = arr.length % slices;\n  const res = [];\n  let offset = 0;\n\n  for (let i = 0; i < slices; i++) {\n    const start = offset + (i * sliceLength);\n    if (i < extra) {\n      offset++;\n    }\n    const end = offset + ((i + 1) * sliceLength);\n\n    const currSlice = arr.slice(start, end);\n    if (fillWith && i >= extra) {\n      currSlice.push(fillWith);\n    }\n    res.push(currSlice);\n  }\n\n  return res;\n}\n\nexports.slice = slice;\n\nfunction sum(arr, attr, start = 0) {\n  if (attr) {\n    arr = lib.map(arr, (v) => v[attr]);\n  }\n\n  return start + arr.reduce((a, b) => a + b, 0);\n}\n\nexports.sum = sum;\n\nexports.sort = r.makeMacro(\n  ['value', 'reverse', 'case_sensitive', 'attribute'], [],\n  function sortFilter(arr, reversed, caseSens, attr) {\n    // Copy it\n    let array = lib.map(arr, v => v);\n    let getAttribute = lib.getAttrGetter(attr);\n\n    array.sort((a, b) => {\n      let x = (attr) ? getAttribute(a) : a;\n      let y = (attr) ? getAttribute(b) : b;\n\n      if (\n        this.env.opts.throwOnUndefined &&\n        attr && (x === undefined || y === undefined)\n      ) {\n        throw new TypeError(`sort: attribute \"${attr}\" resolved to undefined`);\n      }\n\n      if (!caseSens && lib.isString(x) && lib.isString(y)) {\n        x = x.toLowerCase();\n        y = y.toLowerCase();\n      }\n\n      if (x < y) {\n        return reversed ? 1 : -1;\n      } else if (x > y) {\n        return reversed ? -1 : 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return array;\n  });\n\nfunction string(obj) {\n  return r.copySafeness(obj, obj);\n}\n\nexports.string = string;\n\nfunction striptags(input, preserveLinebreaks) {\n  input = normalize(input, '');\n  let tags = /<\\/?([a-z][a-z0-9]*)\\b[^>]*>|<!--[\\s\\S]*?-->/gi;\n  let trimmedInput = trim(input.replace(tags, ''));\n  let res = '';\n  if (preserveLinebreaks) {\n    res = trimmedInput\n      .replace(/^ +| +$/gm, '') // remove leading and trailing spaces\n      .replace(/ +/g, ' ') // squash adjacent spaces\n      .replace(/(\\r\\n)/g, '\\n') // normalize linebreaks (CRLF -> LF)\n      .replace(/\\n\\n\\n+/g, '\\n\\n'); // squash abnormal adjacent linebreaks\n  } else {\n    res = trimmedInput.replace(/\\s+/gi, ' ');\n  }\n  return r.copySafeness(input, res);\n}\n\nexports.striptags = striptags;\n\nfunction title(str) {\n  str = normalize(str, '');\n  let words = str.split(' ').map(word => capitalize(word));\n  return r.copySafeness(str, words.join(' '));\n}\n\nexports.title = title;\n\nfunction trim(str) {\n  return r.copySafeness(str, str.replace(/^\\s*|\\s*$/g, ''));\n}\n\nexports.trim = trim;\n\nfunction truncate(input, length, killwords, end) {\n  var orig = input;\n  input = normalize(input, '');\n  length = length || 255;\n\n  if (input.length <= length) {\n    return input;\n  }\n\n  if (killwords) {\n    input = input.substring(0, length);\n  } else {\n    let idx = input.lastIndexOf(' ', length);\n    if (idx === -1) {\n      idx = length;\n    }\n\n    input = input.substring(0, idx);\n  }\n\n  input += (end !== undefined && end !== null) ? end : '...';\n  return r.copySafeness(orig, input);\n}\n\nexports.truncate = truncate;\n\nfunction upper(str) {\n  str = normalize(str, '');\n  return str.toUpperCase();\n}\n\nexports.upper = upper;\n\nfunction urlencode(obj) {\n  var enc = encodeURIComponent;\n  if (lib.isString(obj)) {\n    return enc(obj);\n  } else {\n    let keyvals = (lib.isArray(obj)) ? obj : lib._entries(obj);\n    return keyvals.map(([k, v]) => `${enc(k)}=${enc(v)}`).join('&');\n  }\n}\n\nexports.urlencode = urlencode;\n\n// For the jinja regexp, see\n// https://github.com/mitsuhiko/jinja2/blob/f15b814dcba6aa12bc74d1f7d0c881d55f7126be/jinja2/utils.py#L20-L23\nconst puncRe = /^(?:\\(|<|&lt;)?(.*?)(?:\\.|,|\\)|\\n|&gt;)?$/;\n// from http://blog.gerv.net/2011/05/html5_email_address_regexp/\nconst emailRe = /^[\\w.!#$%&'*+\\-\\/=?\\^`{|}~]+@[a-z\\d\\-]+(\\.[a-z\\d\\-]+)+$/i;\nconst httpHttpsRe = /^https?:\\/\\/.*$/;\nconst wwwRe = /^www\\./;\nconst tldRe = /\\.(?:org|net|com)(?:\\:|\\/|$)/;\n\nfunction urlize(str, length, nofollow) {\n  if (isNaN(length)) {\n    length = Infinity;\n  }\n\n  const noFollowAttr = (nofollow === true ? ' rel=\"nofollow\"' : '');\n\n  const words = str.split(/(\\s+)/).filter((word) => {\n    // If the word has no length, bail. This can happen for str with\n    // trailing whitespace.\n    return word && word.length;\n  }).map((word) => {\n    var matches = word.match(puncRe);\n    var possibleUrl = (matches) ? matches[1] : word;\n    var shortUrl = possibleUrl.substr(0, length);\n\n    // url that starts with http or https\n    if (httpHttpsRe.test(possibleUrl)) {\n      return `<a href=\"${possibleUrl}\"${noFollowAttr}>${shortUrl}</a>`;\n    }\n\n    // url that starts with www.\n    if (wwwRe.test(possibleUrl)) {\n      return `<a href=\"http://${possibleUrl}\"${noFollowAttr}>${shortUrl}</a>`;\n    }\n\n    // an email address of the form username@domain.tld\n    if (emailRe.test(possibleUrl)) {\n      return `<a href=\"mailto:${possibleUrl}\">${possibleUrl}</a>`;\n    }\n\n    // url that ends in .com, .org or .net that is not an email address\n    if (tldRe.test(possibleUrl)) {\n      return `<a href=\"http://${possibleUrl}\"${noFollowAttr}>${shortUrl}</a>`;\n    }\n\n    return word;\n  });\n\n  return words.join('');\n}\n\nexports.urlize = urlize;\n\nfunction wordcount(str) {\n  str = normalize(str, '');\n  const words = (str) ? str.match(/\\w+/g) : null;\n  return (words) ? words.length : null;\n}\n\nexports.wordcount = wordcount;\n\nfunction float(val, def) {\n  var res = parseFloat(val);\n  return (isNaN(res)) ? def : res;\n}\n\nexports.float = float;\n\nconst intFilter = r.makeMacro(\n  ['value', 'default', 'base'],\n  [],\n  function doInt(value, defaultValue, base = 10) {\n    var res = parseInt(value, base);\n    return (isNaN(res)) ? defaultValue : res;\n  }\n);\n\nexports.int = intFilter;\n\n// Aliases\nexports.d = exports.default;\nexports.e = exports.escape;\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/filters.js","'use strict';\n\nconst Loader = require('./loader');\n\nclass PrecompiledLoader extends Loader {\n  constructor(compiledTemplates) {\n    super();\n    this.precompiled = compiledTemplates || {};\n  }\n\n  getSource(name) {\n    if (this.precompiled[name]) {\n      return {\n        src: {\n          type: 'code',\n          obj: this.precompiled[name]\n        },\n        path: name\n      };\n    }\n    return null;\n  }\n}\n\nmodule.exports = {\n  PrecompiledLoader: PrecompiledLoader,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/precompiled-loader.js","'use strict';\n\nvar SafeString = require('./runtime').SafeString;\n\n/**\n * Returns `true` if the object is a function, otherwise `false`.\n * @param { any } value\n * @returns { boolean }\n */\nfunction callable(value) {\n  return typeof value === 'function';\n}\n\nexports.callable = callable;\n\n/**\n * Returns `true` if the object is strictly not `undefined`.\n * @param { any } value\n * @returns { boolean }\n */\nfunction defined(value) {\n  return value !== undefined;\n}\n\nexports.defined = defined;\n\n/**\n * Returns `true` if the operand (one) is divisble by the test's argument\n * (two).\n * @param { number } one\n * @param { number } two\n * @returns { boolean }\n */\nfunction divisibleby(one, two) {\n  return (one % two) === 0;\n}\n\nexports.divisibleby = divisibleby;\n\n/**\n * Returns true if the string has been escaped (i.e., is a SafeString).\n * @param { any } value\n * @returns { boolean }\n */\nfunction escaped(value) {\n  return value instanceof SafeString;\n}\n\nexports.escaped = escaped;\n\n/**\n * Returns `true` if the arguments are strictly equal.\n * @param { any } one\n * @param { any } two\n */\nfunction equalto(one, two) {\n  return one === two;\n}\n\nexports.equalto = equalto;\n\n// Aliases\nexports.eq = exports.equalto;\nexports.sameas = exports.equalto;\n\n/**\n * Returns `true` if the value is evenly divisible by 2.\n * @param { number } value\n * @returns { boolean }\n */\nfunction even(value) {\n  return value % 2 === 0;\n}\n\nexports.even = even;\n\n/**\n * Returns `true` if the value is falsy - if I recall correctly, '', 0, false,\n * undefined, NaN or null. I don't know if we should stick to the default JS\n * behavior or attempt to replicate what Python believes should be falsy (i.e.,\n * empty arrays, empty dicts, not 0...).\n * @param { any } value\n * @returns { boolean }\n */\nfunction falsy(value) {\n  return !value;\n}\n\nexports.falsy = falsy;\n\n/**\n * Returns `true` if the operand (one) is greater or equal to the test's\n * argument (two).\n * @param { number } one\n * @param { number } two\n * @returns { boolean }\n */\nfunction ge(one, two) {\n  return one >= two;\n}\n\nexports.ge = ge;\n\n/**\n * Returns `true` if the operand (one) is greater than the test's argument\n * (two).\n * @param { number } one\n * @param { number } two\n * @returns { boolean }\n */\nfunction greaterthan(one, two) {\n  return one > two;\n}\n\nexports.greaterthan = greaterthan;\n\n// alias\nexports.gt = exports.greaterthan;\n\n/**\n * Returns `true` if the operand (one) is less than or equal to the test's\n * argument (two).\n * @param { number } one\n * @param { number } two\n * @returns { boolean }\n */\nfunction le(one, two) {\n  return one <= two;\n}\n\nexports.le = le;\n\n/**\n * Returns `true` if the operand (one) is less than the test's passed argument\n * (two).\n * @param { number } one\n * @param { number } two\n * @returns { boolean }\n */\nfunction lessthan(one, two) {\n  return one < two;\n}\n\nexports.lessthan = lessthan;\n\n// alias\nexports.lt = exports.lessthan;\n\n/**\n * Returns `true` if the string is lowercased.\n * @param { string } value\n * @returns { boolean }\n */\nfunction lower(value) {\n  return value.toLowerCase() === value;\n}\n\nexports.lower = lower;\n\n/**\n * Returns `true` if the operand (one) is less than or equal to the test's\n * argument (two).\n * @param { number } one\n * @param { number } two\n * @returns { boolean }\n */\nfunction ne(one, two) {\n  return one !== two;\n}\n\nexports.ne = ne;\n\n/**\n * Returns true if the value is strictly equal to `null`.\n * @param { any }\n * @returns { boolean }\n */\nfunction nullTest(value) {\n  return value === null;\n}\n\nexports.null = nullTest;\n\n/**\n * Returns true if value is a number.\n * @param { any }\n * @returns { boolean }\n */\nfunction number(value) {\n  return typeof value === 'number';\n}\n\nexports.number = number;\n\n/**\n * Returns `true` if the value is *not* evenly divisible by 2.\n * @param { number } value\n * @returns { boolean }\n */\nfunction odd(value) {\n  return value % 2 === 1;\n}\n\nexports.odd = odd;\n\n/**\n * Returns `true` if the value is a string, `false` if not.\n * @param { any } value\n * @returns { boolean }\n */\nfunction string(value) {\n  return typeof value === 'string';\n}\n\nexports.string = string;\n\n/**\n * Returns `true` if the value is not in the list of things considered falsy:\n * '', null, undefined, 0, NaN and false.\n * @param { any } value\n * @returns { boolean }\n */\nfunction truthy(value) {\n  return !!value;\n}\n\nexports.truthy = truthy;\n\n/**\n * Returns `true` if the value is undefined.\n * @param { any } value\n * @returns { boolean }\n */\nfunction undefinedTest(value) {\n  return value === undefined;\n}\n\nexports.undefined = undefinedTest;\n\n/**\n * Returns `true` if the string is uppercased.\n * @param { string } value\n * @returns { boolean }\n */\nfunction upper(value) {\n  return value.toUpperCase() === value;\n}\n\nexports.upper = upper;\n\n/**\n * If ES6 features are available, returns `true` if the value implements the\n * `Symbol.iterator` method. If not, it's a string or Array.\n *\n * Could potentially cause issues if a browser exists that has Set and Map but\n * not Symbol.\n *\n * @param { any } value\n * @returns { boolean }\n */\nfunction iterable(value) {\n  if (typeof Symbol !== 'undefined') {\n    return !!value[Symbol.iterator];\n  } else {\n    return Array.isArray(value) || typeof value === 'string';\n  }\n}\n\nexports.iterable = iterable;\n\n/**\n * If ES6 features are available, returns `true` if the value is an object hash\n * or an ES6 Map. Otherwise just return if it's an object hash.\n * @param { any } value\n * @returns { boolean }\n */\nfunction mapping(value) {\n  // only maps and object hashes\n  var bool = value !== null\n    && value !== undefined\n    && typeof value === 'object'\n    && !Array.isArray(value);\n  if (Set) {\n    return bool && !(value instanceof Set);\n  } else {\n    return bool;\n  }\n}\n\nexports.mapping = mapping;\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/tests.js","'use strict';\n\nfunction cycler(items) {\n  var index = -1;\n\n  return {\n    current: null,\n    reset() {\n      index = -1;\n      this.current = null;\n    },\n\n    next() {\n      index++;\n      if (index >= items.length) {\n        index = 0;\n      }\n\n      this.current = items[index];\n      return this.current;\n    },\n  };\n}\n\nfunction joiner(sep) {\n  sep = sep || ',';\n  let first = true;\n\n  return () => {\n    const val = first ? '' : sep;\n    first = false;\n    return val;\n  };\n}\n\n// Making this a function instead so it returns a new object\n// each time it's called. That way, if something like an environment\n// uses it, they will each have their own copy.\nfunction globals() {\n  return {\n    range(start, stop, step) {\n      if (typeof stop === 'undefined') {\n        stop = start;\n        start = 0;\n        step = 1;\n      } else if (!step) {\n        step = 1;\n      }\n\n      const arr = [];\n      if (step > 0) {\n        for (let i = start; i < stop; i += step) {\n          arr.push(i);\n        }\n      } else {\n        for (let i = start; i > stop; i += step) { // eslint-disable-line for-direction\n          arr.push(i);\n        }\n      }\n      return arr;\n    },\n\n    cycler() {\n      return cycler(Array.prototype.slice.call(arguments));\n    },\n\n    joiner(sep) {\n      return joiner(sep);\n    }\n  };\n}\n\nmodule.exports = globals;\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/globals.js","const path = require('path');\n\nmodule.exports = function express(env, app) {\n  function NunjucksView(name, opts) {\n    this.name = name;\n    this.path = name;\n    this.defaultEngine = opts.defaultEngine;\n    this.ext = path.extname(name);\n    if (!this.ext && !this.defaultEngine) {\n      throw new Error('No default engine was specified and no extension was provided.');\n    }\n    if (!this.ext) {\n      this.name += (this.ext = (this.defaultEngine[0] !== '.' ? '.' : '') + this.defaultEngine);\n    }\n  }\n\n  NunjucksView.prototype.render = function render(opts, cb) {\n    env.render(this.name, opts, cb);\n  };\n\n  app.set('view', NunjucksView);\n  app.set('nunjucksEnv', env);\n  return env;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/express-app.js","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst {_prettifyError} = require('./lib');\nconst compiler = require('./compiler');\nconst {Environment} = require('./environment');\nconst precompileGlobal = require('./precompile-global');\n\nfunction match(filename, patterns) {\n  if (!Array.isArray(patterns)) {\n    return false;\n  }\n  return patterns.some((pattern) => filename.match(pattern));\n}\n\nfunction precompileString(str, opts) {\n  opts = opts || {};\n  opts.isString = true;\n  const env = opts.env || new Environment([]);\n  const wrapper = opts.wrapper || precompileGlobal;\n\n  if (!opts.name) {\n    throw new Error('the \"name\" option is required when compiling a string');\n  }\n  return wrapper([_precompile(str, opts.name, env)], opts);\n}\n\nfunction precompile(input, opts) {\n  // The following options are available:\n  //\n  // * name: name of the template (auto-generated when compiling a directory)\n  // * isString: input is a string, not a file path\n  // * asFunction: generate a callable function\n  // * force: keep compiling on error\n  // * env: the Environment to use (gets extensions and async filters from it)\n  // * include: which file/folders to include (folders are auto-included, files are auto-excluded)\n  // * exclude: which file/folders to exclude (folders are auto-included, files are auto-excluded)\n  // * wrapper: function(templates, opts) {...}\n  //       Customize the output format to store the compiled template.\n  //       By default, templates are stored in a global variable used by the runtime.\n  //       A custom loader will be necessary to load your custom wrapper.\n\n  opts = opts || {};\n  const env = opts.env || new Environment([]);\n  const wrapper = opts.wrapper || precompileGlobal;\n\n  if (opts.isString) {\n    return precompileString(input, opts);\n  }\n\n  const pathStats = fs.existsSync(input) && fs.statSync(input);\n  const precompiled = [];\n  const templates = [];\n\n  function addTemplates(dir) {\n    fs.readdirSync(dir).forEach((file) => {\n      const filepath = path.join(dir, file);\n      let subpath = filepath.substr(path.join(input, '/').length);\n      const stat = fs.statSync(filepath);\n\n      if (stat && stat.isDirectory()) {\n        subpath += '/';\n        if (!match(subpath, opts.exclude)) {\n          addTemplates(filepath);\n        }\n      } else if (match(subpath, opts.include)) {\n        templates.push(filepath);\n      }\n    });\n  }\n\n  if (pathStats.isFile()) {\n    precompiled.push(_precompile(\n      fs.readFileSync(input, 'utf-8'),\n      opts.name || input,\n      env\n    ));\n  } else if (pathStats.isDirectory()) {\n    addTemplates(input);\n\n    for (let i = 0; i < templates.length; i++) {\n      const name = templates[i].replace(path.join(input, '/'), '');\n\n      try {\n        precompiled.push(_precompile(\n          fs.readFileSync(templates[i], 'utf-8'),\n          name,\n          env\n        ));\n      } catch (e) {\n        if (opts.force) {\n          // Don't stop generating the output if we're\n          // forcing compilation.\n          console.error(e); // eslint-disable-line no-console\n        } else {\n          throw e;\n        }\n      }\n    }\n  }\n\n  return wrapper(precompiled, opts);\n}\n\nfunction _precompile(str, name, env) {\n  env = env || new Environment([]);\n\n  const asyncFilters = env.asyncFilters;\n  const extensions = env.extensionsList;\n  let template;\n\n  name = name.replace(/\\\\/g, '/');\n\n  try {\n    template = compiler.compile(str,\n      asyncFilters,\n      extensions,\n      name,\n      env.opts);\n  } catch (err) {\n    throw _prettifyError(name, false, err);\n  }\n\n  return {\n    name: name,\n    template: template\n  };\n}\n\nmodule.exports = {\n  precompile: precompile,\n  precompileString: precompileString\n};\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/precompile.js","'use strict';\n\nfunction precompileGlobal(templates, opts) {\n  var out = '';\n  opts = opts || {};\n\n  for (let i = 0; i < templates.length; i++) {\n    const name = JSON.stringify(templates[i].name);\n    const template = templates[i].template;\n\n    out += '(function() {' +\n      '(window.nunjucksPrecompiled = window.nunjucksPrecompiled || {})' +\n      '[' + name + '] = (function() {\\n' + template + '\\n})();\\n';\n\n    if (opts.asFunction) {\n      out += 'return function(ctx, cb) { return nunjucks.render(' + name + ', ctx, cb); }\\n';\n    }\n\n    out += '})();\\n';\n  }\n  return out;\n}\n\nmodule.exports = precompileGlobal;\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/precompile-global.js","function installCompat() {\n  'use strict';\n\n  /* eslint-disable camelcase */\n\n  // This must be called like `nunjucks.installCompat` so that `this`\n  // references the nunjucks instance\n  var runtime = this.runtime;\n  var lib = this.lib;\n  // Handle slim case where these 'modules' are excluded from the built source\n  var Compiler = this.compiler.Compiler;\n  var Parser = this.parser.Parser;\n  var nodes = this.nodes;\n  var lexer = this.lexer;\n\n  var orig_contextOrFrameLookup = runtime.contextOrFrameLookup;\n  var orig_memberLookup = runtime.memberLookup;\n  var orig_Compiler_assertType;\n  var orig_Parser_parseAggregate;\n  if (Compiler) {\n    orig_Compiler_assertType = Compiler.prototype.assertType;\n  }\n  if (Parser) {\n    orig_Parser_parseAggregate = Parser.prototype.parseAggregate;\n  }\n\n  function uninstall() {\n    runtime.contextOrFrameLookup = orig_contextOrFrameLookup;\n    runtime.memberLookup = orig_memberLookup;\n    if (Compiler) {\n      Compiler.prototype.assertType = orig_Compiler_assertType;\n    }\n    if (Parser) {\n      Parser.prototype.parseAggregate = orig_Parser_parseAggregate;\n    }\n  }\n\n  runtime.contextOrFrameLookup = function contextOrFrameLookup(context, frame, key) {\n    var val = orig_contextOrFrameLookup.apply(this, arguments);\n    if (val !== undefined) {\n      return val;\n    }\n    switch (key) {\n      case 'True':\n        return true;\n      case 'False':\n        return false;\n      case 'None':\n        return null;\n      default:\n        return undefined;\n    }\n  };\n\n  function getTokensState(tokens) {\n    return {\n      index: tokens.index,\n      lineno: tokens.lineno,\n      colno: tokens.colno\n    };\n  }\n\n  if (process.env.BUILD_TYPE !== 'SLIM' && nodes && Compiler && Parser) { // i.e., not slim mode\n    const Slice = nodes.Node.extend('Slice', {\n      fields: ['start', 'stop', 'step'],\n      init(lineno, colno, start, stop, step) {\n        start = start || new nodes.Literal(lineno, colno, null);\n        stop = stop || new nodes.Literal(lineno, colno, null);\n        step = step || new nodes.Literal(lineno, colno, 1);\n        this.parent(lineno, colno, start, stop, step);\n      }\n    });\n\n    Compiler.prototype.assertType = function assertType(node) {\n      if (node instanceof Slice) {\n        return;\n      }\n      orig_Compiler_assertType.apply(this, arguments);\n    };\n    Compiler.prototype.compileSlice = function compileSlice(node, frame) {\n      this._emit('(');\n      this._compileExpression(node.start, frame);\n      this._emit('),(');\n      this._compileExpression(node.stop, frame);\n      this._emit('),(');\n      this._compileExpression(node.step, frame);\n      this._emit(')');\n    };\n\n    Parser.prototype.parseAggregate = function parseAggregate() {\n      var origState = getTokensState(this.tokens);\n      // Set back one accounting for opening bracket/parens\n      origState.colno--;\n      origState.index--;\n      try {\n        return orig_Parser_parseAggregate.apply(this);\n      } catch (e) {\n        const errState = getTokensState(this.tokens);\n        const rethrow = () => {\n          lib._assign(this.tokens, errState);\n          return e;\n        };\n\n        // Reset to state before original parseAggregate called\n        lib._assign(this.tokens, origState);\n        this.peeked = false;\n\n        const tok = this.peekToken();\n        if (tok.type !== lexer.TOKEN_LEFT_BRACKET) {\n          throw rethrow();\n        } else {\n          this.nextToken();\n        }\n\n        const node = new Slice(tok.lineno, tok.colno);\n\n        // If we don't encounter a colon while parsing, this is not a slice,\n        // so re-raise the original exception.\n        let isSlice = false;\n\n        for (let i = 0; i <= node.fields.length; i++) {\n          if (this.skip(lexer.TOKEN_RIGHT_BRACKET)) {\n            break;\n          }\n          if (i === node.fields.length) {\n            if (isSlice) {\n              this.fail('parseSlice: too many slice components', tok.lineno, tok.colno);\n            } else {\n              break;\n            }\n          }\n          if (this.skip(lexer.TOKEN_COLON)) {\n            isSlice = true;\n          } else {\n            const field = node.fields[i];\n            node[field] = this.parseExpression();\n            isSlice = this.skip(lexer.TOKEN_COLON) || isSlice;\n          }\n        }\n        if (!isSlice) {\n          throw rethrow();\n        }\n        return new nodes.Array(tok.lineno, tok.colno, [node]);\n      }\n    };\n  }\n\n  function sliceLookup(obj, start, stop, step) {\n    obj = obj || [];\n    if (start === null) {\n      start = (step < 0) ? (obj.length - 1) : 0;\n    }\n    if (stop === null) {\n      stop = (step < 0) ? -1 : obj.length;\n    } else if (stop < 0) {\n      stop += obj.length;\n    }\n\n    if (start < 0) {\n      start += obj.length;\n    }\n\n    const results = [];\n\n    for (let i = start; ; i += step) {\n      if (i < 0 || i > obj.length) {\n        break;\n      }\n      if (step > 0 && i >= stop) {\n        break;\n      }\n      if (step < 0 && i <= stop) {\n        break;\n      }\n      results.push(runtime.memberLookup(obj, i));\n    }\n    return results;\n  }\n\n  function hasOwnProp(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n  }\n\n  const ARRAY_MEMBERS = {\n    pop(index) {\n      if (index === undefined) {\n        return this.pop();\n      }\n      if (index >= this.length || index < 0) {\n        throw new Error('KeyError');\n      }\n      return this.splice(index, 1);\n    },\n    append(element) {\n      return this.push(element);\n    },\n    remove(element) {\n      for (let i = 0; i < this.length; i++) {\n        if (this[i] === element) {\n          return this.splice(i, 1);\n        }\n      }\n      throw new Error('ValueError');\n    },\n    count(element) {\n      var count = 0;\n      for (let i = 0; i < this.length; i++) {\n        if (this[i] === element) {\n          count++;\n        }\n      }\n      return count;\n    },\n    index(element) {\n      var i;\n      if ((i = this.indexOf(element)) === -1) {\n        throw new Error('ValueError');\n      }\n      return i;\n    },\n    find(element) {\n      return this.indexOf(element);\n    },\n    insert(index, elem) {\n      return this.splice(index, 0, elem);\n    }\n  };\n  const OBJECT_MEMBERS = {\n    items() {\n      return lib._entries(this);\n    },\n    values() {\n      return lib._values(this);\n    },\n    keys() {\n      return lib.keys(this);\n    },\n    get(key, def) {\n      var output = this[key];\n      if (output === undefined) {\n        output = def;\n      }\n      return output;\n    },\n    has_key(key) {\n      return hasOwnProp(this, key);\n    },\n    pop(key, def) {\n      var output = this[key];\n      if (output === undefined && def !== undefined) {\n        output = def;\n      } else if (output === undefined) {\n        throw new Error('KeyError');\n      } else {\n        delete this[key];\n      }\n      return output;\n    },\n    popitem() {\n      const keys = lib.keys(this);\n      if (!keys.length) {\n        throw new Error('KeyError');\n      }\n      const k = keys[0];\n      const val = this[k];\n      delete this[k];\n      return [k, val];\n    },\n    setdefault(key, def = null) {\n      if (!(key in this)) {\n        this[key] = def;\n      }\n      return this[key];\n    },\n    update(kwargs) {\n      lib._assign(this, kwargs);\n      return null; // Always returns None\n    }\n  };\n  OBJECT_MEMBERS.iteritems = OBJECT_MEMBERS.items;\n  OBJECT_MEMBERS.itervalues = OBJECT_MEMBERS.values;\n  OBJECT_MEMBERS.iterkeys = OBJECT_MEMBERS.keys;\n\n  runtime.memberLookup = function memberLookup(obj, val, autoescape) {\n    if (arguments.length === 4) {\n      return sliceLookup.apply(this, arguments);\n    }\n    obj = obj || {};\n\n    // If the object is an object, return any of the methods that Python would\n    // otherwise provide.\n    if (lib.isArray(obj) && hasOwnProp(ARRAY_MEMBERS, val)) {\n      return ARRAY_MEMBERS[val].bind(obj);\n    }\n    if (lib.isObject(obj) && hasOwnProp(OBJECT_MEMBERS, val)) {\n      return OBJECT_MEMBERS[val].bind(obj);\n    }\n\n    return orig_memberLookup.apply(this, arguments);\n  };\n\n  return uninstall;\n}\n\nmodule.exports = installCompat;\n\n\n\n// WEBPACK FOOTER //\n// ./nunjucks/src/jinja-compat.js"],"sourceRoot":""},"metadata":{},"sourceType":"script"}