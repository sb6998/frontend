{"ast":null,"code":"var words = require('shellwords'); // TODO -F, --form\n// TODO --data-binary\n// TODO --data-urlencode\n// TODO -r, --range\n\n/**\n * Attempt to parse the given curl string.\n */\n\n\nmodule.exports = exports.default = function (s) {\n  if (0 != s.indexOf('curl ')) return;\n  var args = rewrite(words.split(s));\n  var out = {\n    method: 'GET',\n    header: {}\n  };\n  var state = '';\n  args.forEach(function (arg) {\n    switch (true) {\n      case isURL(arg):\n        out.url = arg;\n        break;\n\n      case arg == '-A' || arg == '--user-agent':\n        state = 'user-agent';\n        break;\n\n      case arg == '-H' || arg == '--header':\n        state = 'header';\n        break;\n\n      case arg == '-d' || arg == '--data' || arg == '--data-ascii':\n        state = 'data';\n        break;\n\n      case arg == '-u' || arg == '--user':\n        state = 'user';\n        break;\n\n      case arg == '-I' || arg == '--head':\n        out.method = 'HEAD';\n        break;\n\n      case arg == '-X' || arg == '--request':\n        state = 'method';\n        break;\n\n      case arg == '-b' || arg == '--cookie':\n        state = 'cookie';\n        break;\n\n      case arg == '--compressed':\n        out.header['Accept-Encoding'] = out.header['Accept-Encoding'] || 'deflate, gzip';\n        break;\n\n      case !!arg:\n        switch (state) {\n          case 'header':\n            var field = parseField(arg);\n            out.header[field[0]] = field[1];\n            state = '';\n            break;\n\n          case 'user-agent':\n            out.header['User-Agent'] = arg;\n            state = '';\n            break;\n\n          case 'data':\n            if (out.method == 'GET' || out.method == 'HEAD') out.method = 'POST';\n            out.header['Content-Type'] = out.header['Content-Type'] || 'application/x-www-form-urlencoded';\n            out.body = out.body ? out.body + '&' + arg : arg;\n            state = '';\n            break;\n\n          case 'user':\n            out.header['Authorization'] = 'Basic ' + btoa(arg);\n            state = '';\n            break;\n\n          case 'method':\n            out.method = arg;\n            state = '';\n            break;\n\n          case 'cookie':\n            out.header['Set-Cookie'] = arg;\n            state = '';\n            break;\n        }\n\n        break;\n    }\n  });\n  return out;\n};\n/**\n * Rewrite args for special cases such as -XPUT.\n */\n\n\nfunction rewrite(args) {\n  return args.reduce(function (args, a) {\n    if (0 == a.indexOf('-X')) {\n      args.push('-X');\n      args.push(a.slice(2));\n    } else {\n      args.push(a);\n    }\n\n    return args;\n  }, []);\n}\n/**\n * Parse header field.\n */\n\n\nfunction parseField(s) {\n  return s.split(/: (.+)/);\n}\n/**\n * Check if `s` looks like a url.\n */\n\n\nfunction isURL(s) {\n  // TODO: others at some point\n  return /^https?:\\/\\//.test(s);\n}","map":{"version":3,"sources":["/home/saurabh/Desktop/frontend/node_modules/parse-curl/index.js"],"names":["words","require","module","exports","default","s","indexOf","args","rewrite","split","out","method","header","state","forEach","arg","isURL","url","field","parseField","body","btoa","reduce","a","push","slice","test"],"mappings":"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","sourcesContent":["\nvar words = require('shellwords')\n\n// TODO -F, --form\n// TODO --data-binary\n// TODO --data-urlencode\n// TODO -r, --range\n\n/**\n * Attempt to parse the given curl string.\n */\n\nmodule.exports = exports.default = function(s) {\n  if (0 != s.indexOf('curl ')) return\n  var args = rewrite(words.split(s))\n  var out = { method: 'GET', header: {} }\n  var state = ''\n\n  args.forEach(function(arg){\n    switch (true) {\n      case isURL(arg):\n        out.url = arg\n        break;\n\n      case arg == '-A' || arg == '--user-agent':\n        state = 'user-agent'\n        break;\n\n      case arg == '-H' || arg == '--header':\n        state = 'header'\n        break;\n\n      case arg == '-d' || arg == '--data' || arg == '--data-ascii':\n        state = 'data'\n        break;\n\n      case arg == '-u' || arg == '--user':\n        state = 'user'\n        break;\n\n      case arg == '-I' || arg == '--head':\n        out.method = 'HEAD'\n        break;\n\n      case arg == '-X' || arg == '--request':\n        state = 'method'\n        break;\n\n      case arg == '-b' || arg =='--cookie':\n        state = 'cookie'\n        break;\n\n      case arg == '--compressed':\n        out.header['Accept-Encoding'] = out.header['Accept-Encoding'] || 'deflate, gzip'\n        break;\n\n      case !!arg:\n        switch (state) {\n          case 'header':\n            var field = parseField(arg)\n            out.header[field[0]] = field[1]\n            state = ''\n            break;\n          case 'user-agent':\n            out.header['User-Agent'] = arg\n            state = ''\n            break;\n          case 'data':\n            if (out.method == 'GET' || out.method == 'HEAD') out.method = 'POST'\n            out.header['Content-Type'] = out.header['Content-Type'] || 'application/x-www-form-urlencoded'\n            out.body = out.body\n              ? out.body + '&' + arg\n              : arg\n            state = ''\n            break;\n          case 'user':\n            out.header['Authorization'] = 'Basic ' + btoa(arg)\n            state = ''\n            break;\n          case 'method':\n            out.method = arg\n            state = ''\n            break;\n          case 'cookie':\n            out.header['Set-Cookie'] = arg\n            state = ''\n            break;\n        }\n        break;\n    }\n  })\n\n  return out\n}\n\n/**\n * Rewrite args for special cases such as -XPUT.\n */\n\nfunction rewrite(args) {\n  return args.reduce(function(args, a){\n    if (0 == a.indexOf('-X')) {\n      args.push('-X')\n      args.push(a.slice(2))\n    } else {\n      args.push(a)\n    }\n\n    return args\n  }, [])\n}\n\n/**\n * Parse header field.\n */\n\nfunction parseField(s) {\n  return s.split(/: (.+)/)\n}\n\n/**\n * Check if `s` looks like a url.\n */\n\nfunction isURL(s) {\n  // TODO: others at some point\n  return /^https?:\\/\\//.test(s)\n}\n"]},"metadata":{},"sourceType":"script"}